{"version":3,"file":"less.js","sources":["../lib/less/default-options.js","../lib/less-browser/utils.js","../lib/less-browser/browser.js","../lib/less-browser/add-default-options.js","../lib/less/data/colors.js","../lib/less/data/unit-conversions.js","../lib/less/data/index.js","../lib/less/tree/node.js","../lib/less/tree/color.js","../lib/less/tree/paren.js","../lib/less/tree/combinator.js","../lib/less/tree/element.js","../lib/less/constants.js","../node_modules/clone/clone.js","../lib/less/utils.js","../lib/less/less-error.js","../lib/less/tree/selector.js","../lib/less/tree/value.js","../lib/less/tree/keyword.js","../lib/less/tree/anonymous.js","../lib/less/tree/declaration.js","../lib/less/tree/debug-info.js","../lib/less/tree/comment.js","../lib/less/contexts.js","../lib/less/functions/function-registry.js","../lib/less/functions/default.js","../lib/less/tree/ruleset.js","../lib/less/tree/atrule.js","../lib/less/tree/detached-ruleset.js","../lib/less/tree/unit.js","../lib/less/tree/dimension.js","../lib/less/tree/operation.js","../lib/less/tree/expression.js","../lib/less/functions/function-caller.js","../lib/less/tree/call.js","../lib/less/tree/variable.js","../lib/less/tree/property.js","../lib/less/tree/attribute.js","../lib/less/tree/quoted.js","../lib/less/tree/url.js","../lib/less/tree/media.js","../lib/less/tree/import.js","../lib/less/tree/js-eval-node.js","../lib/less/tree/javascript.js","../lib/less/tree/assignment.js","../lib/less/tree/condition.js","../lib/less/tree/unicode-descriptor.js","../lib/less/tree/negative.js","../lib/less/tree/extend.js","../lib/less/tree/variable-call.js","../lib/less/tree/namespace-value.js","../lib/less/tree/mixin-definition.js","../lib/less/tree/mixin-call.js","../lib/less/tree/index.js","../lib/less/logger.js","../lib/less/environment/environment.js","../lib/less/environment/abstract-file-manager.js","../lib/less/environment/abstract-plugin-loader.js","../lib/less/visitors/visitor.js","../lib/less/visitors/import-sequencer.js","../lib/less/visitors/import-visitor.js","../lib/less/visitors/set-tree-visibility-visitor.js","../lib/less/visitors/extend-visitor.js","../lib/less/visitors/join-selector-visitor.js","../lib/less/visitors/to-css-visitor.js","../lib/less/visitors/index.js","../lib/less/parser/chunker.js","../lib/less/parser/parser-input.js","../lib/less/parser/parser.js","../lib/less/functions/boolean.js","../lib/less/functions/color.js","../lib/less/functions/color-blending.js","../lib/less/functions/data-uri.js","../lib/less/functions/list.js","../lib/less/functions/math-helper.js","../lib/less/functions/math.js","../lib/less/functions/number.js","../lib/less/functions/string.js","../lib/less/functions/svg.js","../lib/less/functions/types.js","../lib/less/functions/index.js","../lib/less/source-map-output.js","../lib/less/source-map-builder.js","../lib/less/transform-tree.js","../lib/less/parse-tree.js","../lib/less/import-manager.js","../lib/less/render.js","../lib/less/plugin-manager.js","../lib/less/parse.js","../lib/less/index.js","../lib/less-browser/file-manager.js","../lib/less-browser/plugin-loader.js","../lib/less-browser/log-listener.js","../lib/less-browser/error-reporting.js","../lib/less-browser/cache.js","../lib/less-browser/image-size.js","../lib/less-browser/index.js","../lib/less-browser/bootstrap.js"],"sourcesContent":["// Export a new default each time\nexport default () => ({\n /* Inline Javascript - @plugin still allowed */\n javascriptEnabled: false,\n\n /* Outputs a makefile import dependency list to stdout. */\n depends: false,\n\n /* (DEPRECATED) Compress using less built-in compression. \n  * This does an okay job but does not utilise all the tricks of \n  * dedicated css compression. */\n compress: false,\n\n /* Runs the less parser and just reports errors without any output. */\n lint: false,\n\n /* Sets available include paths.\n  * If the file in an @import rule does not exist at that exact location, \n  * less will look for it at the location(s) passed to this option. \n  * You might use this for instance to specify a path to a library which \n  * you want to be referenced simply and relatively in the less files. */\n paths: [],\n\n /* color output in the terminal */\n color: true,\n\n /* The strictImports controls whether the compiler will allow an @import inside of either \n  * @media blocks or (a later addition) other selector blocks.\n  * See: https://github.com/less/less.js/issues/656 */\n strictImports: false,\n\n /* Allow Imports from Insecure HTTPS Hosts */\n insecure: false,\n\n /* Allows you to add a path to every generated import and url in your css. \n  * This does not affect less import statements that are processed, just ones \n  * that are left in the output css. */\n rootpath: '',\n\n /* By default URLs are kept as-is, so if you import a file in a sub-directory \n  * that references an image, exactly the same URL will be output in the css. \n  * This option allows you to re-write URL's in imported files so that the \n  * URL is always relative to the base imported file */\n rewriteUrls: false,\n\n /* Compatibility with IE8. Used for limiting data-uri length */\n // true until 3.0\n ieCompat: false,\n\n /* How to process math \n  *   0 always           - eagerly try to solve all operations\n  *   1 parens-division  - require parens for division \"/\"\n  *   2 parens | strict  - require parens for all operations\n  *   3 strict-legacy    - legacy strict behavior (super-strict)\n  */\n math: 0,\n\n /* Without this option, less attempts to guess at the output unit when it does maths. */\n strictUnits: false,\n\n /* Effectively the declaration is put at the top of your base Less file, \n  * meaning it can be used but it also can be overridden if this variable \n  * is defined in the file. */\n globalVars: null,\n\n /* As opposed to the global variable option, this puts the declaration at the\n  * end of your base file, meaning it will override anything defined in your Less file. */\n modifyVars: null,\n\n /* This option allows you to specify a argument to go on to every URL.  */\n urlArgs: ''\n});","\nexport function extractId(href) {\n    return href.replace(/^[a-z-]+:\\/+?[^\\/]+/, '')  // Remove protocol & domain\n        .replace(/[\\?\\&]livereload=\\w+/, '')        // Remove LiveReload cachebuster\n        .replace(/^\\//, '')                         // Remove root /\n        .replace(/\\.[a-zA-Z]+$/, '')                // Remove simple extension\n        .replace(/[^\\.\\w-]+/g, '-')                 // Replace illegal characters\n        .replace(/\\./g, ':');                       // Replace dots with colons(for valid id)\n}\n\nexport function addDataAttr(options, tag) {\n    for (const opt in tag.dataset) {\n        if (tag.dataset.hasOwnProperty(opt)) {\n            if (opt === 'env' || opt === 'dumpLineNumbers' || opt === 'rootpath' || opt === 'errorReporting') {\n                options[opt] = tag.dataset[opt];\n            } else {\n                try {\n                    options[opt] = JSON.parse(tag.dataset[opt]);\n                }\n                catch (_) {}\n            }\n        }\n    }\n}\n","import * as utils from './utils';\n\nexport default {\n    createCSS: function (document, styles, sheet) {\n        // Strip the query-string\n        const href = sheet.href || '';\n\n        // If there is no title set, use the filename, minus the extension\n        const id = `less:${sheet.title || utils.extractId(href)}`;\n\n        // If this has already been inserted into the DOM, we may need to replace it\n        const oldStyleNode = document.getElementById(id);\n        let keepOldStyleNode = false;\n\n        // Create a new stylesheet node for insertion or (if necessary) replacement\n        const styleNode = document.createElement('style');\n        styleNode.setAttribute('type', 'text/css');\n        if (sheet.media) {\n            styleNode.setAttribute('media', sheet.media);\n        }\n        styleNode.id = id;\n\n        if (!styleNode.styleSheet) {\n            styleNode.appendChild(document.createTextNode(styles));\n\n            // If new contents match contents of oldStyleNode, don't replace oldStyleNode\n            keepOldStyleNode = (oldStyleNode !== null && oldStyleNode.childNodes.length > 0 && styleNode.childNodes.length > 0 &&\n                oldStyleNode.firstChild.nodeValue === styleNode.firstChild.nodeValue);\n        }\n\n        const head = document.getElementsByTagName('head')[0];\n\n        // If there is no oldStyleNode, just append; otherwise, only append if we need\n        // to replace oldStyleNode with an updated stylesheet\n        if (oldStyleNode === null || keepOldStyleNode === false) {\n            const nextEl = sheet && sheet.nextSibling || null;\n            if (nextEl) {\n                nextEl.parentNode.insertBefore(styleNode, nextEl);\n            } else {\n                head.appendChild(styleNode);\n            }\n        }\n        if (oldStyleNode && keepOldStyleNode === false) {\n            oldStyleNode.parentNode.removeChild(oldStyleNode);\n        }\n\n        // For IE.\n        // This needs to happen *after* the style element is added to the DOM, otherwise IE 7 and 8 may crash.\n        // See http://social.msdn.microsoft.com/Forums/en-US/7e081b65-878a-4c22-8e68-c10d39c2ed32/internet-explorer-crashes-appending-style-element-to-head\n        if (styleNode.styleSheet) {\n            try {\n                styleNode.styleSheet.cssText = styles;\n            } catch (e) {\n                throw new Error('Couldn\\'t reassign styleSheet.cssText.');\n            }\n        }\n    },\n    currentScript: function(window) {\n        const document = window.document;\n        return document.currentScript || (() => {\n            const scripts = document.getElementsByTagName('script');\n            return scripts[scripts.length - 1];\n        })();\n    }\n};\n","import {addDataAttr} from './utils';\nimport browser from './browser';\n\nexport default (window, options) => {\n\n    // use options from the current script tag data attribues\n    addDataAttr(options, browser.currentScript(window));\n\n    if (options.isFileProtocol === undefined) {\n        options.isFileProtocol = /^(file|(chrome|safari)(-extension)?|resource|qrc|app):/.test(window.location.protocol);\n    }\n\n    // Load styles asynchronously (default: false)\n    //\n    // This is set to `false` by default, so that the body\n    // doesn't start loading before the stylesheets are parsed.\n    // Setting this to `true` can result in flickering.\n    //\n    options.async = options.async || false;\n    options.fileAsync = options.fileAsync || false;\n\n    // Interval between watch polls\n    options.poll = options.poll || (options.isFileProtocol ? 1000 : 1500);\n\n    options.env = options.env || (window.location.hostname == '127.0.0.1' ||\n        window.location.hostname == '0.0.0.0'   ||\n        window.location.hostname == 'localhost' ||\n        (window.location.port &&\n            window.location.port.length > 0)      ||\n        options.isFileProtocol                   ? 'development'\n        : 'production');\n\n    const dumpLineNumbers = /!dumpLineNumbers:(comments|mediaquery|all)/.exec(window.location.hash);\n    if (dumpLineNumbers) {\n        options.dumpLineNumbers = dumpLineNumbers[1];\n    }\n\n    if (options.useFileCache === undefined) {\n        options.useFileCache = true;\n    }\n\n    if (options.onReady === undefined) {\n        options.onReady = true;\n    }\n\n    if (options.relativeUrls) {\n        options.rewriteUrls = 'all';\n    }\n};\n","export default {\n    'aliceblue':'#f0f8ff',\n    'antiquewhite':'#faebd7',\n    'aqua':'#00ffff',\n    'aquamarine':'#7fffd4',\n    'azure':'#f0ffff',\n    'beige':'#f5f5dc',\n    'bisque':'#ffe4c4',\n    'black':'#000000',\n    'blanchedalmond':'#ffebcd',\n    'blue':'#0000ff',\n    'blueviolet':'#8a2be2',\n    'brown':'#a52a2a',\n    'burlywood':'#deb887',\n    'cadetblue':'#5f9ea0',\n    'chartreuse':'#7fff00',\n    'chocolate':'#d2691e',\n    'coral':'#ff7f50',\n    'cornflowerblue':'#6495ed',\n    'cornsilk':'#fff8dc',\n    'crimson':'#dc143c',\n    'cyan':'#00ffff',\n    'darkblue':'#00008b',\n    'darkcyan':'#008b8b',\n    'darkgoldenrod':'#b8860b',\n    'darkgray':'#a9a9a9',\n    'darkgrey':'#a9a9a9',\n    'darkgreen':'#006400',\n    'darkkhaki':'#bdb76b',\n    'darkmagenta':'#8b008b',\n    'darkolivegreen':'#556b2f',\n    'darkorange':'#ff8c00',\n    'darkorchid':'#9932cc',\n    'darkred':'#8b0000',\n    'darksalmon':'#e9967a',\n    'darkseagreen':'#8fbc8f',\n    'darkslateblue':'#483d8b',\n    'darkslategray':'#2f4f4f',\n    'darkslategrey':'#2f4f4f',\n    'darkturquoise':'#00ced1',\n    'darkviolet':'#9400d3',\n    'deeppink':'#ff1493',\n    'deepskyblue':'#00bfff',\n    'dimgray':'#696969',\n    'dimgrey':'#696969',\n    'dodgerblue':'#1e90ff',\n    'firebrick':'#b22222',\n    'floralwhite':'#fffaf0',\n    'forestgreen':'#228b22',\n    'fuchsia':'#ff00ff',\n    'gainsboro':'#dcdcdc',\n    'ghostwhite':'#f8f8ff',\n    'gold':'#ffd700',\n    'goldenrod':'#daa520',\n    'gray':'#808080',\n    'grey':'#808080',\n    'green':'#008000',\n    'greenyellow':'#adff2f',\n    'honeydew':'#f0fff0',\n    'hotpink':'#ff69b4',\n    'indianred':'#cd5c5c',\n    'indigo':'#4b0082',\n    'ivory':'#fffff0',\n    'khaki':'#f0e68c',\n    'lavender':'#e6e6fa',\n    'lavenderblush':'#fff0f5',\n    'lawngreen':'#7cfc00',\n    'lemonchiffon':'#fffacd',\n    'lightblue':'#add8e6',\n    'lightcoral':'#f08080',\n    'lightcyan':'#e0ffff',\n    'lightgoldenrodyellow':'#fafad2',\n    'lightgray':'#d3d3d3',\n    'lightgrey':'#d3d3d3',\n    'lightgreen':'#90ee90',\n    'lightpink':'#ffb6c1',\n    'lightsalmon':'#ffa07a',\n    'lightseagreen':'#20b2aa',\n    'lightskyblue':'#87cefa',\n    'lightslategray':'#778899',\n    'lightslategrey':'#778899',\n    'lightsteelblue':'#b0c4de',\n    'lightyellow':'#ffffe0',\n    'lime':'#00ff00',\n    'limegreen':'#32cd32',\n    'linen':'#faf0e6',\n    'magenta':'#ff00ff',\n    'maroon':'#800000',\n    'mediumaquamarine':'#66cdaa',\n    'mediumblue':'#0000cd',\n    'mediumorchid':'#ba55d3',\n    'mediumpurple':'#9370d8',\n    'mediumseagreen':'#3cb371',\n    'mediumslateblue':'#7b68ee',\n    'mediumspringgreen':'#00fa9a',\n    'mediumturquoise':'#48d1cc',\n    'mediumvioletred':'#c71585',\n    'midnightblue':'#191970',\n    'mintcream':'#f5fffa',\n    'mistyrose':'#ffe4e1',\n    'moccasin':'#ffe4b5',\n    'navajowhite':'#ffdead',\n    'navy':'#000080',\n    'oldlace':'#fdf5e6',\n    'olive':'#808000',\n    'olivedrab':'#6b8e23',\n    'orange':'#ffa500',\n    'orangered':'#ff4500',\n    'orchid':'#da70d6',\n    'palegoldenrod':'#eee8aa',\n    'palegreen':'#98fb98',\n    'paleturquoise':'#afeeee',\n    'palevioletred':'#d87093',\n    'papayawhip':'#ffefd5',\n    'peachpuff':'#ffdab9',\n    'peru':'#cd853f',\n    'pink':'#ffc0cb',\n    'plum':'#dda0dd',\n    'powderblue':'#b0e0e6',\n    'purple':'#800080',\n    'rebeccapurple':'#663399',\n    'red':'#ff0000',\n    'rosybrown':'#bc8f8f',\n    'royalblue':'#4169e1',\n    'saddlebrown':'#8b4513',\n    'salmon':'#fa8072',\n    'sandybrown':'#f4a460',\n    'seagreen':'#2e8b57',\n    'seashell':'#fff5ee',\n    'sienna':'#a0522d',\n    'silver':'#c0c0c0',\n    'skyblue':'#87ceeb',\n    'slateblue':'#6a5acd',\n    'slategray':'#708090',\n    'slategrey':'#708090',\n    'snow':'#fffafa',\n    'springgreen':'#00ff7f',\n    'steelblue':'#4682b4',\n    'tan':'#d2b48c',\n    'teal':'#008080',\n    'thistle':'#d8bfd8',\n    'tomato':'#ff6347',\n    'turquoise':'#40e0d0',\n    'violet':'#ee82ee',\n    'wheat':'#f5deb3',\n    'white':'#ffffff',\n    'whitesmoke':'#f5f5f5',\n    'yellow':'#ffff00',\n    'yellowgreen':'#9acd32'\n};","export default {\n    length: {\n        'm': 1,\n        'cm': 0.01,\n        'mm': 0.001,\n        'in': 0.0254,\n        'px': 0.0254 / 96,\n        'pt': 0.0254 / 72,\n        'pc': 0.0254 / 72 * 12\n    },\n    duration: {\n        's': 1,\n        'ms': 0.001\n    },\n    angle: {\n        'rad': 1 / (2 * Math.PI),\n        'deg': 1 / 360,\n        'grad': 1 / 400,\n        'turn': 1\n    }\n};","import colors from './colors';\nimport unitConversions from './unit-conversions';\n\nexport default { colors, unitConversions };\n","class Node {\n    constructor() {\n        this.parent = null;\n        this.visibilityBlocks = undefined;\n        this.nodeVisible = undefined;\n        this.rootNode = null;\n        this.parsed = null;\n\n        const self = this;\n        Object.defineProperty(this, 'currentFileInfo', {\n            get: function() { return self.fileInfo(); }\n        });\n        Object.defineProperty(this, 'index', {\n            get: function() { return self.getIndex(); }\n        });\n\n    }\n\n    setParent(nodes, parent) {\n        function set(node) {\n            if (node && node instanceof Node) {\n                node.parent = parent;\n            }\n        }\n        if (Array.isArray(nodes)) {\n            nodes.forEach(set);\n        }\n        else {\n            set(nodes);\n        }\n    }\n\n    getIndex() {\n        return this._index || (this.parent && this.parent.getIndex()) || 0;\n    }\n\n    fileInfo() {\n        return this._fileInfo || (this.parent && this.parent.fileInfo()) || {};\n    }\n\n    isRulesetLike() {\n        return false;\n    }\n\n    toCSS(context) {\n        const strs = [];\n        this.genCSS(context, {\n            add: function(chunk, fileInfo, index) {\n                strs.push(chunk);\n            },\n            isEmpty: function () {\n                return strs.length === 0;\n            }\n        });\n        return strs.join('');\n    }\n\n    genCSS(context, output) {\n        output.add(this.value);\n    }\n\n    accept(visitor) {\n        this.value = visitor.visit(this.value);\n    }\n\n    eval() { return this; }\n\n    _operate(context, op, a, b) {\n        switch (op) {\n            case '+': return a + b;\n            case '-': return a - b;\n            case '*': return a * b;\n            case '/': return a / b;\n        }\n    }\n\n    fround(context, value) {\n        const precision = context && context.numPrecision;\n        // add \"epsilon\" to ensure numbers like 1.000000005 (represented as 1.000000004999...) are properly rounded:\n        return (precision) ? Number((value + 2e-16).toFixed(precision)) : value;\n    }\n\n    // Returns true if this node represents root of ast imported by reference\n    blocksVisibility() {\n        if (this.visibilityBlocks == null) {\n            this.visibilityBlocks = 0;\n        }\n        return this.visibilityBlocks !== 0;\n    }\n\n    addVisibilityBlock() {\n        if (this.visibilityBlocks == null) {\n            this.visibilityBlocks = 0;\n        }\n        this.visibilityBlocks = this.visibilityBlocks + 1;\n    }\n\n    removeVisibilityBlock() {\n        if (this.visibilityBlocks == null) {\n            this.visibilityBlocks = 0;\n        }\n        this.visibilityBlocks = this.visibilityBlocks - 1;\n    }\n\n    // Turns on node visibility - if called node will be shown in output regardless\n    // of whether it comes from import by reference or not\n    ensureVisibility() {\n        this.nodeVisible = true;\n    }\n\n    // Turns off node visibility - if called node will NOT be shown in output regardless\n    // of whether it comes from import by reference or not\n    ensureInvisibility() {\n        this.nodeVisible = false;\n    }\n\n    // return values:\n    // false - the node must not be visible\n    // true - the node must be visible\n    // undefined or null - the node has the same visibility as its parent\n    isVisible() {\n        return this.nodeVisible;\n    }\n\n    visibilityInfo() {\n        return {\n            visibilityBlocks: this.visibilityBlocks,\n            nodeVisible: this.nodeVisible\n        };\n    }\n\n    copyVisibilityInfo(info) {\n        if (!info) {\n            return;\n        }\n        this.visibilityBlocks = info.visibilityBlocks;\n        this.nodeVisible = info.nodeVisible;\n    }\n}\n\nNode.compare = (a, b) => {\n    /* returns:\n     -1: a < b\n     0: a = b\n     1: a > b\n     and *any* other value for a != b (e.g. undefined, NaN, -2 etc.) */\n\n    if ((a.compare) &&\n        // for \"symmetric results\" force toCSS-based comparison\n        // of Quoted or Anonymous if either value is one of those\n        !(b.type === 'Quoted' || b.type === 'Anonymous')) {\n        return a.compare(b);\n    } else if (b.compare) {\n        return -b.compare(a);\n    } else if (a.type !== b.type) {\n        return undefined;\n    }\n\n    a = a.value;\n    b = b.value;\n    if (!Array.isArray(a)) {\n        return a === b ? 0 : undefined;\n    }\n    if (a.length !== b.length) {\n        return undefined;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (Node.compare(a[i], b[i]) !== 0) {\n            return undefined;\n        }\n    }\n    return 0;\n};\n\nNode.numericCompare = (a, b) => a  <  b ? -1\n    : a === b ?  0\n    : a  >  b ?  1 : undefined;\nexport default Node;\n","import Node from './node';\nimport colors from '../data/colors';\n\n//\n// RGB Colors - #ff0014, #eee\n//\nclass Color extends Node {\n    constructor(rgb, a, originalForm) {\n        const self = this;\n        //\n        // The end goal here, is to parse the arguments\n        // into an integer triplet, such as `128, 255, 0`\n        //\n        // This facilitates operations and conversions.\n        //\n        if (Array.isArray(rgb)) {\n            this.rgb = rgb;\n        } else if (rgb.length >= 6) {\n            this.rgb = [];\n            rgb.match(/.{2}/g).map((c, i) => {\n                if (i < 3) {\n                    self.rgb.push(parseInt(c, 16));\n                } else {\n                    self.alpha = (parseInt(c, 16)) / 255;\n                }\n            });\n        } else {\n            this.rgb = [];\n            rgb.split('').map((c, i) => {\n                if (i < 3) {\n                    self.rgb.push(parseInt(c + c, 16));\n                } else {\n                    self.alpha = (parseInt(c + c, 16)) / 255;\n                }\n            });\n        }\n        this.alpha = this.alpha || (typeof a === 'number' ? a : 1);\n        if (typeof originalForm !== 'undefined') {\n            this.value = originalForm;\n        }\n    }\n\n    luma() {\n        let r = this.rgb[0] / 255;\n        let g = this.rgb[1] / 255;\n        let b = this.rgb[2] / 255;\n\n        r = (r <= 0.03928) ? r / 12.92 : Math.pow(((r + 0.055) / 1.055), 2.4);\n        g = (g <= 0.03928) ? g / 12.92 : Math.pow(((g + 0.055) / 1.055), 2.4);\n        b = (b <= 0.03928) ? b / 12.92 : Math.pow(((b + 0.055) / 1.055), 2.4);\n\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    }\n\n    genCSS(context, output) {\n        output.add(this.toCSS(context));\n    }\n\n    toCSS(context, doNotCompress) {\n        const compress = context && context.compress && !doNotCompress;\n        let color;\n        let alpha;\n        let colorFunction;\n        let args = [];\n\n        // `value` is set if this color was originally\n        // converted from a named color string so we need\n        // to respect this and try to output named color too.\n        alpha = this.fround(context, this.alpha);\n\n        if (this.value) {\n            if (this.value.indexOf('rgb') === 0) {\n                if (alpha < 1) {\n                    colorFunction = 'rgba';\n                }\n            } else if (this.value.indexOf('hsl') === 0) {\n                if (alpha < 1) {\n                    colorFunction = 'hsla';\n                } else {\n                    colorFunction = 'hsl';\n                }\n            } else {\n                return this.value;\n            }\n        } else {\n            if (alpha < 1) {\n                colorFunction = 'rgba';\n            }\n        }\n\n        switch (colorFunction) {\n            case 'rgba':\n                args = this.rgb.map(c => clamp(Math.round(c), 255)).concat(clamp(alpha, 1));\n                break;\n            case 'hsla':\n                args.push(clamp(alpha, 1));\n            case 'hsl':\n                color = this.toHSL();\n                args = [\n                    this.fround(context, color.h),\n                    `${this.fround(context, color.s * 100)}%`,\n                    `${this.fround(context, color.l * 100)}%`\n                ].concat(args);\n        }\n\n        if (colorFunction) {\n            // Values are capped between `0` and `255`, rounded and zero-padded.\n            return `${colorFunction}(${args.join(`,${compress ? '' : ' '}`)})`;\n        }\n\n        color = this.toRGB();\n\n        if (compress) {\n            const splitcolor = color.split('');\n\n            // Convert color to short format\n            if (splitcolor[1] === splitcolor[2] && splitcolor[3] === splitcolor[4] && splitcolor[5] === splitcolor[6]) {\n                color = `#${splitcolor[1]}${splitcolor[3]}${splitcolor[5]}`;\n            }\n        }\n\n        return color;\n    }\n\n    //\n    // Operations have to be done per-channel, if not,\n    // channels will spill onto each other. Once we have\n    // our result, in the form of an integer triplet,\n    // we create a new Color node to hold the result.\n    //\n    operate(context, op, other) {\n        const rgb = new Array(3);\n        const alpha = this.alpha * (1 - other.alpha) + other.alpha;\n        for (let c = 0; c < 3; c++) {\n            rgb[c] = this._operate(context, op, this.rgb[c], other.rgb[c]);\n        }\n        return new Color(rgb, alpha);\n    }\n\n    toRGB() {\n        return toHex(this.rgb);\n    }\n\n    toHSL() {\n        const r = this.rgb[0] / 255;\n        const g = this.rgb[1] / 255;\n        const b = this.rgb[2] / 255;\n        const a = this.alpha;\n        const max = Math.max(r, g, b);\n        const min = Math.min(r, g, b);\n        let h;\n        let s;\n        const l = (max + min) / 2;\n        const d = max - min;\n\n        if (max === min) {\n            h = s = 0;\n        } else {\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n            switch (max) {\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n                case g: h = (b - r) / d + 2;               break;\n                case b: h = (r - g) / d + 4;               break;\n            }\n            h /= 6;\n        }\n        return { h: h * 360, s, l, a };\n    }\n\n    // Adapted from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\n    toHSV() {\n        const r = this.rgb[0] / 255;\n        const g = this.rgb[1] / 255;\n        const b = this.rgb[2] / 255;\n        const a = this.alpha;\n        const max = Math.max(r, g, b);\n        const min = Math.min(r, g, b);\n        let h;\n        let s;\n        const v = max;\n\n        const d = max - min;\n        if (max === 0) {\n            s = 0;\n        } else {\n            s = d / max;\n        }\n\n        if (max === min) {\n            h = 0;\n        } else {\n            switch (max) {\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n                case g: h = (b - r) / d + 2; break;\n                case b: h = (r - g) / d + 4; break;\n            }\n            h /= 6;\n        }\n        return { h: h * 360, s, v, a };\n    }\n\n    toARGB() {\n        return toHex([this.alpha * 255].concat(this.rgb));\n    }\n\n    compare(x) {\n        return (x.rgb &&\n            x.rgb[0] === this.rgb[0] &&\n            x.rgb[1] === this.rgb[1] &&\n            x.rgb[2] === this.rgb[2] &&\n            x.alpha  === this.alpha) ? 0 : undefined;\n    }\n}\n\nColor.prototype.type = 'Color';\n\nfunction clamp(v, max) {\n    return Math.min(Math.max(v, 0), max);\n}\n\nfunction toHex(v) {\n    return `#${v.map(c => {\n    c = clamp(Math.round(c), 255);\n    return (c < 16 ? '0' : '') + c.toString(16);\n}).join('')}`;\n}\n\nColor.fromKeyword = keyword => {\n    let c;\n    const key = keyword.toLowerCase();\n    if (colors.hasOwnProperty(key)) {\n        c = new Color(colors[key].slice(1));\n    }\n    else if (key === 'transparent') {\n        c = new Color([0, 0, 0], 0);\n    }\n\n    if (c) {\n        c.value = keyword;\n        return c;\n    }\n};\nexport default Color;\n","import Node from './node';\n\nclass Paren extends Node {\n    constructor(node) {\n        this.value = node;\n    }\n\n    genCSS(context, output) {\n        output.add('(');\n        this.value.genCSS(context, output);\n        output.add(')');\n    }\n\n    eval(context) {\n        return new Paren(this.value.eval(context));\n    }\n}\n\nParen.prototype.type = 'Paren';\nexport default Paren;\n","import Node from './node';\n\nclass Combinator extends Node {\n    constructor(value) {\n        if (value === ' ') {\n            this.value = ' ';\n            this.emptyOrWhitespace = true;\n        } else {\n            this.value = value ? value.trim() : '';\n            this.emptyOrWhitespace = this.value === '';\n        }\n    }\n\n    genCSS(context, output) {\n        const spaceOrEmpty = (context.compress || _noSpaceCombinators[this.value]) ? '' : ' ';\n        output.add(spaceOrEmpty + this.value + spaceOrEmpty);\n    }\n}\n\nCombinator.prototype.type = 'Combinator';\nconst _noSpaceCombinators = {\n    '': true,\n    ' ': true,\n    '|': true\n};\nexport default Combinator;\n","import Node from './node';\nimport Paren from './paren';\nimport Combinator from './combinator';\n\nclass Element extends Node {\n    constructor(combinator, value, isVariable, index, currentFileInfo, visibilityInfo) {\n        this.combinator = combinator instanceof Combinator ?\n                          combinator : new Combinator(combinator);\n\n        if (typeof value === 'string') {\n            this.value = value.trim();\n        } else if (value) {\n            this.value = value;\n        } else {\n            this.value = '';\n        }\n        this.isVariable = isVariable;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.copyVisibilityInfo(visibilityInfo);\n        this.setParent(this.combinator, this);\n    }\n\n    accept(visitor) {\n        const value = this.value;\n        this.combinator = visitor.visit(this.combinator);\n        if (typeof value === 'object') {\n            this.value = visitor.visit(value);\n        }\n    }\n\n    eval(context) {\n        return new Element(this.combinator,\n                                 this.value.eval ? this.value.eval(context) : this.value,\n                                 this.isVariable,\n                                 this.getIndex(),\n                                 this.fileInfo(), this.visibilityInfo());\n    }\n\n    clone() {\n        return new Element(this.combinator,\n            this.value,\n            this.isVariable,\n            this.getIndex(),\n            this.fileInfo(), this.visibilityInfo());\n    }\n\n    genCSS(context, output) {\n        output.add(this.toCSS(context), this.fileInfo(), this.getIndex());\n    }\n\n    toCSS(context = {}) {\n        let value = this.value;\n        const firstSelector = context.firstSelector;\n        if (value instanceof Paren) {\n            // selector in parens should not be affected by outer selector\n            // flags (breaks only interpolated selectors - see #1973)\n            context.firstSelector = true;\n        }\n        value = value.toCSS ? value.toCSS(context) : value;\n        context.firstSelector = firstSelector;\n        if (value === '' && this.combinator.value.charAt(0) === '&') {\n            return '';\n        } else {\n            return this.combinator.toCSS(context) + value;\n        }\n    }\n}\n\nElement.prototype.type = 'Element';\nexport default Element;\n","\nexport const Math = {\n    ALWAYS: 0,\n    PARENS_DIVISION: 1,\n    PARENS: 2,\n    STRICT_LEGACY: 3\n};\n\nexport const RewriteUrls = {\n    OFF: 0,\n    LOCAL: 1,\n    ALL: 2\n};","var clone = (function() {\n'use strict';\n\nfunction _instanceof(obj, type) {\n  return type != null && obj instanceof type;\n}\n\nvar nativeMap;\ntry {\n  nativeMap = Map;\n} catch(_) {\n  // maybe a reference error because no `Map`. Give it a dummy value that no\n  // value will ever be an instanceof.\n  nativeMap = function() {};\n}\n\nvar nativeSet;\ntry {\n  nativeSet = Set;\n} catch(_) {\n  nativeSet = function() {};\n}\n\nvar nativePromise;\ntry {\n  nativePromise = Promise;\n} catch(_) {\n  nativePromise = function() {};\n}\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n *    should be cloned as well. Non-enumerable properties on the prototype\n *    chain will be ignored. (optional - false by default)\n*/\nfunction clone(parent, circular, depth, prototype, includeNonEnumerable) {\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    includeNonEnumerable = circular.includeNonEnumerable;\n    circular = circular.circular;\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth === 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      child = new nativeMap();\n    } else if (_instanceof(parent, nativeSet)) {\n      child = new nativeSet();\n    } else if (_instanceof(parent, nativePromise)) {\n      child = new nativePromise(function (resolve, reject) {\n        parent.then(function(value) {\n          resolve(_clone(value, depth - 1));\n        }, function(err) {\n          reject(_clone(err, depth - 1));\n        });\n      });\n    } else if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      if (Buffer.allocUnsafe) {\n        // Node.js >= 4.5.0\n        child = Buffer.allocUnsafe(parent.length);\n      } else {\n        // Older Node.js versions\n        child = new Buffer(parent.length);\n      }\n      parent.copy(child);\n      return child;\n    } else if (_instanceof(parent, Error)) {\n      child = Object.create(parent);\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      parent.forEach(function(value, key) {\n        var keyChild = _clone(key, depth - 1);\n        var valueChild = _clone(value, depth - 1);\n        child.set(keyChild, valueChild);\n      });\n    }\n    if (_instanceof(parent, nativeSet)) {\n      parent.forEach(function(value) {\n        var entryChild = _clone(value, depth - 1);\n        child.add(entryChild);\n      });\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(parent);\n      for (var i = 0; i < symbols.length; i++) {\n        // Don't need to worry about cloning a symbol because it is a primitive,\n        // like a number or string.\n        var symbol = symbols[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n          continue;\n        }\n        child[symbol] = _clone(parent[symbol], depth - 1);\n        if (!descriptor.enumerable) {\n          Object.defineProperty(child, symbol, {\n            enumerable: false\n          });\n        }\n      }\n    }\n\n    if (includeNonEnumerable) {\n      var allPropertyNames = Object.getOwnPropertyNames(parent);\n      for (var i = 0; i < allPropertyNames.length; i++) {\n        var propertyName = allPropertyNames[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n        if (descriptor && descriptor.enumerable) {\n          continue;\n        }\n        child[propertyName] = _clone(parent[propertyName], depth - 1);\n        Object.defineProperty(child, propertyName, {\n          enumerable: false\n        });\n      }\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n}\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n}\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n}\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n}\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n}\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n","/* jshint proto: true */\nimport * as Constants from './constants';\nimport CloneHelper from 'clone';\n\nexport function getLocation(index, inputStream) {\n    let n = index + 1;\n    let line = null;\n    let column = -1;\n\n    while (--n >= 0 && inputStream.charAt(n) !== '\\n') {\n        column++;\n    }\n\n    if (typeof index === 'number') {\n        line = (inputStream.slice(0, index).match(/\\n/g) || '').length;\n    }\n\n    return {\n        line,\n        column\n    };\n}\nexport function copyArray(arr) {\n    let i;\n    const length = arr.length;\n    const copy = new Array(length);\n\n    for (i = 0; i < length; i++) {\n        copy[i] = arr[i];\n    }\n    return copy;\n}\nexport function clone(obj) {\n    const cloned = {};\n    for (const prop in obj) {\n        if (obj.hasOwnProperty(prop)) {\n            cloned[prop] = obj[prop];\n        }\n    }\n    return cloned;\n}\nexport function copyOptions(obj1, obj2) {\n    if (obj2 && obj2._defaults) {\n        return obj2;\n    }\n    const opts = utils.defaults(obj1, obj2);\n    if (opts.strictMath) {\n        opts.math = Constants.Math.STRICT_LEGACY;\n    }\n    // Back compat with changed relativeUrls option\n    if (opts.relativeUrls) {\n        opts.rewriteUrls = Constants.RewriteUrls.ALL;\n    }\n    if (typeof opts.math === 'string') {\n        switch (opts.math.toLowerCase()) {\n            case 'always':\n                opts.math = Constants.Math.ALWAYS;\n                break;\n            case 'parens-division':\n                opts.math = Constants.Math.PARENS_DIVISION;\n                break;\n            case 'strict':\n            case 'parens':\n                opts.math = Constants.Math.PARENS;\n                break;\n            case 'strict-legacy':\n                opts.math = Constants.Math.STRICT_LEGACY;\n        }\n    }\n    if (typeof opts.rewriteUrls === 'string') {\n        switch (opts.rewriteUrls.toLowerCase()) {\n            case 'off':\n                opts.rewriteUrls = Constants.RewriteUrls.OFF;\n                break;\n            case 'local':\n                opts.rewriteUrls = Constants.RewriteUrls.LOCAL;\n                break;\n            case 'all':\n                opts.rewriteUrls = Constants.RewriteUrls.ALL;\n                break;\n        }\n    }\n    return opts;\n}\nexport function defaults(obj1, obj2) {\n    let newObj = obj2 || {};\n    if (!obj2._defaults) {\n        newObj = {};\n        const defaults = CloneHelper(obj1);\n        newObj._defaults = defaults;\n        const cloned = obj2 ? CloneHelper(obj2) : {};\n        Object.assign(newObj, defaults, cloned);\n    }\n    return newObj;\n}\nexport function merge(obj1, obj2) {\n    for (const prop in obj2) {\n        if (obj2.hasOwnProperty(prop)) {\n            obj1[prop] = obj2[prop];\n        }\n    }\n    return obj1;\n}\nexport function flattenArray(arr, result = []) {\n    for (let i = 0, length = arr.length; i < length; i++) {\n        const value = arr[i];\n        if (Array.isArray(value)) {\n            utils.flattenArray(value, result);\n        } else {\n            if (value !== undefined) {\n                result.push(value);\n            }\n        }\n    }\n    return result;\n}","import * as utils from './utils';\n/**\n * This is a centralized class of any error that could be thrown internally (mostly by the parser).\n * Besides standard .message it keeps some additional data like a path to the file where the error\n * occurred along with line and column numbers.\n *\n * @class\n * @extends Error\n * @type {module.LessError}\n *\n * @prop {string} type\n * @prop {string} filename\n * @prop {number} index\n * @prop {number} line\n * @prop {number} column\n * @prop {number} callLine\n * @prop {number} callExtract\n * @prop {string[]} extract\n *\n * @param {Object} e              - An error object to wrap around or just a descriptive object\n * @param {Object} fileContentMap - An object with file contents in 'contents' property (like importManager) @todo - move to fileManager?\n * @param {string} [currentFilename]\n */\nconst LessError = function LessError(e, fileContentMap, currentFilename) {\n    Error.call(this);\n\n    const filename = e.filename || currentFilename;\n\n    this.message = e.message;\n    this.stack = e.stack;\n\n    if (fileContentMap && filename) {\n        const input = fileContentMap.contents[filename];\n        const loc = utils.getLocation(e.index, input);\n        const line = loc.line;\n        const col  = loc.column;\n        const callLine = e.call && utils.getLocation(e.call, input).line;\n        const lines = input ? input.split('\\n') : '';\n\n        this.type = e.type || 'Syntax';\n        this.filename = filename;\n        this.index = e.index;\n        this.line = typeof line === 'number' ? line + 1 : null;\n        this.column = col;\n\n        if (!this.line && this.stack) {\n            const found = this.stack.match(/(<anonymous>|Function):(\\d+):(\\d+)/);\n\n            if (found) {\n                if (found[2]) {\n                    this.line = parseInt(found[2]) - 2;\n                }\n                if (found[3]) {\n                    this.column = parseInt(found[3]);\n                }\n            }\n        }\n\n        this.callLine = callLine + 1;\n        this.callExtract = lines[callLine];\n\n        this.extract = [\n            lines[this.line - 2],\n            lines[this.line - 1],\n            lines[this.line]\n        ];\n    }\n\n};\n\nif (typeof Object.create === 'undefined') {\n    const F = () => {};\n    F.prototype = Error.prototype;\n    LessError.prototype = new F();\n} else {\n    LessError.prototype = Object.create(Error.prototype);\n}\n\nLessError.prototype.constructor = LessError;\n\n/**\n * An overridden version of the default Object.prototype.toString\n * which uses additional information to create a helpful message.\n *\n * @param {Object} options\n * @returns {string}\n */\nLessError.prototype.toString = function(options = {}) {\n    let message = '';\n    const extract = this.extract || [];\n    let error = [];\n    let stylize = str => str;\n    if (options.stylize) {\n        const type = typeof options.stylize;\n        if (type !== 'function') {\n            throw Error(`options.stylize should be a function, got a ${type}!`);\n        }\n        stylize = options.stylize;\n    }\n\n    if (this.line !== null) {\n        if (typeof extract[0] === 'string') {\n            error.push(stylize(`${this.line - 1} ${extract[0]}`, 'grey'));\n        }\n\n        if (typeof extract[1] === 'string') {\n            let errorTxt = `${this.line} `;\n            if (extract[1]) {\n                errorTxt += extract[1].slice(0, this.column) +\n                    stylize(stylize(stylize(extract[1].substr(this.column, 1), 'bold') +\n                        extract[1].slice(this.column + 1), 'red'), 'inverse');\n            }\n            error.push(errorTxt);\n        }\n\n        if (typeof extract[2] === 'string') {\n            error.push(stylize(`${this.line + 1} ${extract[2]}`, 'grey'));\n        }\n        error = `${error.join('\\n') + stylize('', 'reset')}\\n`;\n    }\n\n    message += stylize(`${this.type}Error: ${this.message}`, 'red');\n    if (this.filename) {\n        message += stylize(' in ', 'red') + this.filename;\n    }\n    if (this.line) {\n        message += stylize(` on line ${this.line}, column ${this.column + 1}:`, 'grey');\n    }\n\n    message += `\\n${error}`;\n\n    if (this.callLine) {\n        message += `${stylize('from ', 'red') + (this.filename || '')}/n`;\n        message += `${stylize(this.callLine, 'grey')} ${this.callExtract}/n`;\n    }\n\n    return message;\n};\n\nexport default LessError;","import Node from './node';\nimport Element from './element';\nimport LessError from '../less-error';\n\nclass Selector extends Node {\n    constructor(elements, extendList, condition, index, currentFileInfo, visibilityInfo) {\n        this.extendList = extendList;\n        this.condition = condition;\n        this.evaldCondition = !condition;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.elements = this.getElements(elements);\n        this.mixinElements_ = undefined;\n        this.copyVisibilityInfo(visibilityInfo);\n        this.setParent(this.elements, this);\n    }\n\n    accept(visitor) {\n        if (this.elements) {\n            this.elements = visitor.visitArray(this.elements);\n        }\n        if (this.extendList) {\n            this.extendList = visitor.visitArray(this.extendList);\n        }\n        if (this.condition) {\n            this.condition = visitor.visit(this.condition);\n        }\n    }\n\n    createDerived(elements, extendList, evaldCondition) {\n        elements = this.getElements(elements);\n        const newSelector = new Selector(elements, extendList || this.extendList,\n            null, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n        newSelector.evaldCondition = (evaldCondition != null) ? evaldCondition : this.evaldCondition;\n        newSelector.mediaEmpty = this.mediaEmpty;\n        return newSelector;\n    }\n\n    getElements(els) {\n        if (!els) {\n            return [new Element('', '&', false, this._index, this._fileInfo)];\n        }\n        if (typeof els === 'string') {\n            this.parse.parseNode(\n                els, \n                ['selector'],\n                this._index, \n                this._fileInfo, \n                function(err, result) {\n                    if (err) {\n                        throw new LessError({\n                            index: err.index,\n                            message: err.message\n                        }, this.parse.imports, this._fileInfo.filename);\n                    }\n                    els = result[0].elements;\n                });\n        }\n        return els;\n    }\n\n    createEmptySelectors() {\n        const el = new Element('', '&', false, this._index, this._fileInfo);\n        const sels = [new Selector([el], null, null, this._index, this._fileInfo)];\n        sels[0].mediaEmpty = true;\n        return sels;\n    }\n\n    match(other) {\n        const elements = this.elements;\n        const len = elements.length;\n        let olen;\n        let i;\n\n        other = other.mixinElements();\n        olen = other.length;\n        if (olen === 0 || len < olen) {\n            return 0;\n        } else {\n            for (i = 0; i < olen; i++) {\n                if (elements[i].value !== other[i]) {\n                    return 0;\n                }\n            }\n        }\n\n        return olen; // return number of matched elements\n    }\n\n    mixinElements() {\n        if (this.mixinElements_) {\n            return this.mixinElements_;\n        }\n\n        let elements = this.elements.map( v => v.combinator.value + (v.value.value || v.value)).join('').match(/[,&#\\*\\.\\w-]([\\w-]|(\\\\.))*/g);\n\n        if (elements) {\n            if (elements[0] === '&') {\n                elements.shift();\n            }\n        } else {\n            elements = [];\n        }\n\n        return (this.mixinElements_ = elements);\n    }\n\n    isJustParentSelector() {\n        return !this.mediaEmpty &&\n            this.elements.length === 1 &&\n            this.elements[0].value === '&' &&\n            (this.elements[0].combinator.value === ' ' || this.elements[0].combinator.value === '');\n    }\n\n    eval(context) {\n        const evaldCondition = this.condition && this.condition.eval(context);\n        let elements = this.elements;\n        let extendList = this.extendList;\n\n        elements = elements && elements.map(e => e.eval(context));\n        extendList = extendList && extendList.map(extend => extend.eval(context));\n\n        return this.createDerived(elements, extendList, evaldCondition);\n    }\n\n    genCSS(context, output) {\n        let i;\n        let element;\n        if ((!context || !context.firstSelector) && this.elements[0].combinator.value === '') {\n            output.add(' ', this.fileInfo(), this.getIndex());\n        }\n        for (i = 0; i < this.elements.length; i++) {\n            element = this.elements[i];\n            element.genCSS(context, output);\n        }\n    }\n\n    getIsOutput() {\n        return this.evaldCondition;\n    }\n}\n\nSelector.prototype.type = 'Selector';\nexport default Selector;\n","import Node from './node';\n\nclass Value extends Node {\n    constructor(value) {\n        if (!value) {\n            throw new Error('Value requires an array argument');\n        }\n        if (!Array.isArray(value)) {\n            this.value = [ value ];\n        }\n        else {\n            this.value = value;\n        }\n    }\n\n    accept(visitor) {\n        if (this.value) {\n            this.value = visitor.visitArray(this.value);\n        }\n    }\n\n    eval(context) {\n        if (this.value.length === 1) {\n            return this.value[0].eval(context);\n        } else {\n            return new Value(this.value.map(v => v.eval(context)));\n        }\n    }\n\n    genCSS(context, output) {\n        let i;\n        for (i = 0; i < this.value.length; i++) {\n            this.value[i].genCSS(context, output);\n            if (i + 1 < this.value.length) {\n                output.add((context && context.compress) ? ',' : ', ');\n            }\n        }\n    }\n}\n\nValue.prototype.type = 'Value';\nexport default Value;\n","import Node from './node';\n\nclass Keyword extends Node {\n    constructor(value) { this.value = value; }\n\n    genCSS(context, output) {\n        if (this.value === '%') { throw { type: 'Syntax', message: 'Invalid % without number' }; }\n        output.add(this.value);\n    }\n}\n\nKeyword.prototype.type = 'Keyword';\n\nKeyword.True = new Keyword('true');\nKeyword.False = new Keyword('false');\n\nexport default Keyword;\n","import Node from './node';\n\nclass Anonymous extends Node {\n    constructor(value, index, currentFileInfo, mapLines, rulesetLike, visibilityInfo) {\n        this.value = value;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.mapLines = mapLines;\n        this.rulesetLike = (typeof rulesetLike === 'undefined') ? false : rulesetLike;\n        this.allowRoot = true;\n        this.copyVisibilityInfo(visibilityInfo);\n    }\n\n    eval() {\n        return new Anonymous(this.value, this._index, this._fileInfo, this.mapLines, this.rulesetLike, this.visibilityInfo());\n    }\n\n    compare(other) {\n        return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\n    }\n\n    isRulesetLike() {\n        return this.rulesetLike;\n    }\n\n    genCSS(context, output) {\n        this.nodeVisible = Boolean(this.value);\n        if (this.nodeVisible) {\n            output.add(this.value, this._fileInfo, this._index, this.mapLines);\n        }\n    }\n}\n\nAnonymous.prototype.type = 'Anonymous';\nexport default Anonymous;\n","import Node from './node';\nimport Value from './value';\nimport Keyword from './keyword';\nimport Anonymous from './anonymous';\nimport * as Constants from '../constants';\nconst MATH = Constants.Math;\n\n\nclass Declaration extends Node {\n    constructor(name, value, important, merge, index, currentFileInfo, inline, variable) {\n        this.name = name;\n        this.value = (value instanceof Node) ? value : new Value([value ? new Anonymous(value) : null]);\n        this.important = important ? ` ${important.trim()}` : '';\n        this.merge = merge;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.inline = inline || false;\n        this.variable = (variable !== undefined) ? variable\n            : (name.charAt && (name.charAt(0) === '@'));\n        this.allowRoot = true;\n        this.setParent(this.value, this);\n    }\n\n    genCSS(context, output) {\n        output.add(this.name + (context.compress ? ':' : ': '), this.fileInfo(), this.getIndex());\n        try {\n            this.value.genCSS(context, output);\n        }\n        catch (e) {\n            e.index = this._index;\n            e.filename = this._fileInfo.filename;\n            throw e;\n        }\n        output.add(this.important + ((this.inline || (context.lastRule && context.compress)) ? '' : ';'), this._fileInfo, this._index);\n    }\n\n    eval(context) {\n        let mathBypass = false;\n        let prevMath;\n        let name = this.name;\n        let evaldValue;\n        let variable = this.variable;\n        if (typeof name !== 'string') {\n            // expand 'primitive' name directly to get\n            // things faster (~10% for benchmark.less):\n            name = (name.length === 1) && (name[0] instanceof Keyword) ?\n                    name[0].value : evalName(context, name);\n            variable = false; // never treat expanded interpolation as new variable name\n        }\n\n        // @todo remove when parens-division is default\n        if (name === 'font' && context.math === MATH.ALWAYS) {\n            mathBypass = true;\n            prevMath = context.math;\n            context.math = MATH.PARENS_DIVISION;\n        }\n        try {\n            context.importantScope.push({});\n            evaldValue = this.value.eval(context);\n\n            if (!this.variable && evaldValue.type === 'DetachedRuleset') {\n                throw { message: 'Rulesets cannot be evaluated on a property.',\n                    index: this.getIndex(), filename: this.fileInfo().filename };\n            }\n            let important = this.important;\n            const importantResult = context.importantScope.pop();\n            if (!important && importantResult.important) {\n                important = importantResult.important;\n            }\n\n            return new Declaration(name,\n                              evaldValue,\n                              important,\n                              this.merge,\n                              this.getIndex(), this.fileInfo(), this.inline,\n                                  variable);\n        }\n        catch (e) {\n            if (typeof e.index !== 'number') {\n                e.index = this.getIndex();\n                e.filename = this.fileInfo().filename;\n            }\n            throw e;\n        }\n        finally {\n            if (mathBypass) {\n                context.math = prevMath;\n            }\n        }\n    }\n\n    makeImportant() {\n        return new Declaration(this.name,\n                              this.value,\n                              '!important',\n                              this.merge,\n                              this.getIndex(), this.fileInfo(), this.inline);\n    }\n}\n\nfunction evalName(context, name) {\n    let value = '';\n    let i;\n    const n = name.length;\n    const output = {add: function (s) {value += s;}};\n    for (i = 0; i < n; i++) {\n        name[i].eval(context).genCSS(context, output);\n    }\n    return value;\n}\n\nDeclaration.prototype.type = 'Declaration';\nexport default Declaration;","const debugInfo = (context, ctx, lineSeparator) => {\n    let result = '';\n    if (context.dumpLineNumbers && !context.compress) {\n        switch (context.dumpLineNumbers) {\n            case 'comments':\n                result = debugInfo.asComment(ctx);\n                break;\n            case 'mediaquery':\n                result = debugInfo.asMediaQuery(ctx);\n                break;\n            case 'all':\n                result = debugInfo.asComment(ctx) + (lineSeparator || '') + debugInfo.asMediaQuery(ctx);\n                break;\n        }\n    }\n    return result;\n};\n\ndebugInfo.asComment = ctx => `/* line ${ctx.debugInfo.lineNumber}, ${ctx.debugInfo.fileName} */\\n`;\n\ndebugInfo.asMediaQuery = ctx => {\n    let filenameWithProtocol = ctx.debugInfo.fileName;\n    if (!/^[a-z]+:\\/\\//i.test(filenameWithProtocol)) {\n        filenameWithProtocol = `file://${filenameWithProtocol}`;\n    }\n    return `@media -sass-debug-info{filename{font-family:${filenameWithProtocol.replace(/([.:\\/\\\\])/g, a => {\n    if (a == '\\\\') {\n        a = '\\/';\n    }\n    return `\\\\${a}`;\n})}}line{font-family:\\\\00003${ctx.debugInfo.lineNumber}}}\\n`;\n};\n\nexport default debugInfo;\n","import Node from './node';\nimport getDebugInfo from './debug-info';\n\nclass Comment extends Node {\n    constructor(value, isLineComment, index, currentFileInfo) {\n        this.value = value;\n        this.isLineComment = isLineComment;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.allowRoot = true;\n    }\n\n    genCSS(context, output) {\n        if (this.debugInfo) {\n            output.add(getDebugInfo(context, this), this.fileInfo(), this.getIndex());\n        }\n        output.add(this.value);\n    }\n\n    isSilent(context) {\n        const isCompressed = context.compress && this.value[2] !== '!';\n        return this.isLineComment || isCompressed;\n    }\n}\n\nComment.prototype.type = 'Comment';\nexport default Comment;\n","const contexts = {};\nexport default contexts;\nimport * as Constants from './constants';\n\nconst copyFromOriginal = function copyFromOriginal(original, destination, propertiesToCopy) {\n    if (!original) { return; }\n\n    for (let i = 0; i < propertiesToCopy.length; i++) {\n        if (original.hasOwnProperty(propertiesToCopy[i])) {\n            destination[propertiesToCopy[i]] = original[propertiesToCopy[i]];\n        }\n    }\n};\n\n/*\n parse is used whilst parsing\n */\nconst parseCopyProperties = [\n    // options\n    'paths',            // option - unmodified - paths to search for imports on\n    'rewriteUrls',      // option - whether to adjust URL's to be relative\n    'rootpath',         // option - rootpath to append to URL's\n    'strictImports',    // option -\n    'insecure',         // option - whether to allow imports from insecure ssl hosts\n    'dumpLineNumbers',  // option - whether to dump line numbers\n    'compress',         // option - whether to compress\n    'syncImport',       // option - whether to import synchronously\n    'chunkInput',       // option - whether to chunk input. more performant but causes parse issues.\n    'mime',             // browser only - mime type for sheet import\n    'useFileCache',     // browser only - whether to use the per file session cache\n    // context\n    'processImports',   // option & context - whether to process imports. if false then imports will not be imported.\n                        // Used by the import manager to stop multiple import visitors being created.\n    'pluginManager'     // Used as the plugin manager for the session\n];\n\ncontexts.Parse = function(options) {\n    copyFromOriginal(options, this, parseCopyProperties);\n\n    if (typeof this.paths === 'string') { this.paths = [this.paths]; }\n};\n\nconst evalCopyProperties = [\n    'paths',             // additional include paths\n    'compress',          // whether to compress\n    'ieCompat',          // whether to enforce IE compatibility (IE8 data-uri)\n    'math',              // whether math has to be within parenthesis\n    'strictUnits',       // whether units need to evaluate correctly\n    'sourceMap',         // whether to output a source map\n    'importMultiple',    // whether we are currently importing multiple copies\n    'urlArgs',           // whether to add args into url tokens\n    'javascriptEnabled', // option - whether Inline JavaScript is enabled. if undefined, defaults to false\n    'pluginManager',     // Used as the plugin manager for the session\n    'importantScope',    // used to bubble up !important statements\n    'rewriteUrls'        // option - whether to adjust URL's to be relative\n];\n\ncontexts.Eval = function(options, frames) {\n    copyFromOriginal(options, this, evalCopyProperties);\n\n    if (typeof this.paths === 'string') { this.paths = [this.paths]; }\n\n    this.frames = frames || [];\n    this.importantScope = this.importantScope || [];\n};\n\ncontexts.Eval.prototype.enterCalc = function () {\n    if (!this.calcStack) {\n        this.calcStack = [];\n    }\n    this.calcStack.push(true);\n    this.inCalc = true;\n};\n\ncontexts.Eval.prototype.exitCalc = function () {\n    this.calcStack.pop();\n    if (!this.calcStack) {\n        this.inCalc = false;\n    }\n};\n\ncontexts.Eval.prototype.inParenthesis = function () {\n    if (!this.parensStack) {\n        this.parensStack = [];\n    }\n    this.parensStack.push(true);\n};\n\ncontexts.Eval.prototype.outOfParenthesis = function () {\n    this.parensStack.pop();\n};\n\ncontexts.Eval.prototype.inCalc = false;\ncontexts.Eval.prototype.mathOn = true;\ncontexts.Eval.prototype.isMathOn = function (op) {\n    if (!this.mathOn) {\n        return false;\n    }\n    if (op === '/' && this.math !== Constants.Math.ALWAYS && (!this.parensStack || !this.parensStack.length)) {\n        return false;\n    }\n    if (this.math > Constants.Math.PARENS_DIVISION) {\n        return this.parensStack && this.parensStack.length;\n    }\n    return true;\n};\n\ncontexts.Eval.prototype.pathRequiresRewrite = function (path) {\n    const isRelative = this.rewriteUrls === Constants.RewriteUrls.LOCAL ? isPathLocalRelative : isPathRelative;\n\n    return isRelative(path);\n};\n\ncontexts.Eval.prototype.rewritePath = function (path, rootpath) {\n    let newPath;\n\n    rootpath = rootpath || '';\n    newPath = this.normalizePath(rootpath + path);\n\n    // If a path was explicit relative and the rootpath was not an absolute path\n    // we must ensure that the new path is also explicit relative.\n    if (isPathLocalRelative(path) &&\n        isPathRelative(rootpath) &&\n        isPathLocalRelative(newPath) === false) {\n        newPath = `./${newPath}`;\n    }\n\n    return newPath;\n};\n\ncontexts.Eval.prototype.normalizePath = path => {\n    const segments = path.split('/').reverse();\n    let segment;\n\n    path = [];\n    while (segments.length !== 0) {\n        segment = segments.pop();\n        switch ( segment ) {\n            case '.':\n                break;\n            case '..':\n                if ((path.length === 0) || (path[path.length - 1] === '..')) {\n                    path.push( segment );\n                } else {\n                    path.pop();\n                }\n                break;\n            default:\n                path.push(segment);\n                break;\n        }\n    }\n\n    return path.join('/');\n};\n\nfunction isPathRelative(path) {\n    return !/^(?:[a-z-]+:|\\/|#)/i.test(path);\n}\n\nfunction isPathLocalRelative(path) {\n    return path.charAt(0) === '.';\n}\n\n// todo - do the same for the toCSS ?\n","function makeRegistry( base ) {\n    return {\n        _data: {},\n        add: function(name, func) {\n            // precautionary case conversion, as later querying of\n            // the registry by function-caller uses lower case as well.\n            name = name.toLowerCase();\n\n            if (this._data.hasOwnProperty(name)) {\n                // TODO warn\n            }\n            this._data[name] = func;\n        },\n        addMultiple: function(functions) {\n            Object.keys(functions).forEach(\n                name => {\n                    this.add(name, functions[name]);\n                });\n        },\n        get: function(name) {\n            return this._data[name] || ( base && base.get( name ));\n        },\n        getLocalFunctions: function() {\n            return this._data;\n        },\n        inherit: function() {\n            return makeRegistry( this );\n        },\n        create: function(base) {\n            return makeRegistry(base);\n        }\n    };\n}\n\nexport default makeRegistry( null );","import Keyword from '../tree/keyword';\n\nconst defaultFunc = {\n    eval: function () {\n        const v = this.value_;\n        const e = this.error_;\n        if (e) {\n            throw e;\n        }\n        if (v != null) {\n            return v ? Keyword.True : Keyword.False;\n        }\n    },\n    value: function (v) {\n        this.value_ = v;\n    },\n    error: function (e) {\n        this.error_ = e;\n    },\n    reset: function () {\n        this.value_ = this.error_ = null;\n    }\n};\n\nexport default { 'default': defaultFunc.eval.bind(defaultFunc) };\n","import Node from './node';\nimport Declaration from './declaration';\nimport Keyword from './keyword';\nimport Comment from './comment';\nimport Paren from './paren';\nimport Selector from './selector';\nimport Element from './element';\nimport Anonymous from './anonymous';\nimport contexts from '../contexts';\nimport globalFunctionRegistry from '../functions/function-registry';\nimport defaultFunc from '../functions/default';\nimport getDebugInfo from './debug-info';\nimport * as utils from '../utils';\n\nclass Ruleset extends Node {\n    constructor(selectors, rules, strictImports, visibilityInfo) {\n        this.selectors = selectors;\n        this.rules = rules;\n        this._lookups = {};\n        this._variables = null;\n        this._properties = null;\n        this.strictImports = strictImports;\n        this.copyVisibilityInfo(visibilityInfo);\n        this.allowRoot = true;\n\n        this.setParent(this.selectors, this);\n        this.setParent(this.rules, this);\n\n    }\n\n    isRulesetLike() {\n        return true;\n    }\n\n    accept(visitor) {\n        if (this.paths) {\n            this.paths = visitor.visitArray(this.paths, true);\n        } else if (this.selectors) {\n            this.selectors = visitor.visitArray(this.selectors);\n        }\n        if (this.rules && this.rules.length) {\n            this.rules = visitor.visitArray(this.rules);\n        }\n    }\n\n    eval(context) {\n        const that = this;\n        let selectors;\n        let selCnt;\n        let selector;\n        let i;\n        let hasVariable;\n        let hasOnePassingSelector = false;\n\n        if (this.selectors && (selCnt = this.selectors.length)) {\n            selectors = new Array(selCnt);\n            defaultFunc.error({\n                type: 'Syntax',\n                message: 'it is currently only allowed in parametric mixin guards,'\n            });\n\n            for (i = 0; i < selCnt; i++) {\n                selector = this.selectors[i].eval(context);\n                for (var j = 0; j < selector.elements.length; j++) {\n                    if (selector.elements[j].isVariable) {\n                        hasVariable = true;\n                        break;\n                    }\n                }\n                selectors[i] = selector;\n                if (selector.evaldCondition) {\n                    hasOnePassingSelector = true;\n                }\n            }\n\n            if (hasVariable) {\n                const toParseSelectors = new Array(selCnt);\n                for (i = 0; i < selCnt; i++) {\n                    selector = selectors[i];\n                    toParseSelectors[i] = selector.toCSS(context);\n                }\n                this.parse.parseNode(\n                    toParseSelectors.join(','),\n                    [\"selectors\"], \n                    selectors[0].getIndex(), \n                    selectors[0].fileInfo(), \n                    (err, result) => {\n                        if (result) {\n                            selectors = utils.flattenArray(result);\n                        }\n                    });\n            }\n\n            defaultFunc.reset();\n        } else {\n            hasOnePassingSelector = true;\n        }\n\n        let rules = this.rules ? utils.copyArray(this.rules) : null;\n        const ruleset = new Ruleset(selectors, rules, this.strictImports, this.visibilityInfo());\n        let rule;\n        let subRule;\n\n        ruleset.originalRuleset = this;\n        ruleset.root = this.root;\n        ruleset.firstRoot = this.firstRoot;\n        ruleset.allowImports = this.allowImports;\n\n        if (this.debugInfo) {\n            ruleset.debugInfo = this.debugInfo;\n        }\n\n        if (!hasOnePassingSelector) {\n            rules.length = 0;\n        }\n\n        // inherit a function registry from the frames stack when possible;\n        // otherwise from the global registry\n        ruleset.functionRegistry = (frames => {\n            let i = 0;\n            const n = frames.length;\n            let found;\n            for ( ; i !== n ; ++i ) {\n                found = frames[ i ].functionRegistry;\n                if ( found ) { return found; }\n            }\n            return globalFunctionRegistry;\n        })(context.frames).inherit();\n\n        // push the current ruleset to the frames stack\n        const ctxFrames = context.frames;\n        ctxFrames.unshift(ruleset);\n\n        // currrent selectors\n        let ctxSelectors = context.selectors;\n        if (!ctxSelectors) {\n            context.selectors = ctxSelectors = [];\n        }\n        ctxSelectors.unshift(this.selectors);\n\n        // Evaluate imports\n        if (ruleset.root || ruleset.allowImports || !ruleset.strictImports) {\n            ruleset.evalImports(context);\n        }\n\n        // Store the frames around mixin definitions,\n        // so they can be evaluated like closures when the time comes.\n        const rsRules = ruleset.rules;\n        for (i = 0; (rule = rsRules[i]); i++) {\n            if (rule.evalFirst) {\n                rsRules[i] = rule.eval(context);\n            }\n        }\n\n        const mediaBlockCount = (context.mediaBlocks && context.mediaBlocks.length) || 0;\n\n        // Evaluate mixin calls.\n        for (i = 0; (rule = rsRules[i]); i++) {\n            if (rule.type === 'MixinCall') {\n                /* jshint loopfunc:true */\n                rules = rule.eval(context).filter(r => {\n                    if ((r instanceof Declaration) && r.variable) {\n                        // do not pollute the scope if the variable is\n                        // already there. consider returning false here\n                        // but we need a way to \"return\" variable from mixins\n                        return !(ruleset.variable(r.name));\n                    }\n                    return true;\n                });\n                rsRules.splice(...[i, 1].concat(rules));\n                i += rules.length - 1;\n                ruleset.resetCache();\n            } else if (rule.type ===  'VariableCall') {\n                /* jshint loopfunc:true */\n                rules = rule.eval(context).rules.filter(r => {\n                    if ((r instanceof Declaration) && r.variable) {\n                        // do not pollute the scope at all\n                        return false;\n                    }\n                    return true;\n                });\n                rsRules.splice(...[i, 1].concat(rules));\n                i += rules.length - 1;\n                ruleset.resetCache();\n            }\n        }\n\n        // Evaluate everything else\n        for (i = 0; (rule = rsRules[i]); i++) {\n            if (!rule.evalFirst) {\n                rsRules[i] = rule = rule.eval ? rule.eval(context) : rule;\n            }\n        }\n\n        // Evaluate everything else\n        for (i = 0; (rule = rsRules[i]); i++) {\n            // for rulesets, check if it is a css guard and can be removed\n            if (rule instanceof Ruleset && rule.selectors && rule.selectors.length === 1) {\n                // check if it can be folded in (e.g. & where)\n                if (rule.selectors[0] && rule.selectors[0].isJustParentSelector()) {\n                    rsRules.splice(i--, 1);\n\n                    for (var j = 0; (subRule = rule.rules[j]); j++) {\n                        if (subRule instanceof Node) {\n                            subRule.copyVisibilityInfo(rule.visibilityInfo());\n                            if (!(subRule instanceof Declaration) || !subRule.variable) {\n                                rsRules.splice(++i, 0, subRule);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        // Pop the stack\n        ctxFrames.shift();\n        ctxSelectors.shift();\n\n        if (context.mediaBlocks) {\n            for (i = mediaBlockCount; i < context.mediaBlocks.length; i++) {\n                context.mediaBlocks[i].bubbleSelectors(selectors);\n            }\n        }\n\n        return ruleset;\n    }\n\n    evalImports(context) {\n        const rules = this.rules;\n        let i;\n        let importRules;\n        if (!rules) { return; }\n\n        for (i = 0; i < rules.length; i++) {\n            if (rules[i].type === 'Import') {\n                importRules = rules[i].eval(context);\n                if (importRules && (importRules.length || importRules.length === 0)) {\n                    rules.splice(...[i, 1].concat(importRules));\n                    i += importRules.length - 1;\n                } else {\n                    rules.splice(i, 1, importRules);\n                }\n                this.resetCache();\n            }\n        }\n    }\n\n    makeImportant() {\n        const result = new Ruleset(this.selectors, this.rules.map(r => {\n            if (r.makeImportant) {\n                return r.makeImportant();\n            } else {\n                return r;\n            }\n        }), this.strictImports, this.visibilityInfo());\n\n        return result;\n    }\n\n    matchArgs(args) {\n        return !args || args.length === 0;\n    }\n\n    // lets you call a css selector with a guard\n    matchCondition(args, context) {\n        const lastSelector = this.selectors[this.selectors.length - 1];\n        if (!lastSelector.evaldCondition) {\n            return false;\n        }\n        if (lastSelector.condition &&\n            !lastSelector.condition.eval(\n                new contexts.Eval(context,\n                    context.frames))) {\n            return false;\n        }\n        return true;\n    }\n\n    resetCache() {\n        this._rulesets = null;\n        this._variables = null;\n        this._properties = null;\n        this._lookups = {};\n    }\n\n    variables() {\n        if (!this._variables) {\n            this._variables = !this.rules ? {} : this.rules.reduce((hash, r) => {\n                if (r instanceof Declaration && r.variable === true) {\n                    hash[r.name] = r;\n                }\n                // when evaluating variables in an import statement, imports have not been eval'd\n                // so we need to go inside import statements.\n                // guard against root being a string (in the case of inlined less)\n                if (r.type === 'Import' && r.root && r.root.variables) {\n                    const vars = r.root.variables();\n                    for (const name in vars) {\n                        if (vars.hasOwnProperty(name)) {\n                            hash[name] = r.root.variable(name);\n                        }\n                    }\n                }\n                return hash;\n            }, {});\n        }\n        return this._variables;\n    }\n\n    properties() {\n        if (!this._properties) {\n            this._properties = !this.rules ? {} : this.rules.reduce((hash, r) => {\n                if (r instanceof Declaration && r.variable !== true) {\n                    const name = (r.name.length === 1) && (r.name[0] instanceof Keyword) ?\n                        r.name[0].value : r.name;\n                    // Properties don't overwrite as they can merge\n                    if (!hash[`$${name}`]) {\n                        hash[`$${name}`] = [ r ];\n                    }\n                    else {\n                        hash[`$${name}`].push(r);\n                    }\n                }\n                return hash;\n            }, {});\n        }\n        return this._properties;\n    }\n\n    variable(name) {\n        const decl = this.variables()[name];\n        if (decl) {\n            return this.parseValue(decl);\n        }\n    }\n\n    property(name) {\n        const decl = this.properties()[name];\n        if (decl) {\n            return this.parseValue(decl);\n        }\n    }\n\n    lastDeclaration() {\n        for (let i = this.rules.length; i > 0; i--) {\n            const decl = this.rules[i - 1];\n            if (decl instanceof Declaration) {\n                return this.parseValue(decl);\n            }\n        }\n    }\n\n    parseValue(toParse) {\n        const self = this;\n        function transformDeclaration(decl) {\n            if (decl.value instanceof Anonymous && !decl.parsed) {\n                if (typeof decl.value.value === 'string') {\n                    this.parse.parseNode(\n                        decl.value.value,\n                        ['value', 'important'], \n                        decl.value.getIndex(), \n                        decl.fileInfo(), \n                        (err, result) => {\n                            if (err) {\n                                decl.parsed = true;\n                            }\n                            if (result) {\n                                decl.value = result[0];\n                                decl.important = result[1] || '';\n                                decl.parsed = true;\n                            }\n                        });\n                } else {\n                    decl.parsed = true;\n                }\n\n                return decl;\n            }\n            else {\n                return decl;\n            }\n        }\n        if (!Array.isArray(toParse)) {\n            return transformDeclaration.call(self, toParse);\n        }\n        else {\n            const nodes = [];\n            toParse.forEach(n => {\n                nodes.push(transformDeclaration.call(self, n));\n            });\n            return nodes;\n        }\n    }\n\n    rulesets() {\n        if (!this.rules) { return []; }\n\n        const filtRules = [];\n        const rules = this.rules;\n        let i;\n        let rule;\n\n        for (i = 0; (rule = rules[i]); i++) {\n            if (rule.isRuleset) {\n                filtRules.push(rule);\n            }\n        }\n\n        return filtRules;\n    }\n\n    prependRule(rule) {\n        const rules = this.rules;\n        if (rules) {\n            rules.unshift(rule);\n        } else {\n            this.rules = [ rule ];\n        }\n        this.setParent(rule, this);\n    }\n\n    find(selector, self = this, filter) {\n        const rules = [];\n        let match;\n        let foundMixins;\n        const key = selector.toCSS();\n\n        if (key in this._lookups) { return this._lookups[key]; }\n\n        this.rulesets().forEach(rule => {\n            if (rule !== self) {\n                for (let j = 0; j < rule.selectors.length; j++) {\n                    match = selector.match(rule.selectors[j]);\n                    if (match) {\n                        if (selector.elements.length > match) {\n                            if (!filter || filter(rule)) {\n                                foundMixins = rule.find(new Selector(selector.elements.slice(match)), self, filter);\n                                for (let i = 0; i < foundMixins.length; ++i) {\n                                    foundMixins[i].path.push(rule);\n                                }\n                                Array.prototype.push.apply(rules, foundMixins);\n                            }\n                        } else {\n                            rules.push({ rule, path: []});\n                        }\n                        break;\n                    }\n                }\n            }\n        });\n        this._lookups[key] = rules;\n        return rules;\n    }\n\n    genCSS(context, output) {\n        let i;\n        let j;\n        const charsetRuleNodes = [];\n        let ruleNodes = [];\n\n        let // Line number debugging\n        debugInfo;\n\n        let rule;\n        let path;\n\n        context.tabLevel = (context.tabLevel || 0);\n\n        if (!this.root) {\n            context.tabLevel++;\n        }\n\n        const tabRuleStr = context.compress ? '' : Array(context.tabLevel + 1).join('  ');\n        const tabSetStr = context.compress ? '' : Array(context.tabLevel).join('  ');\n        let sep;\n\n        let charsetNodeIndex = 0;\n        let importNodeIndex = 0;\n        for (i = 0; (rule = this.rules[i]); i++) {\n            if (rule instanceof Comment) {\n                if (importNodeIndex === i) {\n                    importNodeIndex++;\n                }\n                ruleNodes.push(rule);\n            } else if (rule.isCharset && rule.isCharset()) {\n                ruleNodes.splice(charsetNodeIndex, 0, rule);\n                charsetNodeIndex++;\n                importNodeIndex++;\n            } else if (rule.type === 'Import') {\n                ruleNodes.splice(importNodeIndex, 0, rule);\n                importNodeIndex++;\n            } else {\n                ruleNodes.push(rule);\n            }\n        }\n        ruleNodes = charsetRuleNodes.concat(ruleNodes);\n\n        // If this is the root node, we don't render\n        // a selector, or {}.\n        if (!this.root) {\n            debugInfo = getDebugInfo(context, this, tabSetStr);\n\n            if (debugInfo) {\n                output.add(debugInfo);\n                output.add(tabSetStr);\n            }\n\n            const paths = this.paths;\n            const pathCnt = paths.length;\n            let pathSubCnt;\n\n            sep = context.compress ? ',' : (`,\\n${tabSetStr}`);\n\n            for (i = 0; i < pathCnt; i++) {\n                path = paths[i];\n                if (!(pathSubCnt = path.length)) { continue; }\n                if (i > 0) { output.add(sep); }\n\n                context.firstSelector = true;\n                path[0].genCSS(context, output);\n\n                context.firstSelector = false;\n                for (j = 1; j < pathSubCnt; j++) {\n                    path[j].genCSS(context, output);\n                }\n            }\n\n            output.add((context.compress ? '{' : ' {\\n') + tabRuleStr);\n        }\n\n        // Compile rules and rulesets\n        for (i = 0; (rule = ruleNodes[i]); i++) {\n\n            if (i + 1 === ruleNodes.length) {\n                context.lastRule = true;\n            }\n\n            const currentLastRule = context.lastRule;\n            if (rule.isRulesetLike(rule)) {\n                context.lastRule = false;\n            }\n\n            if (rule.genCSS) {\n                rule.genCSS(context, output);\n            } else if (rule.value) {\n                output.add(rule.value.toString());\n            }\n\n            context.lastRule = currentLastRule;\n\n            if (!context.lastRule && rule.isVisible()) {\n                output.add(context.compress ? '' : (`\\n${tabRuleStr}`));\n            } else {\n                context.lastRule = false;\n            }\n        }\n\n        if (!this.root) {\n            output.add((context.compress ? '}' : `\\n${tabSetStr}}`));\n            context.tabLevel--;\n        }\n\n        if (!output.isEmpty() && !context.compress && this.firstRoot) {\n            output.add('\\n');\n        }\n    }\n\n    joinSelectors(paths, context, selectors) {\n        for (let s = 0; s < selectors.length; s++) {\n            this.joinSelector(paths, context, selectors[s]);\n        }\n    }\n\n    joinSelector(paths, context, selector) {\n        function createParenthesis(elementsToPak, originalElement) {\n            let replacementParen;\n            let j;\n            if (elementsToPak.length === 0) {\n                replacementParen = new Paren(elementsToPak[0]);\n            } else {\n                const insideParent = new Array(elementsToPak.length);\n                for (j = 0; j < elementsToPak.length; j++) {\n                    insideParent[j] = new Element(\n                        null,\n                        elementsToPak[j],\n                        originalElement.isVariable,\n                        originalElement._index,\n                        originalElement._fileInfo\n                    );\n                }\n                replacementParen = new Paren(new Selector(insideParent));\n            }\n            return replacementParen;\n        }\n\n        function createSelector(containedElement, originalElement) {\n            let element;\n            let selector;\n            element = new Element(null, containedElement, originalElement.isVariable, originalElement._index, originalElement._fileInfo);\n            selector = new Selector([element]);\n            return selector;\n        }\n\n        // joins selector path from `beginningPath` with selector path in `addPath`\n        // `replacedElement` contains element that is being replaced by `addPath`\n        // returns concatenated path\n        function addReplacementIntoPath(beginningPath, addPath, replacedElement, originalSelector) {\n            let newSelectorPath;\n            let lastSelector;\n            let newJoinedSelector;\n            // our new selector path\n            newSelectorPath = [];\n\n            // construct the joined selector - if & is the first thing this will be empty,\n            // if not newJoinedSelector will be the last set of elements in the selector\n            if (beginningPath.length > 0) {\n                newSelectorPath = utils.copyArray(beginningPath);\n                lastSelector = newSelectorPath.pop();\n                newJoinedSelector = originalSelector.createDerived(utils.copyArray(lastSelector.elements));\n            }\n            else {\n                newJoinedSelector = originalSelector.createDerived([]);\n            }\n\n            if (addPath.length > 0) {\n                // /deep/ is a CSS4 selector - (removed, so should deprecate)\n                // that is valid without anything in front of it\n                // so if the & does not have a combinator that is \"\" or \" \" then\n                // and there is a combinator on the parent, then grab that.\n                // this also allows + a { & .b { .a & { ... though not sure why you would want to do that\n                let combinator = replacedElement.combinator;\n\n                const parentEl = addPath[0].elements[0];\n                if (combinator.emptyOrWhitespace && !parentEl.combinator.emptyOrWhitespace) {\n                    combinator = parentEl.combinator;\n                }\n                // join the elements so far with the first part of the parent\n                newJoinedSelector.elements.push(new Element(\n                    combinator,\n                    parentEl.value,\n                    replacedElement.isVariable,\n                    replacedElement._index,\n                    replacedElement._fileInfo\n                ));\n                newJoinedSelector.elements = newJoinedSelector.elements.concat(addPath[0].elements.slice(1));\n            }\n\n            // now add the joined selector - but only if it is not empty\n            if (newJoinedSelector.elements.length !== 0) {\n                newSelectorPath.push(newJoinedSelector);\n            }\n\n            // put together the parent selectors after the join (e.g. the rest of the parent)\n            if (addPath.length > 1) {\n                let restOfPath = addPath.slice(1);\n                restOfPath = restOfPath.map(selector => selector.createDerived(selector.elements, []));\n                newSelectorPath = newSelectorPath.concat(restOfPath);\n            }\n            return newSelectorPath;\n        }\n\n        // joins selector path from `beginningPath` with every selector path in `addPaths` array\n        // `replacedElement` contains element that is being replaced by `addPath`\n        // returns array with all concatenated paths\n        function addAllReplacementsIntoPath( beginningPath, addPaths, replacedElement, originalSelector, result) {\n            let j;\n            for (j = 0; j < beginningPath.length; j++) {\n                const newSelectorPath = addReplacementIntoPath(beginningPath[j], addPaths, replacedElement, originalSelector);\n                result.push(newSelectorPath);\n            }\n            return result;\n        }\n\n        function mergeElementsOnToSelectors(elements, selectors) {\n            let i;\n            let sel;\n\n            if (elements.length === 0) {\n                return ;\n            }\n            if (selectors.length === 0) {\n                selectors.push([ new Selector(elements) ]);\n                return;\n            }\n\n            for (i = 0; (sel = selectors[i]); i++) {\n                // if the previous thing in sel is a parent this needs to join on to it\n                if (sel.length > 0) {\n                    sel[sel.length - 1] = sel[sel.length - 1].createDerived(sel[sel.length - 1].elements.concat(elements));\n                }\n                else {\n                    sel.push(new Selector(elements));\n                }\n            }\n        }\n\n        // replace all parent selectors inside `inSelector` by content of `context` array\n        // resulting selectors are returned inside `paths` array\n        // returns true if `inSelector` contained at least one parent selector\n        function replaceParentSelector(paths, context, inSelector) {\n            // The paths are [[Selector]]\n            // The first list is a list of comma separated selectors\n            // The inner list is a list of inheritance separated selectors\n            // e.g.\n            // .a, .b {\n            //   .c {\n            //   }\n            // }\n            // == [[.a] [.c]] [[.b] [.c]]\n            //\n            let i;\n\n            let j;\n            let k;\n            let currentElements;\n            let newSelectors;\n            let selectorsMultiplied;\n            let sel;\n            let el;\n            let hadParentSelector = false;\n            let length;\n            let lastSelector;\n            function findNestedSelector(element) {\n                let maybeSelector;\n                if (!(element.value instanceof Paren)) {\n                    return null;\n                }\n\n                maybeSelector = element.value.value;\n                if (!(maybeSelector instanceof Selector)) {\n                    return null;\n                }\n\n                return maybeSelector;\n            }\n\n            // the elements from the current selector so far\n            currentElements = [];\n            // the current list of new selectors to add to the path.\n            // We will build it up. We initiate it with one empty selector as we \"multiply\" the new selectors\n            // by the parents\n            newSelectors = [\n                []\n            ];\n\n            for (i = 0; (el = inSelector.elements[i]); i++) {\n                // non parent reference elements just get added\n                if (el.value !== '&') {\n                    const nestedSelector = findNestedSelector(el);\n                    if (nestedSelector != null) {\n                        // merge the current list of non parent selector elements\n                        // on to the current list of selectors to add\n                        mergeElementsOnToSelectors(currentElements, newSelectors);\n\n                        const nestedPaths = [];\n                        let replaced;\n                        const replacedNewSelectors = [];\n                        replaced = replaceParentSelector(nestedPaths, context, nestedSelector);\n                        hadParentSelector = hadParentSelector || replaced;\n                        // the nestedPaths array should have only one member - replaceParentSelector does not multiply selectors\n                        for (k = 0; k < nestedPaths.length; k++) {\n                            const replacementSelector = createSelector(createParenthesis(nestedPaths[k], el), el);\n                            addAllReplacementsIntoPath(newSelectors, [replacementSelector], el, inSelector, replacedNewSelectors);\n                        }\n                        newSelectors = replacedNewSelectors;\n                        currentElements = [];\n                    } else {\n                        currentElements.push(el);\n                    }\n\n                } else {\n                    hadParentSelector = true;\n                    // the new list of selectors to add\n                    selectorsMultiplied = [];\n\n                    // merge the current list of non parent selector elements\n                    // on to the current list of selectors to add\n                    mergeElementsOnToSelectors(currentElements, newSelectors);\n\n                    // loop through our current selectors\n                    for (j = 0; j < newSelectors.length; j++) {\n                        sel = newSelectors[j];\n                        // if we don't have any parent paths, the & might be in a mixin so that it can be used\n                        // whether there are parents or not\n                        if (context.length === 0) {\n                            // the combinator used on el should now be applied to the next element instead so that\n                            // it is not lost\n                            if (sel.length > 0) {\n                                sel[0].elements.push(new Element(el.combinator, '', el.isVariable, el._index, el._fileInfo));\n                            }\n                            selectorsMultiplied.push(sel);\n                        }\n                        else {\n                            // and the parent selectors\n                            for (k = 0; k < context.length; k++) {\n                                // We need to put the current selectors\n                                // then join the last selector's elements on to the parents selectors\n                                const newSelectorPath = addReplacementIntoPath(sel, context[k], el, inSelector);\n                                // add that to our new set of selectors\n                                selectorsMultiplied.push(newSelectorPath);\n                            }\n                        }\n                    }\n\n                    // our new selectors has been multiplied, so reset the state\n                    newSelectors = selectorsMultiplied;\n                    currentElements = [];\n                }\n            }\n\n            // if we have any elements left over (e.g. .a& .b == .b)\n            // add them on to all the current selectors\n            mergeElementsOnToSelectors(currentElements, newSelectors);\n\n            for (i = 0; i < newSelectors.length; i++) {\n                length = newSelectors[i].length;\n                if (length > 0) {\n                    paths.push(newSelectors[i]);\n                    lastSelector = newSelectors[i][length - 1];\n                    newSelectors[i][length - 1] = lastSelector.createDerived(lastSelector.elements, inSelector.extendList);\n                }\n            }\n\n            return hadParentSelector;\n        }\n\n        function deriveSelector(visibilityInfo, deriveFrom) {\n            const newSelector = deriveFrom.createDerived(deriveFrom.elements, deriveFrom.extendList, deriveFrom.evaldCondition);\n            newSelector.copyVisibilityInfo(visibilityInfo);\n            return newSelector;\n        }\n\n        // joinSelector code follows\n        let i;\n\n        let newPaths;\n        let hadParentSelector;\n\n        newPaths = [];\n        hadParentSelector = replaceParentSelector(newPaths, context, selector);\n\n        if (!hadParentSelector) {\n            if (context.length > 0) {\n                newPaths = [];\n                for (i = 0; i < context.length; i++) {\n\n                    const concatenated = context[i].map(deriveSelector.bind(this, selector.visibilityInfo()));\n\n                    concatenated.push(selector);\n                    newPaths.push(concatenated);\n                }\n            }\n            else {\n                newPaths = [[selector]];\n            }\n        }\n\n        for (i = 0; i < newPaths.length; i++) {\n            paths.push(newPaths[i]);\n        }\n    }\n}\n\nRuleset.prototype.type = 'Ruleset';\nRuleset.prototype.isRuleset = true;\nexport default Ruleset;\n","import Node from './node';\nimport Selector from './selector';\nimport Ruleset from './ruleset';\nimport Anonymous from './anonymous';\n\nclass AtRule extends Node {\n    constructor(\n        name,\n        value,\n        rules,\n        index,\n        currentFileInfo,\n        debugInfo,\n        isRooted,\n        visibilityInfo\n    ) {\n        let i;\n\n        this.name  = name;\n        this.value = (value instanceof Node) ? value : (value ? new Anonymous(value) : value);\n        if (rules) {\n            if (Array.isArray(rules)) {\n                this.rules = rules;\n            } else {\n                this.rules = [rules];\n                this.rules[0].selectors = (new Selector([], null, null, index, currentFileInfo)).createEmptySelectors();\n            }\n            for (i = 0; i < this.rules.length; i++) {\n                this.rules[i].allowImports = true;\n            }\n            this.setParent(this.rules, this);\n        }\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.debugInfo = debugInfo;\n        this.isRooted = isRooted || false;\n        this.copyVisibilityInfo(visibilityInfo);\n        this.allowRoot = true;\n    }\n\n    accept(visitor) {\n        const value = this.value;\n        const rules = this.rules;\n        if (rules) {\n            this.rules = visitor.visitArray(rules);\n        }\n        if (value) {\n            this.value = visitor.visit(value);\n        }\n    }\n\n    isRulesetLike() {\n        return this.rules || !this.isCharset();\n    }\n\n    isCharset() {\n        return '@charset' === this.name;\n    }\n\n    genCSS(context, output) {\n        const value = this.value;\n        const rules = this.rules;\n        output.add(this.name, this.fileInfo(), this.getIndex());\n        if (value) {\n            output.add(' ');\n            value.genCSS(context, output);\n        }\n        if (rules) {\n            this.outputRuleset(context, output, rules);\n        } else {\n            output.add(';');\n        }\n    }\n\n    eval(context) {\n        let mediaPathBackup;\n        let mediaBlocksBackup;\n        let value = this.value;\n        let rules = this.rules;\n\n        // media stored inside other atrule should not bubble over it\n        // backpup media bubbling information\n        mediaPathBackup = context.mediaPath;\n        mediaBlocksBackup = context.mediaBlocks;\n        // deleted media bubbling information\n        context.mediaPath = [];\n        context.mediaBlocks = [];\n\n        if (value) {\n            value = value.eval(context);\n        }\n        if (rules) {\n            // assuming that there is only one rule at this point - that is how parser constructs the rule\n            rules = [rules[0].eval(context)];\n            rules[0].root = true;\n        }\n        // restore media bubbling information\n        context.mediaPath = mediaPathBackup;\n        context.mediaBlocks = mediaBlocksBackup;\n\n        return new AtRule(this.name, value, rules,\n            this.getIndex(), this.fileInfo(), this.debugInfo, this.isRooted, this.visibilityInfo());\n    }\n\n    variable(name) {\n        if (this.rules) {\n            // assuming that there is only one rule at this point - that is how parser constructs the rule\n            return Ruleset.prototype.variable.call(this.rules[0], name);\n        }\n    }\n\n    find(...args) {\n        if (this.rules) {\n            // assuming that there is only one rule at this point - that is how parser constructs the rule\n            return Ruleset.prototype.find.apply(this.rules[0], args);\n        }\n    }\n\n    rulesets() {\n        if (this.rules) {\n            // assuming that there is only one rule at this point - that is how parser constructs the rule\n            return Ruleset.prototype.rulesets.apply(this.rules[0]);\n        }\n    }\n\n    outputRuleset(context, output, rules) {\n        const ruleCnt = rules.length;\n        let i;\n        context.tabLevel = (context.tabLevel | 0) + 1;\n\n        // Compressed\n        if (context.compress) {\n            output.add('{');\n            for (i = 0; i < ruleCnt; i++) {\n                rules[i].genCSS(context, output);\n            }\n            output.add('}');\n            context.tabLevel--;\n            return;\n        }\n\n        // Non-compressed\n        const tabSetStr = `\\n${Array(context.tabLevel).join('  ')}`;\n\n        const tabRuleStr = `${tabSetStr}  `;\n        if (!ruleCnt) {\n            output.add(` {${tabSetStr}}`);\n        } else {\n            output.add(` {${tabRuleStr}`);\n            rules[0].genCSS(context, output);\n            for (i = 1; i < ruleCnt; i++) {\n                output.add(tabRuleStr);\n                rules[i].genCSS(context, output);\n            }\n            output.add(`${tabSetStr}}`);\n        }\n\n        context.tabLevel--;\n    }\n}\n\nAtRule.prototype.type = 'AtRule';\nexport default AtRule;\n","import Node from './node';\nimport contexts from '../contexts';\nimport * as utils from '../utils';\n\nclass DetachedRuleset extends Node {\n    constructor(ruleset, frames) {\n        this.ruleset = ruleset;\n        this.frames = frames;\n        this.setParent(this.ruleset, this);\n    }\n\n    accept(visitor) {\n        this.ruleset = visitor.visit(this.ruleset);\n    }\n\n    eval(context) {\n        const frames = this.frames || utils.copyArray(context.frames);\n        return new DetachedRuleset(this.ruleset, frames);\n    }\n\n    callEval(context) {\n        return this.ruleset.eval(this.frames ? new contexts.Eval(context, this.frames.concat(context.frames)) : context);\n    }\n}\n\nDetachedRuleset.prototype.type = 'DetachedRuleset';\nDetachedRuleset.prototype.evalFirst = true;\nexport default DetachedRuleset;\n","import Node from './node';\nimport unitConversions from '../data/unit-conversions';\nimport * as utils from '../utils';\n\nclass Unit extends Node {\n    constructor(numerator, denominator, backupUnit) {\n        this.numerator = numerator ? utils.copyArray(numerator).sort() : [];\n        this.denominator = denominator ? utils.copyArray(denominator).sort() : [];\n        if (backupUnit) {\n            this.backupUnit = backupUnit;\n        } else if (numerator && numerator.length) {\n            this.backupUnit = numerator[0];\n        }\n    }\n\n    clone() {\n        return new Unit(utils.copyArray(this.numerator), utils.copyArray(this.denominator), this.backupUnit);\n    }\n\n    genCSS(context, output) {\n        // Dimension checks the unit is singular and throws an error if in strict math mode.\n        const strictUnits = context && context.strictUnits;\n        if (this.numerator.length === 1) {\n            output.add(this.numerator[0]); // the ideal situation\n        } else if (!strictUnits && this.backupUnit) {\n            output.add(this.backupUnit);\n        } else if (!strictUnits && this.denominator.length) {\n            output.add(this.denominator[0]);\n        }\n    }\n\n    toString() {\n        let i;\n        let returnStr = this.numerator.join('*');\n        for (i = 0; i < this.denominator.length; i++) {\n            returnStr += `/${this.denominator[i]}`;\n        }\n        return returnStr;\n    }\n\n    compare(other) {\n        return this.is(other.toString()) ? 0 : undefined;\n    }\n\n    is(unitString) {\n        return this.toString().toUpperCase() === unitString.toUpperCase();\n    }\n\n    isLength() {\n        return RegExp('^(px|em|ex|ch|rem|in|cm|mm|pc|pt|ex|vw|vh|vmin|vmax)$', 'gi').test(this.toCSS());\n    }\n\n    isEmpty() {\n        return this.numerator.length === 0 && this.denominator.length === 0;\n    }\n\n    isSingular() {\n        return this.numerator.length <= 1 && this.denominator.length === 0;\n    }\n\n    map(callback) {\n        let i;\n\n        for (i = 0; i < this.numerator.length; i++) {\n            this.numerator[i] = callback(this.numerator[i], false);\n        }\n\n        for (i = 0; i < this.denominator.length; i++) {\n            this.denominator[i] = callback(this.denominator[i], true);\n        }\n    }\n\n    usedUnits() {\n        let group;\n        const result = {};\n        let mapUnit;\n        let groupName;\n\n        mapUnit = atomicUnit => {\n            /* jshint loopfunc:true */\n            if (group.hasOwnProperty(atomicUnit) && !result[groupName]) {\n                result[groupName] = atomicUnit;\n            }\n\n            return atomicUnit;\n        };\n\n        for (groupName in unitConversions) {\n            if (unitConversions.hasOwnProperty(groupName)) {\n                group = unitConversions[groupName];\n\n                this.map(mapUnit);\n            }\n        }\n\n        return result;\n    }\n\n    cancel() {\n        const counter = {};\n        let atomicUnit;\n        let i;\n\n        for (i = 0; i < this.numerator.length; i++) {\n            atomicUnit = this.numerator[i];\n            counter[atomicUnit] = (counter[atomicUnit] || 0) + 1;\n        }\n\n        for (i = 0; i < this.denominator.length; i++) {\n            atomicUnit = this.denominator[i];\n            counter[atomicUnit] = (counter[atomicUnit] || 0) - 1;\n        }\n\n        this.numerator = [];\n        this.denominator = [];\n\n        for (atomicUnit in counter) {\n            if (counter.hasOwnProperty(atomicUnit)) {\n                const count = counter[atomicUnit];\n\n                if (count > 0) {\n                    for (i = 0; i < count; i++) {\n                        this.numerator.push(atomicUnit);\n                    }\n                } else if (count < 0) {\n                    for (i = 0; i < -count; i++) {\n                        this.denominator.push(atomicUnit);\n                    }\n                }\n            }\n        }\n\n        this.numerator.sort();\n        this.denominator.sort();\n    }\n}\n\nUnit.prototype.type = 'Unit';\nexport default Unit;\n","import Node from './node';\nimport unitConversions from '../data/unit-conversions';\nimport Unit from './unit';\nimport Color from './color';\n\n//\n// A number with a unit\n//\nclass Dimension extends Node {\n    constructor(value, unit) {\n        this.value = parseFloat(value);\n        if (isNaN(this.value)) {\n            throw new Error('Dimension is not a number.');\n        }\n        this.unit = (unit && unit instanceof Unit) ? unit :\n          new Unit(unit ? [unit] : undefined);\n        this.setParent(this.unit, this);\n    }\n\n    accept(visitor) {\n        this.unit = visitor.visit(this.unit);\n    }\n\n    eval(context) {\n        return this;\n    }\n\n    toColor() {\n        return new Color([this.value, this.value, this.value]);\n    }\n\n    genCSS(context, output) {\n        if ((context && context.strictUnits) && !this.unit.isSingular()) {\n            throw new Error(`Multiple units in dimension. Correct the units or use the unit function. Bad unit: ${this.unit.toString()}`);\n        }\n\n        const value = this.fround(context, this.value);\n        let strValue = String(value);\n\n        if (value !== 0 && value < 0.000001 && value > -0.000001) {\n            // would be output 1e-6 etc.\n            strValue = value.toFixed(20).replace(/0+$/, '');\n        }\n\n        if (context && context.compress) {\n            // Zero values doesn't need a unit\n            if (value === 0 && this.unit.isLength()) {\n                output.add(strValue);\n                return;\n            }\n\n            // Float values doesn't need a leading zero\n            if (value > 0 && value < 1) {\n                strValue = (strValue).substr(1);\n            }\n        }\n\n        output.add(strValue);\n        this.unit.genCSS(context, output);\n    }\n\n    // In an operation between two Dimensions,\n    // we default to the first Dimension's unit,\n    // so `1px + 2` will yield `3px`.\n    operate(context, op, other) {\n        /* jshint noempty:false */\n        let value = this._operate(context, op, this.value, other.value);\n\n        let unit = this.unit.clone();\n\n        if (op === '+' || op === '-') {\n            if (unit.numerator.length === 0 && unit.denominator.length === 0) {\n                unit = other.unit.clone();\n                if (this.unit.backupUnit) {\n                    unit.backupUnit = this.unit.backupUnit;\n                }\n            } else if (other.unit.numerator.length === 0 && unit.denominator.length === 0) {\n                // do nothing\n            } else {\n                other = other.convertTo(this.unit.usedUnits());\n\n                if (context.strictUnits && other.unit.toString() !== unit.toString()) {\n                    throw new Error(`Incompatible units. Change the units or use the unit function. Bad units: '${unit.toString()}' and '${other.unit.toString()}'.`);\n                }\n\n                value = this._operate(context, op, this.value, other.value);\n            }\n        } else if (op === '*') {\n            unit.numerator = unit.numerator.concat(other.unit.numerator).sort();\n            unit.denominator = unit.denominator.concat(other.unit.denominator).sort();\n            unit.cancel();\n        } else if (op === '/') {\n            unit.numerator = unit.numerator.concat(other.unit.denominator).sort();\n            unit.denominator = unit.denominator.concat(other.unit.numerator).sort();\n            unit.cancel();\n        }\n        return new Dimension(value, unit);\n    }\n\n    compare(other) {\n        let a;\n        let b;\n\n        if (!(other instanceof Dimension)) {\n            return undefined;\n        }\n\n        if (this.unit.isEmpty() || other.unit.isEmpty()) {\n            a = this;\n            b = other;\n        } else {\n            a = this.unify();\n            b = other.unify();\n            if (a.unit.compare(b.unit) !== 0) {\n                return undefined;\n            }\n        }\n\n        return Node.numericCompare(a.value, b.value);\n    }\n\n    unify() {\n        return this.convertTo({ length: 'px', duration: 's', angle: 'rad' });\n    }\n\n    convertTo(conversions) {\n        let value = this.value;\n        const unit = this.unit.clone();\n        let i;\n        let groupName;\n        let group;\n        let targetUnit;\n        let derivedConversions = {};\n        let applyUnit;\n\n        if (typeof conversions === 'string') {\n            for (i in unitConversions) {\n                if (unitConversions[i].hasOwnProperty(conversions)) {\n                    derivedConversions = {};\n                    derivedConversions[i] = conversions;\n                }\n            }\n            conversions = derivedConversions;\n        }\n        applyUnit = (atomicUnit, denominator) => {\n            /* jshint loopfunc:true */\n            if (group.hasOwnProperty(atomicUnit)) {\n                if (denominator) {\n                    value = value / (group[atomicUnit] / group[targetUnit]);\n                } else {\n                    value = value * (group[atomicUnit] / group[targetUnit]);\n                }\n\n                return targetUnit;\n            }\n\n            return atomicUnit;\n        };\n\n        for (groupName in conversions) {\n            if (conversions.hasOwnProperty(groupName)) {\n                targetUnit = conversions[groupName];\n                group = unitConversions[groupName];\n\n                unit.map(applyUnit);\n            }\n        }\n\n        unit.cancel();\n\n        return new Dimension(value, unit);\n    }\n}\n\nDimension.prototype.type = 'Dimension';\nexport default Dimension;\n","import Node from './node';\nimport Color from './color';\nimport Dimension from './dimension';\nimport * as Constants from '../constants';\nconst MATH = Constants.Math;\n\n\nclass Operation extends Node {\n    constructor(op, operands, isSpaced) {\n        this.op = op.trim();\n        this.operands = operands;\n        this.isSpaced = isSpaced;\n    }\n\n    accept(visitor) {\n        this.operands = visitor.visitArray(this.operands);\n    }\n\n    eval(context) {\n        let a = this.operands[0].eval(context);\n        let b = this.operands[1].eval(context);\n        let op;\n\n        if (context.isMathOn(this.op)) {\n            op = this.op === './' ? '/' : this.op;\n            if (a instanceof Dimension && b instanceof Color) {\n                a = a.toColor();\n            }\n            if (b instanceof Dimension && a instanceof Color) {\n                b = b.toColor();\n            }\n            if (!a.operate) {\n                if (a instanceof Operation && a.op === '/' && context.math === MATH.PARENS_DIVISION) {\n                    return new Operation(this.op, [a, b], this.isSpaced);\n                }\n                throw { type: 'Operation',\n                    message: 'Operation on an invalid type' };\n            }\n\n            return a.operate(context, op, b);\n        } else {\n            return new Operation(this.op, [a, b], this.isSpaced);\n        }\n    }\n\n    genCSS(context, output) {\n        this.operands[0].genCSS(context, output);\n        if (this.isSpaced) {\n            output.add(' ');\n        }\n        output.add(this.op);\n        if (this.isSpaced) {\n            output.add(' ');\n        }\n        this.operands[1].genCSS(context, output);\n    }\n}\n\nOperation.prototype.type = 'Operation';\nexport default Operation;\n","import Node from './node';\nimport Paren from './paren';\nimport Comment from './comment';\nimport Dimension from './dimension';\nimport * as Constants from '../constants';\nconst MATH = Constants.Math;\n\nclass Expression extends Node {\n    constructor(value, noSpacing) {\n        this.value = value;\n        this.noSpacing = noSpacing;\n        if (!value) {\n            throw new Error('Expression requires an array parameter');\n        }\n    }\n\n    accept(visitor) {\n        this.value = visitor.visitArray(this.value);\n    }\n\n    eval(context) {\n        let returnValue;\n        const mathOn = context.isMathOn();\n\n        const inParenthesis = this.parens && \n            (context.math !== MATH.STRICT_LEGACY || !this.parensInOp);\n\n        let doubleParen = false;\n        if (inParenthesis) {\n            context.inParenthesis();\n        }\n        if (this.value.length > 1) {\n            returnValue = new Expression(this.value.map(e => {\n                if (!e.eval) {\n                    return e;\n                }\n                return e.eval(context);\n            }), this.noSpacing);\n        } else if (this.value.length === 1) {\n            if (this.value[0].parens && !this.value[0].parensInOp && !context.inCalc) {\n                doubleParen = true;\n            }\n            returnValue = this.value[0].eval(context);\n        } else {\n            returnValue = this;\n        }\n        if (inParenthesis) {\n            context.outOfParenthesis();\n        }\n        if (this.parens && this.parensInOp && !mathOn && !doubleParen \n            && (!(returnValue instanceof Dimension))) {\n            returnValue = new Paren(returnValue);\n        }\n        return returnValue;\n    }\n\n    genCSS(context, output) {\n        for (let i = 0; i < this.value.length; i++) {\n            this.value[i].genCSS(context, output);\n            if (!this.noSpacing && i + 1 < this.value.length) {\n                output.add(' ');\n            }\n        }\n    }\n\n    throwAwayComments() {\n        this.value = this.value.filter(v => !(v instanceof Comment));\n    }\n}\n\nExpression.prototype.type = 'Expression';\nexport default Expression;\n","import Expression from '../tree/expression';\n\nclass functionCaller {\n    constructor(name, context, index, currentFileInfo) {\n        this.name = name.toLowerCase();\n        this.index = index;\n        this.context = context;\n        this.currentFileInfo = currentFileInfo;\n\n        this.func = context.frames[0].functionRegistry.get(this.name);\n    }\n\n    isValid() {\n        return Boolean(this.func);\n    }\n\n    call(args) {\n        // This code is terrible and should be replaced as per this issue...\n        // https://github.com/less/less.js/issues/2477\n        if (Array.isArray(args)) {\n            args = args.filter(item => {\n                if (item.type === 'Comment') {\n                    return false;\n                }\n                return true;\n            })\n            .map(item => {\n                if (item.type === 'Expression') {\n                    const subNodes = item.value.filter(item => {\n                        if (item.type === 'Comment') {\n                            return false;\n                        }\n                        return true;\n                    });\n                    if (subNodes.length === 1) {\n                        return subNodes[0];\n                    } else {\n                        return new Expression(subNodes);\n                    }\n                }\n                return item;\n            });\n        }\n\n        return this.func(...args);\n    }\n}\n\nexport default functionCaller;\n","import Node from './node';\nimport Anonymous from './anonymous';\nimport FunctionCaller from '../functions/function-caller';\n\n//\n// A function call node.\n//\nclass Call extends Node {\n    constructor(name, args, index, currentFileInfo) {\n        this.name = name;\n        this.args = args;\n        this.calc = name === 'calc';\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n    }\n\n    accept(visitor) {\n        if (this.args) {\n            this.args = visitor.visitArray(this.args);\n        }\n    }\n\n    //\n    // When evaluating a function call,\n    // we either find the function in the functionRegistry,\n    // in which case we call it, passing the  evaluated arguments,\n    // if this returns null or we cannot find the function, we\n    // simply print it out as it appeared originally [2].\n    //\n    // The reason why we evaluate the arguments, is in the case where\n    // we try to pass a variable to a function, like: `saturate(@color)`.\n    // The function should receive the value, not the variable.\n    //\n    eval(context) {\n        /**\n         * Turn off math for calc(), and switch back on for evaluating nested functions\n         */\n        const currentMathContext = context.mathOn;\n        context.mathOn = !this.calc;\n        if (this.calc || context.inCalc) {\n            context.enterCalc();\n        }\n        const args = this.args.map(a => a.eval(context));\n        if (this.calc || context.inCalc) {\n            context.exitCalc();\n        }\n        context.mathOn = currentMathContext;\n\n        let result;\n        const funcCaller = new FunctionCaller(this.name, context, this.getIndex(), this.fileInfo());\n\n        if (funcCaller.isValid()) {\n            try {\n                result = funcCaller.call(args);\n            } catch (e) {\n                throw { \n                    type: e.type || 'Runtime',\n                    message: `error evaluating function \\`${this.name}\\`${e.message ? `: ${e.message}` : ''}`,\n                    index: this.getIndex(), \n                    filename: this.fileInfo().filename,\n                    line: e.lineNumber,\n                    column: e.columnNumber\n                };\n            }\n\n            if (result !== null && result !== undefined) {\n                // Results that that are not nodes are cast as Anonymous nodes\n                // Falsy values or booleans are returned as empty nodes\n                if (!(result instanceof Node)) {\n                    if (!result || result === true) {\n                        result = new Anonymous(null); \n                    }\n                    else {\n                        result = new Anonymous(result.toString()); \n                    }\n                    \n                }\n                result._index = this._index;\n                result._fileInfo = this._fileInfo;\n                return result;\n            }\n\n        }\n\n        return new Call(this.name, args, this.getIndex(), this.fileInfo());\n    }\n\n    genCSS(context, output) {\n        output.add(`${this.name}(`, this.fileInfo(), this.getIndex());\n\n        for (let i = 0; i < this.args.length; i++) {\n            this.args[i].genCSS(context, output);\n            if (i + 1 < this.args.length) {\n                output.add(', ');\n            }\n        }\n\n        output.add(')');\n    }\n}\n\nCall.prototype.type = 'Call';\nexport default Call;\n","import Node from './node';\nimport Call from './call';\n\nclass Variable extends Node {\n    constructor(name, index, currentFileInfo) {\n        this.name = name;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n    }\n\n    eval(context) {\n        let variable;\n        let name = this.name;\n\n        if (name.indexOf('@@') === 0) {\n            name = `@${new Variable(name.slice(1), this.getIndex(), this.fileInfo()).eval(context).value}`;\n        }\n\n        if (this.evaluating) {\n            throw { type: 'Name',\n                message: `Recursive variable definition for ${name}`,\n                filename: this.fileInfo().filename,\n                index: this.getIndex() };\n        }\n\n        this.evaluating = true;\n\n        variable = this.find(context.frames, frame => {\n            const v = frame.variable(name);\n            if (v) {\n                if (v.important) {\n                    const importantScope = context.importantScope[context.importantScope.length - 1];\n                    importantScope.important = v.important;\n                }\n                // If in calc, wrap vars in a function call to cascade evaluate args first\n                if (context.inCalc) {\n                    return (new Call('_SELF', [v.value])).eval(context);\n                }\n                else {\n                    return v.value.eval(context);\n                }\n            }\n        });\n        if (variable) {\n            this.evaluating = false;\n            return variable;\n        } else {\n            throw { type: 'Name',\n                message: `variable ${name} is undefined`,\n                filename: this.fileInfo().filename,\n                index: this.getIndex() };\n        }\n    }\n\n    find(obj, fun) {\n        for (let i = 0, r; i < obj.length; i++) {\n            r = fun.call(obj, obj[i]);\n            if (r) { return r; }\n        }\n        return null;\n    }\n}\n\nVariable.prototype.type = 'Variable';\nexport default Variable;\n","import Node from './node';\nimport Declaration from './declaration';\n\nclass Property extends Node {\n    constructor(name, index, currentFileInfo) {\n        this.name = name;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n    }\n\n    eval(context) {\n        let property;\n        const name = this.name;\n        // TODO: shorten this reference\n        const mergeRules = context.pluginManager.less.visitors.ToCSSVisitor.prototype._mergeRules;\n\n        if (this.evaluating) {\n            throw { type: 'Name',\n                message: `Recursive property reference for ${name}`,\n                filename: this.fileInfo().filename,\n                index: this.getIndex() };\n        }\n\n        this.evaluating = true;\n\n        property = this.find(context.frames, frame => {\n            let v;\n            const vArr = frame.property(name);\n            if (vArr) {\n                for (let i = 0; i < vArr.length; i++) {\n                    v = vArr[i];\n\n                    vArr[i] = new Declaration(v.name,\n                        v.value,\n                        v.important,\n                        v.merge,\n                        v.index,\n                        v.currentFileInfo,\n                        v.inline,\n                        v.variable\n                    );\n                }\n                mergeRules(vArr);\n\n                v = vArr[vArr.length - 1];\n                if (v.important) {\n                    const importantScope = context.importantScope[context.importantScope.length - 1];\n                    importantScope.important = v.important;\n                }\n                v = v.value.eval(context);\n                return v;\n            }\n        });\n        if (property) {\n            this.evaluating = false;\n            return property;\n        } else {\n            throw { type: 'Name',\n                message: `Property '${name}' is undefined`,\n                filename: this.currentFileInfo.filename,\n                index: this.index };\n        }\n    }\n\n    find(obj, fun) {\n        for (let i = 0, r; i < obj.length; i++) {\n            r = fun.call(obj, obj[i]);\n            if (r) { return r; }\n        }\n        return null;\n    }\n}\n\nProperty.prototype.type = 'Property';\nexport default Property;\n","import Node from './node';\n\nclass Attribute extends Node {\n    constructor(key, op, value) {\n        this.key = key;\n        this.op = op;\n        this.value = value;\n    }\n\n    eval(context) {\n        return new Attribute(this.key.eval ? this.key.eval(context) : this.key,\n            this.op, (this.value && this.value.eval) ? this.value.eval(context) : this.value);\n    }\n\n    genCSS(context, output) {\n        output.add(this.toCSS(context));\n    }\n\n    toCSS(context) {\n        let value = this.key.toCSS ? this.key.toCSS(context) : this.key;\n\n        if (this.op) {\n            value += this.op;\n            value += (this.value.toCSS ? this.value.toCSS(context) : this.value);\n        }\n\n        return `[${value}]`;\n    }\n}\n\nAttribute.prototype.type = 'Attribute';\nexport default Attribute;\n","import Node from './node';\nimport Variable from './variable';\nimport Property from './property';\n\nclass Quoted extends Node {\n    constructor(str, content, escaped, index, currentFileInfo) {\n        this.escaped = (escaped == null) ? true : escaped;\n        this.value = content || '';\n        this.quote = str.charAt(0);\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.variableRegex = /@\\{([\\w-]+)\\}/g;\n        this.propRegex = /\\$\\{([\\w-]+)\\}/g;\n    }\n\n    genCSS(context, output) {\n        if (!this.escaped) {\n            output.add(this.quote, this.fileInfo(), this.getIndex());\n        }\n        output.add(this.value);\n        if (!this.escaped) {\n            output.add(this.quote);\n        }\n    }\n\n    containsVariables() {\n        return this.value.match(this.variableRegex);\n    }\n\n    eval(context) {\n        const that = this;\n        let value = this.value;\n        const variableReplacement = (_, name) => {\n            const v = new Variable(`@${name}`, that.getIndex(), that.fileInfo()).eval(context, true);\n            return (v instanceof Quoted) ? v.value : v.toCSS();\n        };\n        const propertyReplacement = (_, name) => {\n            const v = new Property(`$${name}`, that.getIndex(), that.fileInfo()).eval(context, true);\n            return (v instanceof Quoted) ? v.value : v.toCSS();\n        };\n        function iterativeReplace(value, regexp, replacementFnc) {\n            let evaluatedValue = value;\n            do {\n                value = evaluatedValue.toString();\n                evaluatedValue = value.replace(regexp, replacementFnc);\n            } while (value !== evaluatedValue);\n            return evaluatedValue;\n        }\n        value = iterativeReplace(value, this.variableRegex, variableReplacement);\n        value = iterativeReplace(value, this.propRegex, propertyReplacement);\n        return new Quoted(this.quote + value + this.quote, value, this.escaped, this.getIndex(), this.fileInfo());\n    }\n\n    compare(other) {\n        // when comparing quoted strings allow the quote to differ\n        if (other.type === 'Quoted' && !this.escaped && !other.escaped) {\n            return Node.numericCompare(this.value, other.value);\n        } else {\n            return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\n        }\n    }\n}\n\nQuoted.prototype.type = 'Quoted';\nexport default Quoted;\n","import Node from './node';\n\nclass URL extends Node {\n    constructor(val, index, currentFileInfo, isEvald) {\n        this.value = val;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.isEvald = isEvald;\n    }\n\n    accept(visitor) {\n        this.value = visitor.visit(this.value);\n    }\n\n    genCSS(context, output) {\n        output.add('url(');\n        this.value.genCSS(context, output);\n        output.add(')');\n    }\n\n    eval(context) {\n        const val = this.value.eval(context);\n        let rootpath;\n\n        if (!this.isEvald) {\n            // Add the rootpath if the URL requires a rewrite\n            rootpath = this.fileInfo() && this.fileInfo().rootpath;\n            if (typeof rootpath === 'string' &&\n                typeof val.value === 'string' &&\n                context.pathRequiresRewrite(val.value)) {\n                if (!val.quote) {\n                    rootpath = escapePath(rootpath);\n                }\n                val.value = context.rewritePath(val.value, rootpath);\n            } else {\n                val.value = context.normalizePath(val.value);\n            }\n\n            // Add url args if enabled\n            if (context.urlArgs) {\n                if (!val.value.match(/^\\s*data:/)) {\n                    const delimiter = val.value.indexOf('?') === -1 ? '?' : '&';\n                    const urlArgs = delimiter + context.urlArgs;\n                    if (val.value.indexOf('#') !== -1) {\n                        val.value = val.value.replace('#', `${urlArgs}#`);\n                    } else {\n                        val.value += urlArgs;\n                    }\n                }\n            }\n        }\n\n        return new URL(val, this.getIndex(), this.fileInfo(), true);\n    }\n}\n\nURL.prototype.type = 'Url';\n\nfunction escapePath(path) {\n    return path.replace(/[\\(\\)'\"\\s]/g, match => `\\\\${match}`);\n}\n\nexport default URL;\n","import Ruleset from './ruleset';\nimport Value from './value';\nimport Selector from './selector';\nimport Anonymous from './anonymous';\nimport Expression from './expression';\nimport AtRule from './atrule';\nimport * as utils from '../utils';\n\nclass Media extends AtRule {\n    constructor(value, features, index, currentFileInfo, visibilityInfo) {\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n\n        const selectors = (new Selector([], null, null, this._index, this._fileInfo)).createEmptySelectors();\n\n        this.features = new Value(features);\n        this.rules = [new Ruleset(selectors, value)];\n        this.rules[0].allowImports = true;\n        this.copyVisibilityInfo(visibilityInfo);\n        this.allowRoot = true;\n        this.setParent(selectors, this);\n        this.setParent(this.features, this);\n        this.setParent(this.rules, this);\n    }\n\n    isRulesetLike() {\n        return true;\n    }\n\n    accept(visitor) {\n        if (this.features) {\n            this.features = visitor.visit(this.features);\n        }\n        if (this.rules) {\n            this.rules = visitor.visitArray(this.rules);\n        }\n    }\n\n    genCSS(context, output) {\n        output.add('@media ', this._fileInfo, this._index);\n        this.features.genCSS(context, output);\n        this.outputRuleset(context, output, this.rules);\n    }\n\n    eval(context) {\n        if (!context.mediaBlocks) {\n            context.mediaBlocks = [];\n            context.mediaPath = [];\n        }\n\n        const media = new Media(null, [], this._index, this._fileInfo, this.visibilityInfo());\n        if (this.debugInfo) {\n            this.rules[0].debugInfo = this.debugInfo;\n            media.debugInfo = this.debugInfo;\n        }\n        \n        media.features = this.features.eval(context);\n\n        context.mediaPath.push(media);\n        context.mediaBlocks.push(media);\n\n        this.rules[0].functionRegistry = context.frames[0].functionRegistry.inherit();\n        context.frames.unshift(this.rules[0]);\n        media.rules = [this.rules[0].eval(context)];\n        context.frames.shift();\n\n        context.mediaPath.pop();\n\n        return context.mediaPath.length === 0 ? media.evalTop(context) :\n                    media.evalNested(context);\n    }\n\n    evalTop(context) {\n        let result = this;\n\n        // Render all dependent Media blocks.\n        if (context.mediaBlocks.length > 1) {\n            const selectors = (new Selector([], null, null, this.getIndex(), this.fileInfo())).createEmptySelectors();\n            result = new Ruleset(selectors, context.mediaBlocks);\n            result.multiMedia = true;\n            result.copyVisibilityInfo(this.visibilityInfo());\n            this.setParent(result, this);\n        }\n\n        delete context.mediaBlocks;\n        delete context.mediaPath;\n\n        return result;\n    }\n\n    evalNested(context) {\n        let i;\n        let value;\n        const path = context.mediaPath.concat([this]);\n\n        // Extract the media-query conditions separated with `,` (OR).\n        for (i = 0; i < path.length; i++) {\n            value = path[i].features instanceof Value ?\n                        path[i].features.value : path[i].features;\n            path[i] = Array.isArray(value) ? value : [value];\n        }\n\n        // Trace all permutations to generate the resulting media-query.\n        //\n        // (a, b and c) with nested (d, e) ->\n        //    a and d\n        //    a and e\n        //    b and c and d\n        //    b and c and e\n        this.features = new Value(this.permute(path).map(path => {\n            path = path.map(fragment => fragment.toCSS ? fragment : new Anonymous(fragment));\n\n            for (i = path.length - 1; i > 0; i--) {\n                path.splice(i, 0, new Anonymous('and'));\n            }\n\n            return new Expression(path);\n        }));\n        this.setParent(this.features, this);\n\n        // Fake a tree-node that doesn't output anything.\n        return new Ruleset([], []);\n    }\n\n    permute(arr) {\n        if (arr.length === 0) {\n            return [];\n        } else if (arr.length === 1) {\n            return arr[0];\n        } else {\n            const result = [];\n            const rest = this.permute(arr.slice(1));\n            for (let i = 0; i < rest.length; i++) {\n                for (let j = 0; j < arr[0].length; j++) {\n                    result.push([arr[0][j]].concat(rest[i]));\n                }\n            }\n            return result;\n        }\n    }\n\n    bubbleSelectors(selectors) {\n        if (!selectors) {\n            return;\n        }\n        this.rules = [new Ruleset(utils.copyArray(selectors), [this.rules[0]])];\n        this.setParent(this.rules, this);\n    }\n}\n\nMedia.prototype.type = 'Media';\nexport default Media;\n","import Node from './node';\nimport Media from './media';\nimport URL from './url';\nimport Quoted from './quoted';\nimport Ruleset from './ruleset';\nimport Anonymous from './anonymous';\nimport * as utils from '../utils';\nimport LessError from '../less-error';\n\n//\n// CSS @import node\n//\n// The general strategy here is that we don't want to wait\n// for the parsing to be completed, before we start importing\n// the file. That's because in the context of a browser,\n// most of the time will be spent waiting for the server to respond.\n//\n// On creation, we push the import path to our import queue, though\n// `import,push`, we also pass it a callback, which it'll call once\n// the file has been fetched, and parsed.\n//\nclass Import extends Node {\n    constructor(path, features, options, index, currentFileInfo, visibilityInfo) {\n        this.options = options;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.path = path;\n        this.features = features;\n        this.allowRoot = true;\n\n        if (this.options.less !== undefined || this.options.inline) {\n            this.css = !this.options.less || this.options.inline;\n        } else {\n            const pathValue = this.getPath();\n            if (pathValue && /[#\\.\\&\\?]css([\\?;].*)?$/.test(pathValue)) {\n                this.css = true;\n            }\n        }\n        this.copyVisibilityInfo(visibilityInfo);\n        this.setParent(this.features, this);\n        this.setParent(this.path, this);\n    }\n\n    accept(visitor) {\n        if (this.features) {\n            this.features = visitor.visit(this.features);\n        }\n        this.path = visitor.visit(this.path);\n        if (!this.options.isPlugin && !this.options.inline && this.root) {\n            this.root = visitor.visit(this.root);\n        }\n    }\n\n    genCSS(context, output) {\n        if (this.css && this.path._fileInfo.reference === undefined) {\n            output.add('@import ', this._fileInfo, this._index);\n            this.path.genCSS(context, output);\n            if (this.features) {\n                output.add(' ');\n                this.features.genCSS(context, output);\n            }\n            output.add(';');\n        }\n    }\n\n    getPath() {\n        return (this.path instanceof URL) ?\n            this.path.value.value : this.path.value;\n    }\n\n    isVariableImport() {\n        let path = this.path;\n        if (path instanceof URL) {\n            path = path.value;\n        }\n        if (path instanceof Quoted) {\n            return path.containsVariables();\n        }\n\n        return true;\n    }\n\n    evalForImport(context) {\n        let path = this.path;\n\n        if (path instanceof URL) {\n            path = path.value;\n        }\n\n        return new Import(path.eval(context), this.features, this.options, this._index, this._fileInfo, this.visibilityInfo());\n    }\n\n    evalPath(context) {\n        const path = this.path.eval(context);\n        const fileInfo = this._fileInfo;\n\n        if (!(path instanceof URL)) {\n            // Add the rootpath if the URL requires a rewrite\n            const pathValue = path.value;\n            if (fileInfo &&\n                pathValue &&\n                context.pathRequiresRewrite(pathValue)) {\n                path.value = context.rewritePath(pathValue, fileInfo.rootpath);\n            } else {\n                path.value = context.normalizePath(path.value);\n            }\n        }\n\n        return path;\n    }\n\n    eval(context) {\n        const result = this.doEval(context);\n        if (this.options.reference || this.blocksVisibility()) {\n            if (result.length || result.length === 0) {\n                result.forEach(node => {\n                    node.addVisibilityBlock();\n                }\n                );\n            } else {\n                result.addVisibilityBlock();\n            }\n        }\n        return result;\n    }\n\n    doEval(context) {\n        let ruleset;\n        let registry;\n        const features = this.features && this.features.eval(context);\n\n        if (this.options.isPlugin) {\n            if (this.root && this.root.eval) {\n                try {\n                    this.root.eval(context);\n                }\n                catch (e) {\n                    e.message = 'Plugin error during evaluation';\n                    throw new LessError(e, this.root.imports, this.root.filename);\n                }\n            }\n            registry = context.frames[0] && context.frames[0].functionRegistry;\n            if ( registry && this.root && this.root.functions ) {\n                registry.addMultiple( this.root.functions );\n            }\n\n            return [];\n        }\n\n        if (this.skip) {\n            if (typeof this.skip === 'function') {\n                this.skip = this.skip();\n            }\n            if (this.skip) {\n                return [];\n            }\n        }\n        if (this.options.inline) {\n            const contents = new Anonymous(this.root, 0,\n                {\n                    filename: this.importedFilename,\n                    reference: this.path._fileInfo && this.path._fileInfo.reference\n                }, true, true);\n\n            return this.features ? new Media([contents], this.features.value) : [contents];\n        } else if (this.css) {\n            const newImport = new Import(this.evalPath(context), features, this.options, this._index);\n            if (!newImport.css && this.error) {\n                throw this.error;\n            }\n            return newImport;\n        } else {\n            ruleset = new Ruleset(null, utils.copyArray(this.root.rules));\n            ruleset.evalImports(context);\n\n            return this.features ? new Media(ruleset.rules, this.features.value) : ruleset.rules;\n        }\n    }\n}\n\nImport.prototype.type = 'Import';\nexport default Import;\n","import Node from './node';\nimport Variable from './variable';\n\nconst JsEvalNode = () => {\n};\nJsEvalNode.prototype = new Node();\n\nJsEvalNode.prototype.evaluateJavaScript = function (expression, context) {\n    let result;\n    const that = this;\n    const evalContext = {};\n\n    if (!context.javascriptEnabled) {\n        throw { message: 'Inline JavaScript is not enabled. Is it set in your options?',\n            filename: this.fileInfo().filename,\n            index: this.getIndex() };\n    }\n\n    expression = expression.replace(/@\\{([\\w-]+)\\}/g, (_, name) => that.jsify(new Variable(`@${name}`, that.getIndex(), that.fileInfo()).eval(context)));\n\n    try {\n        expression = new Function(`return (${expression})`);\n    } catch (e) {\n        throw { message: `JavaScript evaluation error: ${e.message} from \\`${expression}\\`` ,\n            filename: this.fileInfo().filename,\n            index: this.getIndex() };\n    }\n\n    const variables = context.frames[0].variables();\n    for (const k in variables) {\n        if (variables.hasOwnProperty(k)) {\n            /* jshint loopfunc:true */\n            evalContext[k.slice(1)] = {\n                value: variables[k].value,\n                toJS: function () {\n                    return this.value.eval(context).toCSS();\n                }\n            };\n        }\n    }\n\n    try {\n        result = expression.call(evalContext);\n    } catch (e) {\n        throw { message: `JavaScript evaluation error: '${e.name}: ${e.message.replace(/[\"]/g, '\\'')}'` ,\n            filename: this.fileInfo().filename,\n            index: this.getIndex() };\n    }\n    return result;\n};\nJsEvalNode.prototype.jsify = obj => {\n    if (Array.isArray(obj.value) && (obj.value.length > 1)) {\n        return `[${obj.value.map(v => v.toCSS()).join(', ')}]`;\n    } else {\n        return obj.toCSS();\n    }\n};\n\nexport default JsEvalNode;\n","import JsEvalNode from './js-eval-node';\nimport Dimension from './dimension';\nimport Quoted from './quoted';\nimport Anonymous from './anonymous';\n\nclass JavaScript extends JsEvalNode {\n    constructor(string, escaped, index, currentFileInfo) {\n        this.escaped = escaped;\n        this.expression = string;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n    }\n\n    eval(context) {\n        const result = this.evaluateJavaScript(this.expression, context);\n        const type = typeof result;\n\n        if (type === 'number' && !isNaN(result)) {\n            return new Dimension(result);\n        } else if (type === 'string') {\n            return new Quoted(`\"${result}\"`, result, this.escaped, this._index);\n        } else if (Array.isArray(result)) {\n            return new Anonymous(result.join(', '));\n        } else {\n            return new Anonymous(result);\n        }\n    }\n}\n\nJavaScript.prototype.type = 'JavaScript';\nexport default JavaScript;\n","import Node from './node';\n\nclass Assignment extends Node {\n    constructor(key, val) {\n        this.key = key;\n        this.value = val;\n    }\n\n    accept(visitor) {\n        this.value = visitor.visit(this.value);\n    }\n\n    eval(context) {\n        if (this.value.eval) {\n            return new Assignment(this.key, this.value.eval(context));\n        }\n        return this;\n    }\n\n    genCSS(context, output) {\n        output.add(`${this.key}=`);\n        if (this.value.genCSS) {\n            this.value.genCSS(context, output);\n        } else {\n            output.add(this.value);\n        }\n    }\n}\n\nAssignment.prototype.type = 'Assignment';\nexport default Assignment;\n","import Node from './node';\n\nclass Condition extends Node {\n    constructor(op, l, r, i, negate) {\n        this.op = op.trim();\n        this.lvalue = l;\n        this.rvalue = r;\n        this._index = i;\n        this.negate = negate;\n    }\n\n    accept(visitor) {\n        this.lvalue = visitor.visit(this.lvalue);\n        this.rvalue = visitor.visit(this.rvalue);\n    }\n\n    eval(context) {\n        const result = ((op, a, b) => {\n            switch (op) {\n                case 'and': return a && b;\n                case 'or':  return a || b;\n                default:\n                    switch (Node.compare(a, b)) {\n                        case -1:\n                            return op === '<' || op === '=<' || op === '<=';\n                        case 0:\n                            return op === '=' || op === '>=' || op === '=<' || op === '<=';\n                        case 1:\n                            return op === '>' || op === '>=';\n                        default:\n                            return false;\n                    }\n            }\n        })(this.op, this.lvalue.eval(context), this.rvalue.eval(context));\n\n        return this.negate ? !result : result;\n    }\n}\n\nCondition.prototype.type = 'Condition';\nexport default Condition;\n","import Node from './node';\n\nclass UnicodeDescriptor extends Node {\n    constructor(value) {\n        this.value = value;\n    }\n}\n\nUnicodeDescriptor.prototype.type = 'UnicodeDescriptor';\n\nexport default UnicodeDescriptor;\n","import Node from './node';\nimport Operation from './operation';\nimport Dimension from './dimension';\n\nclass Negative extends Node {\n    constructor(node) {\n        this.value = node;\n    }\n\n    genCSS(context, output) {\n        output.add('-');\n        this.value.genCSS(context, output);\n    }\n\n    eval(context) {\n        if (context.isMathOn()) {\n            return (new Operation('*', [new Dimension(-1), this.value])).eval(context);\n        }\n        return new Negative(this.value.eval(context));\n    }\n}\n\nNegative.prototype.type = 'Negative';\nexport default Negative;\n","import Node from './node';\nimport Selector from './selector';\n\nclass Extend extends Node {\n    constructor(selector, option, index, currentFileInfo, visibilityInfo) {\n        this.selector = selector;\n        this.option = option;\n        this.object_id = Extend.next_id++;\n        this.parent_ids = [this.object_id];\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.copyVisibilityInfo(visibilityInfo);\n        this.allowRoot = true;\n\n        switch (option) {\n            case 'all':\n                this.allowBefore = true;\n                this.allowAfter = true;\n                break;\n            default:\n                this.allowBefore = false;\n                this.allowAfter = false;\n                break;\n        }\n        this.setParent(this.selector, this);\n    }\n\n    accept(visitor) {\n        this.selector = visitor.visit(this.selector);\n    }\n\n    eval(context) {\n        return new Extend(this.selector.eval(context), this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n    }\n\n    clone(context) {\n        return new Extend(this.selector, this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n    }\n\n    // it concatenates (joins) all selectors in selector array\n    findSelfSelectors(selectors) {\n        let selfElements = [];\n        let i;\n        let selectorElements;\n\n        for (i = 0; i < selectors.length; i++) {\n            selectorElements = selectors[i].elements;\n            // duplicate the logic in genCSS function inside the selector node.\n            // future TODO - move both logics into the selector joiner visitor\n            if (i > 0 && selectorElements.length && selectorElements[0].combinator.value === '') {\n                selectorElements[0].combinator.value = ' ';\n            }\n            selfElements = selfElements.concat(selectors[i].elements);\n        }\n\n        this.selfSelectors = [new Selector(selfElements)];\n        this.selfSelectors[0].copyVisibilityInfo(this.visibilityInfo());\n    }\n}\n\nExtend.next_id = 0;\n\nExtend.prototype.type = 'Extend';\nexport default Extend;\n","import Node from './node';\nimport Variable from './variable';\nimport Ruleset from './ruleset';\nimport DetachedRuleset from './detached-ruleset';\nimport LessError from '../less-error';\n\nclass VariableCall extends Node {\n    constructor(variable, index, currentFileInfo) {\n        this.variable = variable;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.allowRoot = true;\n    }\n\n    eval(context) {\n        let rules;\n        let detachedRuleset = new Variable(this.variable, this.getIndex(), this.fileInfo()).eval(context);\n        const error = new LessError({message: `Could not evaluate variable call ${this.variable}`});\n\n        if (!detachedRuleset.ruleset) {\n            if (detachedRuleset.rules) {\n                rules = detachedRuleset;\n            }\n            else if (Array.isArray(detachedRuleset)) {\n                rules = new Ruleset('', detachedRuleset);\n            }\n            else if (Array.isArray(detachedRuleset.value)) {\n                rules = new Ruleset('', detachedRuleset.value);\n            }\n            else {\n                throw error;\n            }\n            detachedRuleset = new DetachedRuleset(rules);\n        }\n        if (detachedRuleset.ruleset) {\n            return detachedRuleset.callEval(context);\n        }\n        throw error;\n    }\n}\n\nVariableCall.prototype.type = 'VariableCall';\nexport default VariableCall;\n","import Node from './node';\nimport Variable from './variable';\nimport Ruleset from './ruleset';\nimport Selector from './selector';\n\nclass NamespaceValue extends Node {\n    constructor(ruleCall, lookups, important, index, fileInfo) {\n        this.value = ruleCall;\n        this.lookups = lookups;\n        this.important = important;\n        this._index = index;\n        this._fileInfo = fileInfo;\n    }\n\n    eval(context) {\n        let i;\n        let j;\n        let name;\n        let rules = this.value.eval(context);\n\n        for (i = 0; i < this.lookups.length; i++) {\n            name = this.lookups[i];\n\n            /**\n             * Eval'd DRs return rulesets.\n             * Eval'd mixins return rules, so let's make a ruleset if we need it.\n             * We need to do this because of late parsing of values\n             */\n            if (Array.isArray(rules)) {\n                rules = new Ruleset([new Selector()], rules);\n            }\n\n            if (name === '') {\n                rules = rules.lastDeclaration();\n            }\n            else if (name.charAt(0) === '@') {\n                if (name.charAt(1) === '@') {\n                    name = `@${new Variable(name.substr(1)).eval(context).value}`;\n                }\n                if (rules.variables) {\n                    rules = rules.variable(name);\n                }\n                \n                if (!rules) {\n                    throw { type: 'Name',\n                        message: `variable ${name} not found`,\n                        filename: this.fileInfo().filename,\n                        index: this.getIndex() };\n                }\n            }\n            else {\n                if (name.substring(0, 2) === '$@') {\n                    name = `$${new Variable(name.substr(1)).eval(context).value}`;\n                }\n                else {\n                    name = name.charAt(0) === '$' ? name : `$${name}`;\n                }\n                if (rules.properties) {\n                    rules = rules.property(name);\n                }\n            \n                if (!rules) {\n                    throw { type: 'Name',\n                        message: `property \"${name.substr(1)}\" not found`,\n                        filename: this.fileInfo().filename,\n                        index: this.getIndex() };\n                }\n                // Properties are an array of values, since a ruleset can have multiple props.\n                // We pick the last one (the \"cascaded\" value)\n                rules = rules[rules.length - 1];\n            }\n\n            if (rules.value) {\n                rules = rules.eval(context).value;\n            }\n            if (rules.ruleset) {\n                rules = rules.ruleset.eval(context);\n            }\n        }\n        return rules;\n    }\n}\n\nNamespaceValue.prototype.type = 'NamespaceValue';\nexport default NamespaceValue;\n","import Selector from './selector';\nimport Element from './element';\nimport Ruleset from './ruleset';\nimport Declaration from './declaration';\nimport DetachedRuleset from './detached-ruleset';\nimport Expression from './expression';\nimport contexts from '../contexts';\nimport * as utils from '../utils';\n\nclass Definition extends Ruleset {\n    constructor(name, params, rules, condition, variadic, frames, visibilityInfo) {\n        this.name = name || 'anonymous mixin';\n        this.selectors = [new Selector([new Element(null, name, false, this._index, this._fileInfo)])];\n        this.params = params;\n        this.condition = condition;\n        this.variadic = variadic;\n        this.arity = params.length;\n        this.rules = rules;\n        this._lookups = {};\n        const optionalParameters = [];\n        this.required = params.reduce((count, p) => {\n            if (!p.name || (p.name && !p.value)) {\n                return count + 1;\n            }\n            else {\n                optionalParameters.push(p.name);\n                return count;\n            }\n        }, 0);\n        this.optionalParameters = optionalParameters;\n        this.frames = frames;\n        this.copyVisibilityInfo(visibilityInfo);\n        this.allowRoot = true;\n    }\n\n    accept(visitor) {\n        if (this.params && this.params.length) {\n            this.params = visitor.visitArray(this.params);\n        }\n        this.rules = visitor.visitArray(this.rules);\n        if (this.condition) {\n            this.condition = visitor.visit(this.condition);\n        }\n    }\n\n    evalParams(context, mixinEnv, args, evaldArguments) {\n        /* jshint boss:true */\n        const frame = new Ruleset(null, null);\n\n        let varargs;\n        let arg;\n        const params = utils.copyArray(this.params);\n        let i;\n        let j;\n        let val;\n        let name;\n        let isNamedFound;\n        let argIndex;\n        let argsLength = 0;\n\n        if (mixinEnv.frames && mixinEnv.frames[0] && mixinEnv.frames[0].functionRegistry) {\n            frame.functionRegistry = mixinEnv.frames[0].functionRegistry.inherit();\n        }\n        mixinEnv = new contexts.Eval(mixinEnv, [frame].concat(mixinEnv.frames));\n\n        if (args) {\n            args = utils.copyArray(args);\n            argsLength = args.length;\n\n            for (i = 0; i < argsLength; i++) {\n                arg = args[i];\n                if (name = (arg && arg.name)) {\n                    isNamedFound = false;\n                    for (j = 0; j < params.length; j++) {\n                        if (!evaldArguments[j] && name === params[j].name) {\n                            evaldArguments[j] = arg.value.eval(context);\n                            frame.prependRule(new Declaration(name, arg.value.eval(context)));\n                            isNamedFound = true;\n                            break;\n                        }\n                    }\n                    if (isNamedFound) {\n                        args.splice(i, 1);\n                        i--;\n                        continue;\n                    } else {\n                        throw { type: 'Runtime', message: `Named argument for ${this.name} ${args[i].name} not found` };\n                    }\n                }\n            }\n        }\n        argIndex = 0;\n        for (i = 0; i < params.length; i++) {\n            if (evaldArguments[i]) { continue; }\n\n            arg = args && args[argIndex];\n\n            if (name = params[i].name) {\n                if (params[i].variadic) {\n                    varargs = [];\n                    for (j = argIndex; j < argsLength; j++) {\n                        varargs.push(args[j].value.eval(context));\n                    }\n                    frame.prependRule(new Declaration(name, new Expression(varargs).eval(context)));\n                } else {\n                    val = arg && arg.value;\n                    if (val) {\n                        // This was a mixin call, pass in a detached ruleset of it's eval'd rules\n                        if (Array.isArray(val)) {\n                            val = new DetachedRuleset(new Ruleset('', val));\n                        }\n                        else {\n                            val = val.eval(context);\n                        }\n                    } else if (params[i].value) {\n                        val = params[i].value.eval(mixinEnv);\n                        frame.resetCache();\n                    } else {\n                        throw { type: 'Runtime', message: `wrong number of arguments for ${this.name} (${argsLength} for ${this.arity})` };\n                    }\n\n                    frame.prependRule(new Declaration(name, val));\n                    evaldArguments[i] = val;\n                }\n            }\n\n            if (params[i].variadic && args) {\n                for (j = argIndex; j < argsLength; j++) {\n                    evaldArguments[j] = args[j].value.eval(context);\n                }\n            }\n            argIndex++;\n        }\n\n        return frame;\n    }\n\n    makeImportant() {\n        const rules = !this.rules ? this.rules : this.rules.map(r => {\n            if (r.makeImportant) {\n                return r.makeImportant(true);\n            } else {\n                return r;\n            }\n        });\n        const result = new Definition(this.name, this.params, rules, this.condition, this.variadic, this.frames);\n        return result;\n    }\n\n    eval(context) {\n        return new Definition(this.name, this.params, this.rules, this.condition, this.variadic, this.frames || utils.copyArray(context.frames));\n    }\n\n    evalCall(context, args, important) {\n        const _arguments = [];\n        const mixinFrames = this.frames ? this.frames.concat(context.frames) : context.frames;\n        const frame = this.evalParams(context, new contexts.Eval(context, mixinFrames), args, _arguments);\n        let rules;\n        let ruleset;\n\n        frame.prependRule(new Declaration('@arguments', new Expression(_arguments).eval(context)));\n\n        rules = utils.copyArray(this.rules);\n\n        ruleset = new Ruleset(null, rules);\n        ruleset.originalRuleset = this;\n        ruleset = ruleset.eval(new contexts.Eval(context, [this, frame].concat(mixinFrames)));\n        if (important) {\n            ruleset = ruleset.makeImportant();\n        }\n        return ruleset;\n    }\n\n    matchCondition(args, context) {\n        if (this.condition && !this.condition.eval(\n            new contexts.Eval(context,\n                [this.evalParams(context, /* the parameter variables */\n                    new contexts.Eval(context, this.frames ? this.frames.concat(context.frames) : context.frames), args, [])]\n                .concat(this.frames || []) // the parent namespace/mixin frames\n                .concat(context.frames)))) { // the current environment frames\n            return false;\n        }\n        return true;\n    }\n\n    matchArgs(args, context) {\n        const allArgsCnt = (args && args.length) || 0;\n        let len;\n        const optionalParameters = this.optionalParameters;\n        const requiredArgsCnt = !args ? 0 : args.reduce((count, p) => {\n            if (optionalParameters.indexOf(p.name) < 0) {\n                return count + 1;\n            } else {\n                return count;\n            }\n        }, 0);\n\n        if (!this.variadic) {\n            if (requiredArgsCnt < this.required) {\n                return false;\n            }\n            if (allArgsCnt > this.params.length) {\n                return false;\n            }\n        } else {\n            if (requiredArgsCnt < (this.required - 1)) {\n                return false;\n            }\n        }\n\n        // check patterns\n        len = Math.min(requiredArgsCnt, this.arity);\n\n        for (let i = 0; i < len; i++) {\n            if (!this.params[i].name && !this.params[i].variadic) {\n                if (args[i].value.eval(context).toCSS() != this.params[i].value.eval(context).toCSS()) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n}\n\nDefinition.prototype.type = 'MixinDefinition';\nDefinition.prototype.evalFirst = true;\nexport default Definition;\n","import Node from './node';\nimport Selector from './selector';\nimport MixinDefinition from './mixin-definition';\nimport defaultFunc from '../functions/default';\n\nclass MixinCall extends Node {\n    constructor(elements, args, index, currentFileInfo, important) {\n        this.selector = new Selector(elements);\n        this.arguments = args || [];\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.important = important;\n        this.allowRoot = true;\n        this.setParent(this.selector, this);\n    }\n\n    accept(visitor) {\n        if (this.selector) {\n            this.selector = visitor.visit(this.selector);\n        }\n        if (this.arguments.length) {\n            this.arguments = visitor.visitArray(this.arguments);\n        }\n    }\n\n    eval(context) {\n        let mixins;\n        let mixin;\n        let mixinPath;\n        const args = [];\n        let arg;\n        let argValue;\n        const rules = [];\n        let match = false;\n        let i;\n        let m;\n        let f;\n        let isRecursive;\n        let isOneFound;\n        const candidates = [];\n        let candidate;\n        const conditionResult = [];\n        let defaultResult;\n        const defFalseEitherCase = -1;\n        const defNone = 0;\n        const defTrue = 1;\n        const defFalse = 2;\n        let count;\n        let originalRuleset;\n        let noArgumentsFilter;\n\n        this.selector = this.selector.eval(context);\n\n        function calcDefGroup(mixin, mixinPath) {\n            let f;\n            let p;\n            let namespace;\n\n            for (f = 0; f < 2; f++) {\n                conditionResult[f] = true;\n                defaultFunc.value(f);\n                for (p = 0; p < mixinPath.length && conditionResult[f]; p++) {\n                    namespace = mixinPath[p];\n                    if (namespace.matchCondition) {\n                        conditionResult[f] = conditionResult[f] && namespace.matchCondition(null, context);\n                    }\n                }\n                if (mixin.matchCondition) {\n                    conditionResult[f] = conditionResult[f] && mixin.matchCondition(args, context);\n                }\n            }\n            if (conditionResult[0] || conditionResult[1]) {\n                if (conditionResult[0] != conditionResult[1]) {\n                    return conditionResult[1] ?\n                        defTrue : defFalse;\n                }\n\n                return defNone;\n            }\n            return defFalseEitherCase;\n        }\n\n        for (i = 0; i < this.arguments.length; i++) {\n            arg = this.arguments[i];\n            argValue = arg.value.eval(context);\n            if (arg.expand && Array.isArray(argValue.value)) {\n                argValue = argValue.value;\n                for (m = 0; m < argValue.length; m++) {\n                    args.push({value: argValue[m]});\n                }\n            } else {\n                args.push({name: arg.name, value: argValue});\n            }\n        }\n\n        noArgumentsFilter = rule => rule.matchArgs(null, context);\n\n        for (i = 0; i < context.frames.length; i++) {\n            if ((mixins = context.frames[i].find(this.selector, null, noArgumentsFilter)).length > 0) {\n                isOneFound = true;\n\n                // To make `default()` function independent of definition order we have two \"subpasses\" here.\n                // At first we evaluate each guard *twice* (with `default() == true` and `default() == false`),\n                // and build candidate list with corresponding flags. Then, when we know all possible matches,\n                // we make a final decision.\n\n                for (m = 0; m < mixins.length; m++) {\n                    mixin = mixins[m].rule;\n                    mixinPath = mixins[m].path;\n                    isRecursive = false;\n                    for (f = 0; f < context.frames.length; f++) {\n                        if ((!(mixin instanceof MixinDefinition)) && mixin === (context.frames[f].originalRuleset || context.frames[f])) {\n                            isRecursive = true;\n                            break;\n                        }\n                    }\n                    if (isRecursive) {\n                        continue;\n                    }\n\n                    if (mixin.matchArgs(args, context)) {\n                        candidate = {mixin, group: calcDefGroup(mixin, mixinPath)};\n\n                        if (candidate.group !== defFalseEitherCase) {\n                            candidates.push(candidate);\n                        }\n\n                        match = true;\n                    }\n                }\n\n                defaultFunc.reset();\n\n                count = [0, 0, 0];\n                for (m = 0; m < candidates.length; m++) {\n                    count[candidates[m].group]++;\n                }\n\n                if (count[defNone] > 0) {\n                    defaultResult = defFalse;\n                } else {\n                    defaultResult = defTrue;\n                    if ((count[defTrue] + count[defFalse]) > 1) {\n                        throw { type: 'Runtime',\n                            message: `Ambiguous use of \\`default()\\` found when matching for \\`${this.format(args)}\\``,\n                            index: this.getIndex(), filename: this.fileInfo().filename };\n                    }\n                }\n\n                for (m = 0; m < candidates.length; m++) {\n                    candidate = candidates[m].group;\n                    if ((candidate === defNone) || (candidate === defaultResult)) {\n                        try {\n                            mixin = candidates[m].mixin;\n                            if (!(mixin instanceof MixinDefinition)) {\n                                originalRuleset = mixin.originalRuleset || mixin;\n                                mixin = new MixinDefinition('', [], mixin.rules, null, false, null, originalRuleset.visibilityInfo());\n                                mixin.originalRuleset = originalRuleset;\n                            }\n                            const newRules = mixin.evalCall(context, args, this.important).rules;\n                            this._setVisibilityToReplacement(newRules);\n                            Array.prototype.push.apply(rules, newRules);\n                        } catch (e) {\n                            throw { message: e.message, index: this.getIndex(), filename: this.fileInfo().filename, stack: e.stack };\n                        }\n                    }\n                }\n\n                if (match) {\n                    return rules;\n                }\n            }\n        }\n        if (isOneFound) {\n            throw { type:    'Runtime',\n                message: `No matching definition was found for \\`${this.format(args)}\\``,\n                index:   this.getIndex(), filename: this.fileInfo().filename };\n        } else {\n            throw { type:    'Name',\n                message: `${this.selector.toCSS().trim()} is undefined`,\n                index:   this.getIndex(), filename: this.fileInfo().filename };\n        }\n    }\n\n    _setVisibilityToReplacement(replacement) {\n        let i;\n        let rule;\n        if (this.blocksVisibility()) {\n            for (i = 0; i < replacement.length; i++) {\n                rule = replacement[i];\n                rule.addVisibilityBlock();\n            }\n        }\n    }\n\n    format(args) {\n        return `${this.selector.toCSS().trim()}(${args ? args.map(a => {\n        let argValue = '';\n        if (a.name) {\n            argValue += `${a.name}:`;\n        }\n        if (a.value.toCSS) {\n            argValue += a.value.toCSS();\n        } else {\n            argValue += '???';\n        }\n        return argValue;\n    }).join(', ') : ''})`;\n    }\n}\n\nMixinCall.prototype.type = 'MixinCall';\nexport default MixinCall;\n","const tree = Object.create(null);\n\nimport Node from './node';\nimport Color from './color';\nimport AtRule from './atrule';\nimport DetachedRuleset from './detached-ruleset';\nimport Operation from './operation';\nimport Dimension from './dimension';\nimport Unit from './unit';\nimport Keyword from './keyword';\nimport Variable from './variable';\nimport Property from './property';\nimport Ruleset from './ruleset';\nimport Element from './element';\nimport Attribute from './attribute';\nimport Combinator from './combinator';\nimport Selector from './selector';\nimport Quoted from './quoted';\nimport Expression from './expression';\nimport Declaration from './declaration';\nimport Call from './call';\nimport URL from './url';\nimport Import from './import';\nimport Comment from './comment';\nimport Anonymous from './anonymous';\nimport Value from './value';\nimport JavaScript from './javascript';\nimport Assignment from './assignment';\nimport Condition from './condition';\nimport Paren from './paren';\nimport Media from './media';\nimport UnicodeDescriptor from './unicode-descriptor';\nimport Negative from './negative';\nimport Extend from './extend';\nimport VariableCall from './variable-call';\nimport NamespaceValue from './namespace-value';\n\n// mixins\nimport MixinCall from './mixin-call';\nimport MixinDefinition from './mixin-definition';\n\nexport default {\n    Node, Color, AtRule, DetachedRuleset, Operation,\n    Dimension, Unit, Keyword, Variable, Property,\n    Ruleset, Element, Attribute, Combinator, Selector,\n    Quoted, Expression, Declaration, Call, URL, Import,\n    Comment, Anonymous, Value, JavaScript, Assignment,\n    Condition, Paren, Media, UnicodeDescriptor, Negative,\n    Extend, VariableCall, NamespaceValue,\n    mixin: {\n        Call: MixinCall,\n        Definition: MixinDefinition\n    }\n};","export default {\n    error: function(msg) {\n        this._fireEvent('error', msg);\n    },\n    warn: function(msg) {\n        this._fireEvent('warn', msg);\n    },\n    info: function(msg) {\n        this._fireEvent('info', msg);\n    },\n    debug: function(msg) {\n        this._fireEvent('debug', msg);\n    },\n    addListener: function(listener) {\n        this._listeners.push(listener);\n    },\n    removeListener: function(listener) {\n        for (let i = 0; i < this._listeners.length; i++) {\n            if (this._listeners[i] === listener) {\n                this._listeners.splice(i, 1);\n                return;\n            }\n        }\n    },\n    _fireEvent: function(type, msg) {\n        for (let i = 0; i < this._listeners.length; i++) {\n            const logFunction = this._listeners[i][type];\n            if (logFunction) {\n                logFunction(msg);\n            }\n        }\n    },\n    _listeners: []\n};\n","/**\n * @todo Document why this abstraction exists, and the relationship between\n *       environment, file managers, and plugin manager\n */\n\nimport logger from '../logger';\n\nclass environment {\n    constructor(externalEnvironment, fileManagers) {\n        this.fileManagers = fileManagers || [];\n        externalEnvironment = externalEnvironment || {};\n\n        const optionalFunctions = ['encodeBase64', 'mimeLookup', 'charsetLookup', 'getSourceMapGenerator'];\n        const requiredFunctions = [];\n        const functions = requiredFunctions.concat(optionalFunctions);\n\n        for (let i = 0; i < functions.length; i++) {\n            const propName = functions[i];\n            const environmentFunc = externalEnvironment[propName];\n            if (environmentFunc) {\n                this[propName] = environmentFunc.bind(externalEnvironment);\n            } else if (i < requiredFunctions.length) {\n                this.warn(`missing required function in environment - ${propName}`);\n            }\n        }\n    }\n\n    getFileManager(filename, currentDirectory, options, environment, isSync) {\n\n        if (!filename) {\n            logger.warn('getFileManager called with no filename.. Please report this issue. continuing.');\n        }\n        if (currentDirectory == null) {\n            logger.warn('getFileManager called with null directory.. Please report this issue. continuing.');\n        }\n\n        let fileManagers = this.fileManagers;\n        if (options.pluginManager) {\n            fileManagers = [].concat(fileManagers).concat(options.pluginManager.getFileManagers());\n        }\n        for (let i = fileManagers.length - 1; i >= 0 ; i--) {\n            const fileManager = fileManagers[i];\n            if (fileManager[isSync ? 'supportsSync' : 'supports'](filename, currentDirectory, options, environment)) {\n                return fileManager;\n            }\n        }\n        return null;\n    }\n\n    addFileManager(fileManager) {\n        this.fileManagers.push(fileManager);\n    }\n\n    clearFileManagers() {\n        this.fileManagers = [];\n    }\n}\n\nexport default environment;\n","const abstractFileManager = () => {\n};\n\nabstractFileManager.prototype.getPath = filename => {\n    let j = filename.lastIndexOf('?');\n    if (j > 0) {\n        filename = filename.slice(0, j);\n    }\n    j = filename.lastIndexOf('/');\n    if (j < 0) {\n        j = filename.lastIndexOf('\\\\');\n    }\n    if (j < 0) {\n        return '';\n    }\n    return filename.slice(0, j + 1);\n};\n\nabstractFileManager.prototype.tryAppendExtension = (path, ext) => /(\\.[a-z]*$)|([\\?;].*)$/.test(path) ? path : path + ext;\n\nabstractFileManager.prototype.tryAppendLessExtension = function(path) {\n    return this.tryAppendExtension(path, '.less');\n};\n\nabstractFileManager.prototype.supportsSync = () => false;\n\nabstractFileManager.prototype.alwaysMakePathsAbsolute = () => false;\n\nabstractFileManager.prototype.isPathAbsolute = filename => (/^(?:[a-z-]+:|\\/|\\\\|#)/i).test(filename);\n// TODO: pull out / replace?\nabstractFileManager.prototype.join = (basePath, laterPath) => {\n    if (!basePath) {\n        return laterPath;\n    }\n    return basePath + laterPath;\n};\n\nabstractFileManager.prototype.pathDiff = function pathDiff(url, baseUrl) {\n    // diff between two paths to create a relative path\n\n    const urlParts = this.extractUrlParts(url);\n\n    const baseUrlParts = this.extractUrlParts(baseUrl);\n    let i;\n    let max;\n    let urlDirectories;\n    let baseUrlDirectories;\n    let diff = '';\n    if (urlParts.hostPart !== baseUrlParts.hostPart) {\n        return '';\n    }\n    max = Math.max(baseUrlParts.directories.length, urlParts.directories.length);\n    for (i = 0; i < max; i++) {\n        if (baseUrlParts.directories[i] !== urlParts.directories[i]) { break; }\n    }\n    baseUrlDirectories = baseUrlParts.directories.slice(i);\n    urlDirectories = urlParts.directories.slice(i);\n    for (i = 0; i < baseUrlDirectories.length - 1; i++) {\n        diff += '../';\n    }\n    for (i = 0; i < urlDirectories.length - 1; i++) {\n        diff += `${urlDirectories[i]}/`;\n    }\n    return diff;\n};\n// helper function, not part of API\nabstractFileManager.prototype.extractUrlParts = function extractUrlParts(url, baseUrl) {\n    // urlParts[1] = protocol://hostname/ OR /\n    // urlParts[2] = / if path relative to host base\n    // urlParts[3] = directories\n    // urlParts[4] = filename\n    // urlParts[5] = parameters\n\n    const urlPartsRegex = /^((?:[a-z-]+:)?\\/{2}(?:[^\\/\\?#]*\\/)|([\\/\\\\]))?((?:[^\\/\\\\\\?#]*[\\/\\\\])*)([^\\/\\\\\\?#]*)([#\\?].*)?$/i;\n\n    const urlParts = url.match(urlPartsRegex);\n    const returner = {};\n    let rawDirectories = [];\n    const directories = [];\n    let i;\n    let baseUrlParts;\n\n    if (!urlParts) {\n        throw new Error(`Could not parse sheet href - '${url}'`);\n    }\n\n    // Stylesheets in IE don't always return the full path\n    if (baseUrl && (!urlParts[1] || urlParts[2])) {\n        baseUrlParts = baseUrl.match(urlPartsRegex);\n        if (!baseUrlParts) {\n            throw new Error(`Could not parse page url - '${baseUrl}'`);\n        }\n        urlParts[1] = urlParts[1] || baseUrlParts[1] || '';\n        if (!urlParts[2]) {\n            urlParts[3] = baseUrlParts[3] + urlParts[3];\n        }\n    }\n\n    if (urlParts[3]) {\n        rawDirectories = urlParts[3].replace(/\\\\/g, '/').split('/');\n\n        // collapse '..' and skip '.'\n        for (i = 0; i < rawDirectories.length; i++) {\n\n            if (rawDirectories[i] === '..') {\n                directories.pop();\n            }\n            else if (rawDirectories[i] !== '.') {\n                directories.push(rawDirectories[i]);\n            }\n        \n        }\n    }\n\n    returner.hostPart = urlParts[1];\n    returner.directories = directories;\n    returner.rawPath = (urlParts[1] || '') + rawDirectories.join('/');\n    returner.path = (urlParts[1] || '') + directories.join('/');\n    returner.filename = urlParts[4];\n    returner.fileUrl = returner.path + (urlParts[4] || '');\n    returner.url = returner.fileUrl + (urlParts[5] || '');\n    return returner;\n};\n\nexport default abstractFileManager;\n","import functionRegistry from '../functions/function-registry';\nimport LessError from '../less-error';\n\nclass AbstractPluginLoader {\n    constructor() {\n        // Implemented by Node.js plugin loader\n        this.require = () => null\n    }\n\n    evalPlugin(contents, context, imports, pluginOptions, fileInfo) {\n        let loader;\n        let registry;\n        let pluginObj;\n        let localModule;\n        let pluginManager;\n        let filename;\n        let result;\n\n        pluginManager = context.pluginManager;\n\n        if (fileInfo) {\n            if (typeof fileInfo === 'string') {\n                filename = fileInfo;\n            }\n            else {\n                filename = fileInfo.filename;\n            }\n        }\n        const shortname = (new this.less.FileManager()).extractUrlParts(filename).filename;\n\n        if (filename) {\n            pluginObj = pluginManager.get(filename);\n\n            if (pluginObj) {\n                result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n                if (result) {\n                    return result;\n                }\n                try {\n                    if (pluginObj.use) {\n                        pluginObj.use.call(this.context, pluginObj);\n                    }\n                }\n                catch (e) {\n                    e.message = e.message || 'Error during @plugin call';\n                    return new LessError(e, imports, filename);\n                }\n                return pluginObj;\n            }\n        }\n        localModule = {\n            exports: {},\n            pluginManager,\n            fileInfo\n        };\n        registry = functionRegistry.create();\n\n        const registerPlugin = obj => {\n            pluginObj = obj;\n        };\n\n        try {\n            loader = new Function('module', 'require', 'registerPlugin', 'functions', 'tree', 'less', 'fileInfo', contents);\n            loader(localModule, this.require(filename), registerPlugin, registry, this.less.tree, this.less, fileInfo);\n        }\n        catch (e) {\n            return new LessError(e, imports, filename);\n        }\n\n        if (!pluginObj) {\n            pluginObj = localModule.exports;\n        }\n        pluginObj = this.validatePlugin(pluginObj, filename, shortname);\n\n        if (pluginObj instanceof LessError) {\n            return pluginObj;\n        }\n\n        if (pluginObj) {\n            pluginObj.imports = imports;\n            pluginObj.filename = filename;\n\n            // For < 3.x (or unspecified minVersion) - setOptions() before install()\n            if (!pluginObj.minVersion || this.compareVersion('3.0.0', pluginObj.minVersion) < 0) {\n                result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n\n                if (result) {\n                    return result;\n                }\n            }\n\n            // Run on first load\n            pluginManager.addPlugin(pluginObj, fileInfo.filename, registry);\n            pluginObj.functions = registry.getLocalFunctions();\n\n            // Need to call setOptions again because the pluginObj might have functions\n            result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n            if (result) {\n                return result;\n            }\n\n            // Run every @plugin call\n            try {\n                if (pluginObj.use) {\n                    pluginObj.use.call(this.context, pluginObj);\n                }\n            }\n            catch (e) {\n                e.message = e.message || 'Error during @plugin call';\n                return new LessError(e, imports, filename);\n            }\n\n        }\n        else {\n            return new LessError({ message: 'Not a valid plugin' }, imports, filename);\n        }\n\n        return pluginObj;\n    }\n\n    trySetOptions(plugin, filename, name, options) {\n        if (options && !plugin.setOptions) {\n            return new LessError({\n                message: `Options have been provided but the plugin ${name} does not support any options.`\n            });\n        }\n        try {\n            plugin.setOptions && plugin.setOptions(options);\n        }\n        catch (e) {\n            return new LessError(e);\n        }\n    }\n\n    validatePlugin(plugin, filename, name) {\n        if (plugin) {\n            // support plugins being a function\n            // so that the plugin can be more usable programmatically\n            if (typeof plugin === 'function') {\n                plugin = new plugin();\n            }\n\n            if (plugin.minVersion) {\n                if (this.compareVersion(plugin.minVersion, this.less.version) < 0) {\n                    return new LessError({\n                        message: `Plugin ${name} requires version ${this.versionToString(plugin.minVersion)}`\n                    });\n                }\n            }\n            return plugin;\n        }\n        return null;\n    }\n\n    compareVersion(aVersion, bVersion) {\n        if (typeof aVersion === 'string') {\n            aVersion = aVersion.match(/^(\\d+)\\.?(\\d+)?\\.?(\\d+)?/);\n            aVersion.shift();\n        }\n        for (let i = 0; i < aVersion.length; i++) {\n            if (aVersion[i] !== bVersion[i]) {\n                return parseInt(aVersion[i]) > parseInt(bVersion[i]) ? -1 : 1;\n            }\n        }\n        return 0;\n    }\n\n    versionToString(version) {\n        let versionString = '';\n        for (let i = 0; i < version.length; i++) {\n            versionString += (versionString ? '.' : '') + version[i];\n        }\n        return versionString;\n    }\n\n    printUsage(plugins) {\n        for (let i = 0; i < plugins.length; i++) {\n            const plugin = plugins[i];\n            if (plugin.printUsage) {\n                plugin.printUsage();\n            }\n        }\n    }\n}\n\nexport default AbstractPluginLoader;\n\n","import tree from '../tree';\nconst _visitArgs = { visitDeeper: true };\nlet _hasIndexed = false;\n\nfunction _noop(node) {\n    return node;\n}\n\nfunction indexNodeTypes(parent, ticker) {\n    // add .typeIndex to tree node types for lookup table\n    let key;\n\n    let child;\n    for (key in parent) { \n        /* eslint guard-for-in: 0 */\n        child = parent[key];\n        switch (typeof child) {\n            case 'function':\n                // ignore bound functions directly on tree which do not have a prototype\n                // or aren't nodes\n                if (child.prototype && child.prototype.type) {\n                    child.prototype.typeIndex = ticker++;\n                }\n                break;\n            case 'object':\n                ticker = indexNodeTypes(child, ticker);\n                break;\n        \n        }\n    }\n    return ticker;\n}\n\nclass Visitor {\n    constructor(implementation) {\n        this._implementation = implementation;\n        this._visitInCache = {};\n        this._visitOutCache = {};\n\n        if (!_hasIndexed) {\n            indexNodeTypes(tree, 1);\n            _hasIndexed = true;\n        }\n    }\n\n    visit(node) {\n        if (!node) {\n            return node;\n        }\n\n        const nodeTypeIndex = node.typeIndex;\n        if (!nodeTypeIndex) {\n            // MixinCall args aren't a node type?\n            if (node.value && node.value.typeIndex) {\n                this.visit(node.value);\n            }\n            return node;\n        }\n\n        const impl = this._implementation;\n        let func = this._visitInCache[nodeTypeIndex];\n        let funcOut = this._visitOutCache[nodeTypeIndex];\n        const visitArgs = _visitArgs;\n        let fnName;\n\n        visitArgs.visitDeeper = true;\n\n        if (!func) {\n            fnName = `visit${node.type}`;\n            func = impl[fnName] || _noop;\n            funcOut = impl[`${fnName}Out`] || _noop;\n            this._visitInCache[nodeTypeIndex] = func;\n            this._visitOutCache[nodeTypeIndex] = funcOut;\n        }\n\n        if (func !== _noop) {\n            const newNode = func.call(impl, node, visitArgs);\n            if (node && impl.isReplacing) {\n                node = newNode;\n            }\n        }\n\n        if (visitArgs.visitDeeper && node && node.accept) {\n            node.accept(this);\n        }\n\n        if (funcOut != _noop) {\n            funcOut.call(impl, node);\n        }\n\n        return node;\n    }\n\n    visitArray(nodes, nonReplacing) {\n        if (!nodes) {\n            return nodes;\n        }\n\n        const cnt = nodes.length;\n        let i;\n\n        // Non-replacing\n        if (nonReplacing || !this._implementation.isReplacing) {\n            for (i = 0; i < cnt; i++) {\n                this.visit(nodes[i]);\n            }\n            return nodes;\n        }\n\n        // Replacing\n        const out = [];\n        for (i = 0; i < cnt; i++) {\n            const evald = this.visit(nodes[i]);\n            if (evald === undefined) { continue; }\n            if (!evald.splice) {\n                out.push(evald);\n            } else if (evald.length) {\n                this.flatten(evald, out);\n            }\n        }\n        return out;\n    }\n\n    flatten(arr, out) {\n        if (!out) {\n            out = [];\n        }\n\n        let cnt;\n        let i;\n        let item;\n        let nestedCnt;\n        let j;\n        let nestedItem;\n\n        for (i = 0, cnt = arr.length; i < cnt; i++) {\n            item = arr[i];\n            if (item === undefined) {\n                continue;\n            }\n            if (!item.splice) {\n                out.push(item);\n                continue;\n            }\n\n            for (j = 0, nestedCnt = item.length; j < nestedCnt; j++) {\n                nestedItem = item[j];\n                if (nestedItem === undefined) {\n                    continue;\n                }\n                if (!nestedItem.splice) {\n                    out.push(nestedItem);\n                } else if (nestedItem.length) {\n                    this.flatten(nestedItem, out);\n                }\n            }\n        }\n\n        return out;\n    }\n}\n\nexport default Visitor;\n","class ImportSequencer {\n    constructor(onSequencerEmpty) {\n        this.imports = [];\n        this.variableImports = [];\n        this._onSequencerEmpty = onSequencerEmpty;\n        this._currentDepth = 0;\n    }\n\n    addImport(callback) {\n        const importSequencer = this;\n\n        const importItem = {\n            callback,\n            args: null,\n            isReady: false\n        };\n\n        this.imports.push(importItem);\n        return function(...args) {\n            importItem.args = Array.prototype.slice.call(args, 0);\n            importItem.isReady = true;\n            importSequencer.tryRun();\n        };\n    }\n\n    addVariableImport(callback) {\n        this.variableImports.push(callback);\n    }\n\n    tryRun() {\n        this._currentDepth++;\n        try {\n            while (true) {\n                while (this.imports.length > 0) {\n                    const importItem = this.imports[0];\n                    if (!importItem.isReady) {\n                        return;\n                    }\n                    this.imports = this.imports.slice(1);\n                    importItem.callback.apply(null, importItem.args);\n                }\n                if (this.variableImports.length === 0) {\n                    break;\n                }\n                const variableImport = this.variableImports[0];\n                this.variableImports = this.variableImports.slice(1);\n                variableImport();\n            }\n        } finally {\n            this._currentDepth--;\n        }\n        if (this._currentDepth === 0 && this._onSequencerEmpty) {\n            this._onSequencerEmpty();\n        }\n    }\n}\n\nexport default ImportSequencer;\n","import contexts from '../contexts';\nimport Visitor from './visitor';\nimport ImportSequencer from './import-sequencer';\nimport * as utils from '../utils';\n\nconst ImportVisitor = function(importer, finish) {\n\n    this._visitor = new Visitor(this);\n    this._importer = importer;\n    this._finish = finish;\n    this.context = new contexts.Eval();\n    this.importCount = 0;\n    this.onceFileDetectionMap = {};\n    this.recursionDetector = {};\n    this._sequencer = new ImportSequencer(this._onSequencerEmpty.bind(this));\n};\n\nImportVisitor.prototype = {\n    isReplacing: false,\n    run: function (root) {\n        try {\n            // process the contents\n            this._visitor.visit(root);\n        }\n        catch (e) {\n            this.error = e;\n        }\n\n        this.isFinished = true;\n        this._sequencer.tryRun();\n    },\n    _onSequencerEmpty: function() {\n        if (!this.isFinished) {\n            return;\n        }\n        this._finish(this.error);\n    },\n    visitImport: function (importNode, visitArgs) {\n        const inlineCSS = importNode.options.inline;\n\n        if (!importNode.css || inlineCSS) {\n\n            const context = new contexts.Eval(this.context, utils.copyArray(this.context.frames));\n            const importParent = context.frames[0];\n\n            this.importCount++;\n            if (importNode.isVariableImport()) {\n                this._sequencer.addVariableImport(this.processImportNode.bind(this, importNode, context, importParent));\n            } else {\n                this.processImportNode(importNode, context, importParent);\n            }\n        }\n        visitArgs.visitDeeper = false;\n    },\n    processImportNode: function(importNode, context, importParent) {\n        let evaldImportNode;\n        const inlineCSS = importNode.options.inline;\n\n        try {\n            evaldImportNode = importNode.evalForImport(context);\n        } catch (e) {\n            if (!e.filename) { e.index = importNode.getIndex(); e.filename = importNode.fileInfo().filename; }\n            // attempt to eval properly and treat as css\n            importNode.css = true;\n            // if that fails, this error will be thrown\n            importNode.error = e;\n        }\n\n        if (evaldImportNode && (!evaldImportNode.css || inlineCSS)) {\n            if (evaldImportNode.options.multiple) {\n                context.importMultiple = true;\n            }\n\n            // try appending if we haven't determined if it is css or not\n            const tryAppendLessExtension = evaldImportNode.css === undefined;\n\n            for (let i = 0; i < importParent.rules.length; i++) {\n                if (importParent.rules[i] === importNode) {\n                    importParent.rules[i] = evaldImportNode;\n                    break;\n                }\n            }\n\n            const onImported = this.onImported.bind(this, evaldImportNode, context);\n            const sequencedOnImported = this._sequencer.addImport(onImported);\n\n            this._importer.push(evaldImportNode.getPath(), tryAppendLessExtension, evaldImportNode.fileInfo(),\n                evaldImportNode.options, sequencedOnImported);\n        } else {\n            this.importCount--;\n            if (this.isFinished) {\n                this._sequencer.tryRun();\n            }\n        }\n    },\n    onImported: function (importNode, context, e, root, importedAtRoot, fullPath) {\n        if (e) {\n            if (!e.filename) {\n                e.index = importNode.getIndex(); e.filename = importNode.fileInfo().filename;\n            }\n            this.error = e;\n        }\n\n        const importVisitor = this;\n        const inlineCSS = importNode.options.inline;\n        const isPlugin = importNode.options.isPlugin;\n        const isOptional = importNode.options.optional;\n        const duplicateImport = importedAtRoot || fullPath in importVisitor.recursionDetector;\n\n        if (!context.importMultiple) {\n            if (duplicateImport) {\n                importNode.skip = true;\n            } else {\n                importNode.skip = () => {\n                    if (fullPath in importVisitor.onceFileDetectionMap) {\n                        return true;\n                    }\n                    importVisitor.onceFileDetectionMap[fullPath] = true;\n                    return false;\n                };\n            }\n        }\n\n        if (!fullPath && isOptional) {\n            importNode.skip = true;\n        }\n\n        if (root) {\n            importNode.root = root;\n            importNode.importedFilename = fullPath;\n\n            if (!inlineCSS && !isPlugin && (context.importMultiple || !duplicateImport)) {\n                importVisitor.recursionDetector[fullPath] = true;\n\n                const oldContext = this.context;\n                this.context = context;\n                try {\n                    this._visitor.visit(root);\n                } catch (e) {\n                    this.error = e;\n                }\n                this.context = oldContext;\n            }\n        }\n\n        importVisitor.importCount--;\n\n        if (importVisitor.isFinished) {\n            importVisitor._sequencer.tryRun();\n        }\n    },\n    visitDeclaration: function (declNode, visitArgs) {\n        if (declNode.value.type === 'DetachedRuleset') {\n            this.context.frames.unshift(declNode);\n        } else {\n            visitArgs.visitDeeper = false;\n        }\n    },\n    visitDeclarationOut: function(declNode) {\n        if (declNode.value.type === 'DetachedRuleset') {\n            this.context.frames.shift();\n        }\n    },\n    visitAtRule: function (atRuleNode, visitArgs) {\n        this.context.frames.unshift(atRuleNode);\n    },\n    visitAtRuleOut: function (atRuleNode) {\n        this.context.frames.shift();\n    },\n    visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\n        this.context.frames.unshift(mixinDefinitionNode);\n    },\n    visitMixinDefinitionOut: function (mixinDefinitionNode) {\n        this.context.frames.shift();\n    },\n    visitRuleset: function (rulesetNode, visitArgs) {\n        this.context.frames.unshift(rulesetNode);\n    },\n    visitRulesetOut: function (rulesetNode) {\n        this.context.frames.shift();\n    },\n    visitMedia: function (mediaNode, visitArgs) {\n        this.context.frames.unshift(mediaNode.rules[0]);\n    },\n    visitMediaOut: function (mediaNode) {\n        this.context.frames.shift();\n    }\n};\nexport default ImportVisitor;\n","class SetTreeVisibilityVisitor {\n    constructor(visible) {\n        this.visible = visible;\n    }\n\n    run(root) {\n        this.visit(root);\n    }\n\n    visitArray(nodes) {\n        if (!nodes) {\n            return nodes;\n        }\n\n        const cnt = nodes.length;\n        let i;\n        for (i = 0; i < cnt; i++) {\n            this.visit(nodes[i]);\n        }\n        return nodes;\n    }\n\n    visit(node) {\n        if (!node) {\n            return node;\n        }\n        if (node.constructor === Array) {\n            return this.visitArray(node);\n        }\n\n        if (!node.blocksVisibility || node.blocksVisibility()) {\n            return node;\n        }\n        if (this.visible) {\n            node.ensureVisibility();\n        } else {\n            node.ensureInvisibility();\n        }\n\n        node.accept(this);\n        return node;\n    }\n}\n\nexport default SetTreeVisibilityVisitor;","import tree from '../tree';\nimport Visitor from './visitor';\nimport logger from '../logger';\nimport * as utils from '../utils';\n\n/* jshint loopfunc:true */\n\nclass ExtendFinderVisitor {\n    constructor() {\n        this._visitor = new Visitor(this);\n        this.contexts = [];\n        this.allExtendsStack = [[]];\n    }\n\n    run(root) {\n        root = this._visitor.visit(root);\n        root.allExtends = this.allExtendsStack[0];\n        return root;\n    }\n\n    visitDeclaration(declNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    }\n\n    visitMixinDefinition(mixinDefinitionNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    }\n\n    visitRuleset(rulesetNode, visitArgs) {\n        if (rulesetNode.root) {\n            return;\n        }\n\n        let i;\n        let j;\n        let extend;\n        const allSelectorsExtendList = [];\n        let extendList;\n\n        // get &:extend(.a); rules which apply to all selectors in this ruleset\n        const rules = rulesetNode.rules;\n\n        const ruleCnt = rules ? rules.length : 0;\n        for (i = 0; i < ruleCnt; i++) {\n            if (rulesetNode.rules[i] instanceof tree.Extend) {\n                allSelectorsExtendList.push(rules[i]);\n                rulesetNode.extendOnEveryPath = true;\n            }\n        }\n\n        // now find every selector and apply the extends that apply to all extends\n        // and the ones which apply to an individual extend\n        const paths = rulesetNode.paths;\n        for (i = 0; i < paths.length; i++) {\n            const selectorPath = paths[i];\n            const selector = selectorPath[selectorPath.length - 1];\n            const selExtendList = selector.extendList;\n\n            extendList = selExtendList ? utils.copyArray(selExtendList).concat(allSelectorsExtendList)\n                                       : allSelectorsExtendList;\n\n            if (extendList) {\n                extendList = extendList.map(allSelectorsExtend => allSelectorsExtend.clone());\n            }\n\n            for (j = 0; j < extendList.length; j++) {\n                this.foundExtends = true;\n                extend = extendList[j];\n                extend.findSelfSelectors(selectorPath);\n                extend.ruleset = rulesetNode;\n                if (j === 0) { extend.firstExtendOnThisSelectorPath = true; }\n                this.allExtendsStack[this.allExtendsStack.length - 1].push(extend);\n            }\n        }\n\n        this.contexts.push(rulesetNode.selectors);\n    }\n\n    visitRulesetOut(rulesetNode) {\n        if (!rulesetNode.root) {\n            this.contexts.length = this.contexts.length - 1;\n        }\n    }\n\n    visitMedia(mediaNode, visitArgs) {\n        mediaNode.allExtends = [];\n        this.allExtendsStack.push(mediaNode.allExtends);\n    }\n\n    visitMediaOut(mediaNode) {\n        this.allExtendsStack.length = this.allExtendsStack.length - 1;\n    }\n\n    visitAtRule(atRuleNode, visitArgs) {\n        atRuleNode.allExtends = [];\n        this.allExtendsStack.push(atRuleNode.allExtends);\n    }\n\n    visitAtRuleOut(atRuleNode) {\n        this.allExtendsStack.length = this.allExtendsStack.length - 1;\n    }\n}\n\nclass ProcessExtendsVisitor {\n    constructor() {\n        this._visitor = new Visitor(this);\n    }\n\n    run(root) {\n        const extendFinder = new ExtendFinderVisitor();\n        this.extendIndices = {};\n        extendFinder.run(root);\n        if (!extendFinder.foundExtends) { return root; }\n        root.allExtends = root.allExtends.concat(this.doExtendChaining(root.allExtends, root.allExtends));\n        this.allExtendsStack = [root.allExtends];\n        const newRoot = this._visitor.visit(root);\n        this.checkExtendsForNonMatched(root.allExtends);\n        return newRoot;\n    }\n\n    checkExtendsForNonMatched(extendList) {\n        const indices = this.extendIndices;\n        extendList.filter(extend => !extend.hasFoundMatches && extend.parent_ids.length == 1).forEach(extend => {\n            let selector = '_unknown_';\n            try {\n                selector = extend.selector.toCSS({});\n            }\n            catch (_) {}\n\n            if (!indices[`${extend.index} ${selector}`]) {\n                indices[`${extend.index} ${selector}`] = true;\n                logger.warn(`extend '${selector}' has no matches`);\n            }\n        });\n    }\n\n    doExtendChaining(extendsList, extendsListTarget, iterationCount) {\n        //\n        // chaining is different from normal extension.. if we extend an extend then we are not just copying, altering\n        // and pasting the selector we would do normally, but we are also adding an extend with the same target selector\n        // this means this new extend can then go and alter other extends\n        //\n        // this method deals with all the chaining work - without it, extend is flat and doesn't work on other extend selectors\n        // this is also the most expensive.. and a match on one selector can cause an extension of a selector we had already\n        // processed if we look at each selector at a time, as is done in visitRuleset\n\n        let extendIndex;\n\n        let targetExtendIndex;\n        let matches;\n        const extendsToAdd = [];\n        let newSelector;\n        const extendVisitor = this;\n        let selectorPath;\n        let extend;\n        let targetExtend;\n        let newExtend;\n\n        iterationCount = iterationCount || 0;\n\n        // loop through comparing every extend with every target extend.\n        // a target extend is the one on the ruleset we are looking at copy/edit/pasting in place\n        // e.g.  .a:extend(.b) {}  and .b:extend(.c) {} then the first extend extends the second one\n        // and the second is the target.\n        // the separation into two lists allows us to process a subset of chains with a bigger set, as is the\n        // case when processing media queries\n        for (extendIndex = 0; extendIndex < extendsList.length; extendIndex++) {\n            for (targetExtendIndex = 0; targetExtendIndex < extendsListTarget.length; targetExtendIndex++) {\n\n                extend = extendsList[extendIndex];\n                targetExtend = extendsListTarget[targetExtendIndex];\n\n                // look for circular references\n                if ( extend.parent_ids.indexOf( targetExtend.object_id ) >= 0 ) { continue; }\n\n                // find a match in the target extends self selector (the bit before :extend)\n                selectorPath = [targetExtend.selfSelectors[0]];\n                matches = extendVisitor.findMatch(extend, selectorPath);\n\n                if (matches.length) {\n                    extend.hasFoundMatches = true;\n\n                    // we found a match, so for each self selector..\n                    extend.selfSelectors.forEach(selfSelector => {\n                        const info = targetExtend.visibilityInfo();\n\n                        // process the extend as usual\n                        newSelector = extendVisitor.extendSelector(matches, selectorPath, selfSelector, extend.isVisible());\n\n                        // but now we create a new extend from it\n                        newExtend = new(tree.Extend)(targetExtend.selector, targetExtend.option, 0, targetExtend.fileInfo(), info);\n                        newExtend.selfSelectors = newSelector;\n\n                        // add the extend onto the list of extends for that selector\n                        newSelector[newSelector.length - 1].extendList = [newExtend];\n\n                        // record that we need to add it.\n                        extendsToAdd.push(newExtend);\n                        newExtend.ruleset = targetExtend.ruleset;\n\n                        // remember its parents for circular references\n                        newExtend.parent_ids = newExtend.parent_ids.concat(targetExtend.parent_ids, extend.parent_ids);\n\n                        // only process the selector once.. if we have :extend(.a,.b) then multiple\n                        // extends will look at the same selector path, so when extending\n                        // we know that any others will be duplicates in terms of what is added to the css\n                        if (targetExtend.firstExtendOnThisSelectorPath) {\n                            newExtend.firstExtendOnThisSelectorPath = true;\n                            targetExtend.ruleset.paths.push(newSelector);\n                        }\n                    });\n                }\n            }\n        }\n\n        if (extendsToAdd.length) {\n            // try to detect circular references to stop a stack overflow.\n            // may no longer be needed.\n            this.extendChainCount++;\n            if (iterationCount > 100) {\n                let selectorOne = '{unable to calculate}';\n                let selectorTwo = '{unable to calculate}';\n                try {\n                    selectorOne = extendsToAdd[0].selfSelectors[0].toCSS();\n                    selectorTwo = extendsToAdd[0].selector.toCSS();\n                }\n                catch (e) {}\n                throw { message: `extend circular reference detected. One of the circular extends is currently:${selectorOne}:extend(${selectorTwo})`};\n            }\n\n            // now process the new extends on the existing rules so that we can handle a extending b extending c extending\n            // d extending e...\n            return extendsToAdd.concat(extendVisitor.doExtendChaining(extendsToAdd, extendsListTarget, iterationCount + 1));\n        } else {\n            return extendsToAdd;\n        }\n    }\n\n    visitDeclaration(ruleNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    }\n\n    visitMixinDefinition(mixinDefinitionNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    }\n\n    visitSelector(selectorNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    }\n\n    visitRuleset(rulesetNode, visitArgs) {\n        if (rulesetNode.root) {\n            return;\n        }\n        let matches;\n        let pathIndex;\n        let extendIndex;\n        const allExtends = this.allExtendsStack[this.allExtendsStack.length - 1];\n        const selectorsToAdd = [];\n        const extendVisitor = this;\n        let selectorPath;\n\n        // look at each selector path in the ruleset, find any extend matches and then copy, find and replace\n\n        for (extendIndex = 0; extendIndex < allExtends.length; extendIndex++) {\n            for (pathIndex = 0; pathIndex < rulesetNode.paths.length; pathIndex++) {\n                selectorPath = rulesetNode.paths[pathIndex];\n\n                // extending extends happens initially, before the main pass\n                if (rulesetNode.extendOnEveryPath) { continue; }\n                const extendList = selectorPath[selectorPath.length - 1].extendList;\n                if (extendList && extendList.length) { continue; }\n\n                matches = this.findMatch(allExtends[extendIndex], selectorPath);\n\n                if (matches.length) {\n                    allExtends[extendIndex].hasFoundMatches = true;\n\n                    allExtends[extendIndex].selfSelectors.forEach(selfSelector => {\n                        let extendedSelectors;\n                        extendedSelectors = extendVisitor.extendSelector(matches, selectorPath, selfSelector, allExtends[extendIndex].isVisible());\n                        selectorsToAdd.push(extendedSelectors);\n                    });\n                }\n            }\n        }\n        rulesetNode.paths = rulesetNode.paths.concat(selectorsToAdd);\n    }\n\n    findMatch(extend, haystackSelectorPath) {\n        //\n        // look through the haystack selector path to try and find the needle - extend.selector\n        // returns an array of selector matches that can then be replaced\n        //\n        let haystackSelectorIndex;\n\n        let hackstackSelector;\n        let hackstackElementIndex;\n        let haystackElement;\n        let targetCombinator;\n        let i;\n        const extendVisitor = this;\n        const needleElements = extend.selector.elements;\n        const potentialMatches = [];\n        let potentialMatch;\n        const matches = [];\n\n        // loop through the haystack elements\n        for (haystackSelectorIndex = 0; haystackSelectorIndex < haystackSelectorPath.length; haystackSelectorIndex++) {\n            hackstackSelector = haystackSelectorPath[haystackSelectorIndex];\n\n            for (hackstackElementIndex = 0; hackstackElementIndex < hackstackSelector.elements.length; hackstackElementIndex++) {\n\n                haystackElement = hackstackSelector.elements[hackstackElementIndex];\n\n                // if we allow elements before our match we can add a potential match every time. otherwise only at the first element.\n                if (extend.allowBefore || (haystackSelectorIndex === 0 && hackstackElementIndex === 0)) {\n                    potentialMatches.push({pathIndex: haystackSelectorIndex, index: hackstackElementIndex, matched: 0,\n                        initialCombinator: haystackElement.combinator});\n                }\n\n                for (i = 0; i < potentialMatches.length; i++) {\n                    potentialMatch = potentialMatches[i];\n\n                    // selectors add \" \" onto the first element. When we use & it joins the selectors together, but if we don't\n                    // then each selector in haystackSelectorPath has a space before it added in the toCSS phase. so we need to\n                    // work out what the resulting combinator will be\n                    targetCombinator = haystackElement.combinator.value;\n                    if (targetCombinator === '' && hackstackElementIndex === 0) {\n                        targetCombinator = ' ';\n                    }\n\n                    // if we don't match, null our match to indicate failure\n                    if (!extendVisitor.isElementValuesEqual(needleElements[potentialMatch.matched].value, haystackElement.value) ||\n                        (potentialMatch.matched > 0 && needleElements[potentialMatch.matched].combinator.value !== targetCombinator)) {\n                        potentialMatch = null;\n                    } else {\n                        potentialMatch.matched++;\n                    }\n\n                    // if we are still valid and have finished, test whether we have elements after and whether these are allowed\n                    if (potentialMatch) {\n                        potentialMatch.finished = potentialMatch.matched === needleElements.length;\n                        if (potentialMatch.finished &&\n                            (!extend.allowAfter &&\n                                (hackstackElementIndex + 1 < hackstackSelector.elements.length || haystackSelectorIndex + 1 < haystackSelectorPath.length))) {\n                            potentialMatch = null;\n                        }\n                    }\n                    // if null we remove, if not, we are still valid, so either push as a valid match or continue\n                    if (potentialMatch) {\n                        if (potentialMatch.finished) {\n                            potentialMatch.length = needleElements.length;\n                            potentialMatch.endPathIndex = haystackSelectorIndex;\n                            potentialMatch.endPathElementIndex = hackstackElementIndex + 1; // index after end of match\n                            potentialMatches.length = 0; // we don't allow matches to overlap, so start matching again\n                            matches.push(potentialMatch);\n                        }\n                    } else {\n                        potentialMatches.splice(i, 1);\n                        i--;\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n\n    isElementValuesEqual(elementValue1, elementValue2) {\n        if (typeof elementValue1 === 'string' || typeof elementValue2 === 'string') {\n            return elementValue1 === elementValue2;\n        }\n        if (elementValue1 instanceof tree.Attribute) {\n            if (elementValue1.op !== elementValue2.op || elementValue1.key !== elementValue2.key) {\n                return false;\n            }\n            if (!elementValue1.value || !elementValue2.value) {\n                if (elementValue1.value || elementValue2.value) {\n                    return false;\n                }\n                return true;\n            }\n            elementValue1 = elementValue1.value.value || elementValue1.value;\n            elementValue2 = elementValue2.value.value || elementValue2.value;\n            return elementValue1 === elementValue2;\n        }\n        elementValue1 = elementValue1.value;\n        elementValue2 = elementValue2.value;\n        if (elementValue1 instanceof tree.Selector) {\n            if (!(elementValue2 instanceof tree.Selector) || elementValue1.elements.length !== elementValue2.elements.length) {\n                return false;\n            }\n            for (let i = 0; i  < elementValue1.elements.length; i++) {\n                if (elementValue1.elements[i].combinator.value !== elementValue2.elements[i].combinator.value) {\n                    if (i !== 0 || (elementValue1.elements[i].combinator.value || ' ') !== (elementValue2.elements[i].combinator.value || ' ')) {\n                        return false;\n                    }\n                }\n                if (!this.isElementValuesEqual(elementValue1.elements[i].value, elementValue2.elements[i].value)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    extendSelector(matches, selectorPath, replacementSelector, isVisible) {\n        // for a set of matches, replace each match with the replacement selector\n\n        let currentSelectorPathIndex = 0;\n\n        let currentSelectorPathElementIndex = 0;\n        let path = [];\n        let matchIndex;\n        let selector;\n        let firstElement;\n        let match;\n        let newElements;\n\n        for (matchIndex = 0; matchIndex < matches.length; matchIndex++) {\n            match = matches[matchIndex];\n            selector = selectorPath[match.pathIndex];\n            firstElement = new tree.Element(\n                match.initialCombinator,\n                replacementSelector.elements[0].value,\n                replacementSelector.elements[0].isVariable,\n                replacementSelector.elements[0].getIndex(),\n                replacementSelector.elements[0].fileInfo()\n            );\n\n            if (match.pathIndex > currentSelectorPathIndex && currentSelectorPathElementIndex > 0) {\n                path[path.length - 1].elements = path[path.length - 1]\n                    .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\n                currentSelectorPathElementIndex = 0;\n                currentSelectorPathIndex++;\n            }\n\n            newElements = selector.elements\n                .slice(currentSelectorPathElementIndex, match.index)\n                .concat([firstElement])\n                .concat(replacementSelector.elements.slice(1));\n\n            if (currentSelectorPathIndex === match.pathIndex && matchIndex > 0) {\n                path[path.length - 1].elements =\n                    path[path.length - 1].elements.concat(newElements);\n            } else {\n                path = path.concat(selectorPath.slice(currentSelectorPathIndex, match.pathIndex));\n\n                path.push(new tree.Selector(\n                    newElements\n                ));\n            }\n            currentSelectorPathIndex = match.endPathIndex;\n            currentSelectorPathElementIndex = match.endPathElementIndex;\n            if (currentSelectorPathElementIndex >= selectorPath[currentSelectorPathIndex].elements.length) {\n                currentSelectorPathElementIndex = 0;\n                currentSelectorPathIndex++;\n            }\n        }\n\n        if (currentSelectorPathIndex < selectorPath.length && currentSelectorPathElementIndex > 0) {\n            path[path.length - 1].elements = path[path.length - 1]\n                .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\n            currentSelectorPathIndex++;\n        }\n\n        path = path.concat(selectorPath.slice(currentSelectorPathIndex, selectorPath.length));\n        path = path.map(currentValue => {\n            // we can re-use elements here, because the visibility property matters only for selectors\n            const derived = currentValue.createDerived(currentValue.elements);\n            if (isVisible) {\n                derived.ensureVisibility();\n            } else {\n                derived.ensureInvisibility();\n            }\n            return derived;\n        });\n        return path;\n    }\n\n    visitMedia(mediaNode, visitArgs) {\n        let newAllExtends = mediaNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\n        newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, mediaNode.allExtends));\n        this.allExtendsStack.push(newAllExtends);\n    }\n\n    visitMediaOut(mediaNode) {\n        const lastIndex = this.allExtendsStack.length - 1;\n        this.allExtendsStack.length = lastIndex;\n    }\n\n    visitAtRule(atRuleNode, visitArgs) {\n        let newAllExtends = atRuleNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\n        newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, atRuleNode.allExtends));\n        this.allExtendsStack.push(newAllExtends);\n    }\n\n    visitAtRuleOut(atRuleNode) {\n        const lastIndex = this.allExtendsStack.length - 1;\n        this.allExtendsStack.length = lastIndex;\n    }\n}\n\nexport default ProcessExtendsVisitor;\n","import Visitor from './visitor';\n\nclass JoinSelectorVisitor {\n    constructor() {\n        this.contexts = [[]];\n        this._visitor = new Visitor(this);\n    }\n\n    run(root) {\n        return this._visitor.visit(root);\n    }\n\n    visitDeclaration(declNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    }\n\n    visitMixinDefinition(mixinDefinitionNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    }\n\n    visitRuleset(rulesetNode, visitArgs) {\n        const context = this.contexts[this.contexts.length - 1];\n        const paths = [];\n        let selectors;\n\n        this.contexts.push(paths);\n\n        if (!rulesetNode.root) {\n            selectors = rulesetNode.selectors;\n            if (selectors) {\n                selectors = selectors.filter(selector => selector.getIsOutput());\n                rulesetNode.selectors = selectors.length ? selectors : (selectors = null);\n                if (selectors) { rulesetNode.joinSelectors(paths, context, selectors); }\n            }\n            if (!selectors) { rulesetNode.rules = null; }\n            rulesetNode.paths = paths;\n        }\n    }\n\n    visitRulesetOut(rulesetNode) {\n        this.contexts.length = this.contexts.length - 1;\n    }\n\n    visitMedia(mediaNode, visitArgs) {\n        const context = this.contexts[this.contexts.length - 1];\n        mediaNode.rules[0].root = (context.length === 0 || context[0].multiMedia);\n    }\n\n    visitAtRule(atRuleNode, visitArgs) {\n        const context = this.contexts[this.contexts.length - 1];\n        if (atRuleNode.rules && atRuleNode.rules.length) {\n            atRuleNode.rules[0].root = (atRuleNode.isRooted || context.length === 0 || null);\n        }\n    }\n}\n\nexport default JoinSelectorVisitor;\n","import tree from '../tree';\nimport Visitor from './visitor';\n\nclass CSSVisitorUtils {\n    constructor(context) {\n        this._visitor = new Visitor(this);\n        this._context = context;\n    }\n\n    containsSilentNonBlockedChild(bodyRules) {\n        let rule;\n        if (!bodyRules) {\n            return false;\n        }\n        for (let r = 0; r < bodyRules.length; r++) {\n            rule = bodyRules[r];\n            if (rule.isSilent && rule.isSilent(this._context) && !rule.blocksVisibility()) {\n                // the atrule contains something that was referenced (likely by extend)\n                // therefore it needs to be shown in output too\n                return true;\n            }\n        }\n        return false;\n    }\n\n    keepOnlyVisibleChilds(owner) {\n        if (owner && owner.rules) {\n            owner.rules = owner.rules.filter(thing => thing.isVisible());\n        }\n    }\n\n    isEmpty(owner) {\n        return (owner && owner.rules) \n            ? (owner.rules.length === 0) : true;\n    }\n\n    hasVisibleSelector(rulesetNode) {\n        return (rulesetNode && rulesetNode.paths)\n            ? (rulesetNode.paths.length > 0) : false;\n    }\n\n    resolveVisibility(node, originalRules) {\n        if (!node.blocksVisibility()) {\n            if (this.isEmpty(node) && !this.containsSilentNonBlockedChild(originalRules)) {\n                return ;\n            }\n\n            return node;\n        }\n\n        const compiledRulesBody = node.rules[0];\n        this.keepOnlyVisibleChilds(compiledRulesBody);\n\n        if (this.isEmpty(compiledRulesBody)) {\n            return ;\n        }\n\n        node.ensureVisibility();\n        node.removeVisibilityBlock();\n\n        return node;\n    }\n\n    isVisibleRuleset(rulesetNode) {\n        if (rulesetNode.firstRoot) {\n            return true;\n        }\n\n        if (this.isEmpty(rulesetNode)) {\n            return false;\n        }\n\n        if (!rulesetNode.root && !this.hasVisibleSelector(rulesetNode)) {\n            return false;\n        }\n\n        return true;\n    }\n}\n\nconst ToCSSVisitor = function(context) {\n    this._visitor = new Visitor(this);\n    this._context = context;\n    this.utils = new CSSVisitorUtils(context);\n};\n\nToCSSVisitor.prototype = {\n    isReplacing: true,\n    run: function (root) {\n        return this._visitor.visit(root);\n    },\n\n    visitDeclaration: function (declNode, visitArgs) {\n        if (declNode.blocksVisibility() || declNode.variable) {\n            return;\n        }\n        return declNode;\n    },\n\n    visitMixinDefinition: function (mixinNode, visitArgs) {\n        // mixin definitions do not get eval'd - this means they keep state\n        // so we have to clear that state here so it isn't used if toCSS is called twice\n        mixinNode.frames = [];\n    },\n\n    visitExtend: function (extendNode, visitArgs) {\n    },\n\n    visitComment: function (commentNode, visitArgs) {\n        if (commentNode.blocksVisibility() || commentNode.isSilent(this._context)) {\n            return;\n        }\n        return commentNode;\n    },\n\n    visitMedia: function(mediaNode, visitArgs) {\n        const originalRules = mediaNode.rules[0].rules;\n        mediaNode.accept(this._visitor);\n        visitArgs.visitDeeper = false;\n\n        return this.utils.resolveVisibility(mediaNode, originalRules);\n    },\n\n    visitImport: function (importNode, visitArgs) {\n        if (importNode.blocksVisibility()) {\n            return ;\n        }\n        return importNode;\n    },\n\n    visitAtRule: function(atRuleNode, visitArgs) {\n        if (atRuleNode.rules && atRuleNode.rules.length) {\n            return this.visitAtRuleWithBody(atRuleNode, visitArgs);\n        } else {\n            return this.visitAtRuleWithoutBody(atRuleNode, visitArgs);\n        }\n    },\n\n    visitAnonymous: function(anonymousNode, visitArgs) {\n        if (!anonymousNode.blocksVisibility()) {\n            anonymousNode.accept(this._visitor);\n            return anonymousNode;\n        }\n    },\n\n    visitAtRuleWithBody: function(atRuleNode, visitArgs) {\n        // if there is only one nested ruleset and that one has no path, then it is\n        // just fake ruleset\n        function hasFakeRuleset(atRuleNode) {\n            const bodyRules = atRuleNode.rules;\n            return bodyRules.length === 1 && (!bodyRules[0].paths || bodyRules[0].paths.length === 0);\n        }\n        function getBodyRules(atRuleNode) {\n            const nodeRules = atRuleNode.rules;\n            if (hasFakeRuleset(atRuleNode)) {\n                return nodeRules[0].rules;\n            }\n\n            return nodeRules;\n        }\n        // it is still true that it is only one ruleset in array\n        // this is last such moment\n        // process childs\n        const originalRules = getBodyRules(atRuleNode);\n        atRuleNode.accept(this._visitor);\n        visitArgs.visitDeeper = false;\n\n        if (!this.utils.isEmpty(atRuleNode)) {\n            this._mergeRules(atRuleNode.rules[0].rules);\n        }\n\n        return this.utils.resolveVisibility(atRuleNode, originalRules);\n    },\n\n    visitAtRuleWithoutBody: function(atRuleNode, visitArgs) {\n        if (atRuleNode.blocksVisibility()) {\n            return;\n        }\n\n        if (atRuleNode.name === '@charset') {\n            // Only output the debug info together with subsequent @charset definitions\n            // a comment (or @media statement) before the actual @charset atrule would\n            // be considered illegal css as it has to be on the first line\n            if (this.charset) {\n                if (atRuleNode.debugInfo) {\n                    const comment = new tree.Comment(`/* ${atRuleNode.toCSS(this._context).replace(/\\n/g, '')} */\\n`);\n                    comment.debugInfo = atRuleNode.debugInfo;\n                    return this._visitor.visit(comment);\n                }\n                return;\n            }\n            this.charset = true;\n        }\n\n        return atRuleNode;\n    },\n\n    checkValidNodes: function(rules, isRoot) {\n        if (!rules) {\n            return;\n        }\n\n        for (let i = 0; i < rules.length; i++) {\n            const ruleNode = rules[i];\n            if (isRoot && ruleNode instanceof tree.Declaration && !ruleNode.variable) {\n                throw { message: 'Properties must be inside selector blocks. They cannot be in the root',\n                    index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename};\n            }\n            if (ruleNode instanceof tree.Call) {\n                throw { message: `Function '${ruleNode.name}' is undefined`,\n                    index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename};\n            }\n            if (ruleNode.type && !ruleNode.allowRoot) {\n                throw { message: `${ruleNode.type} node returned by a function is not valid here`,\n                    index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename};\n            }\n        }\n    },\n\n    visitRuleset: function (rulesetNode, visitArgs) {\n        // at this point rulesets are nested into each other\n        let rule;\n\n        const rulesets = [];\n\n        this.checkValidNodes(rulesetNode.rules, rulesetNode.firstRoot);\n\n        if (!rulesetNode.root) {\n            // remove invisible paths\n            this._compileRulesetPaths(rulesetNode);\n\n            // remove rulesets from this ruleset body and compile them separately\n            const nodeRules = rulesetNode.rules;\n\n            let nodeRuleCnt = nodeRules ? nodeRules.length : 0;\n            for (let i = 0; i < nodeRuleCnt; ) {\n                rule = nodeRules[i];\n                if (rule && rule.rules) {\n                    // visit because we are moving them out from being a child\n                    rulesets.push(this._visitor.visit(rule));\n                    nodeRules.splice(i, 1);\n                    nodeRuleCnt--;\n                    continue;\n                }\n                i++;\n            }\n            // accept the visitor to remove rules and refactor itself\n            // then we can decide nogw whether we want it or not\n            // compile body\n            if (nodeRuleCnt > 0) {\n                rulesetNode.accept(this._visitor);\n            } else {\n                rulesetNode.rules = null;\n            }\n            visitArgs.visitDeeper = false;\n        } else { // if (! rulesetNode.root) {\n            rulesetNode.accept(this._visitor);\n            visitArgs.visitDeeper = false;\n        }\n\n        if (rulesetNode.rules) {\n            this._mergeRules(rulesetNode.rules);\n            this._removeDuplicateRules(rulesetNode.rules);\n        }\n\n        // now decide whether we keep the ruleset\n        if (this.utils.isVisibleRuleset(rulesetNode)) {\n            rulesetNode.ensureVisibility();\n            rulesets.splice(0, 0, rulesetNode);\n        }\n\n        if (rulesets.length === 1) {\n            return rulesets[0];\n        }\n        return rulesets;\n    },\n\n    _compileRulesetPaths: function(rulesetNode) {\n        if (rulesetNode.paths) {\n            rulesetNode.paths = rulesetNode.paths\n                .filter(p => {\n                    let i;\n                    if (p[0].elements[0].combinator.value === ' ') {\n                        p[0].elements[0].combinator = new(tree.Combinator)('');\n                    }\n                    for (i = 0; i < p.length; i++) {\n                        if (p[i].isVisible() && p[i].getIsOutput()) {\n                            return true;\n                        }\n                    }\n                    return false;\n                });\n        }\n    },\n\n    _removeDuplicateRules: function(rules) {\n        if (!rules) { return; }\n\n        // remove duplicates\n        const ruleCache = {};\n\n        let ruleList;\n        let rule;\n        let i;\n\n        for (i = rules.length - 1; i >= 0 ; i--) {\n            rule = rules[i];\n            if (rule instanceof tree.Declaration) {\n                if (!ruleCache[rule.name]) {\n                    ruleCache[rule.name] = rule;\n                } else {\n                    ruleList = ruleCache[rule.name];\n                    if (ruleList instanceof tree.Declaration) {\n                        ruleList = ruleCache[rule.name] = [ruleCache[rule.name].toCSS(this._context)];\n                    }\n                    const ruleCSS = rule.toCSS(this._context);\n                    if (ruleList.indexOf(ruleCSS) !== -1) {\n                        rules.splice(i, 1);\n                    } else {\n                        ruleList.push(ruleCSS);\n                    }\n                }\n            }\n        }\n    },\n\n    _mergeRules: function(rules) {\n        if (!rules) {\n            return; \n        }\n\n        const groups    = {};\n        const groupsArr = [];\n\n        for (let i = 0; i < rules.length; i++) {\n            const rule = rules[i];\n            if (rule.merge) {\n                const key = rule.name;\n                groups[key] ? rules.splice(i--, 1) : \n                    groupsArr.push(groups[key] = []);\n                groups[key].push(rule);\n            }\n        }\n\n        groupsArr.forEach(group => {\n            if (group.length > 0) {\n                const result = group[0];\n                let space  = [];\n                const comma  = [new tree.Expression(space)];\n                group.forEach(rule => {\n                    if ((rule.merge === '+') && (space.length > 0)) {\n                        comma.push(new tree.Expression(space = []));\n                    }\n                    space.push(rule.value);\n                    result.important = result.important || rule.important;\n                });\n                result.value = new tree.Value(comma);\n            }\n        });\n    }\n};\n\nexport default ToCSSVisitor;\n","import Visitor from './visitor';\nimport ImportVisitor from './import-visitor';\nimport MarkVisibleSelectorsVisitor from './set-tree-visibility-visitor';\nimport ExtendVisitor from './extend-visitor';\nimport JoinSelectorVisitor from './join-selector-visitor';\nimport ToCSSVisitor from './to-css-visitor';\n\nexport default {\n    Visitor,\n    ImportVisitor,\n    MarkVisibleSelectorsVisitor,\n    ExtendVisitor,\n    JoinSelectorVisitor,\n    ToCSSVisitor\n};\n","// Split the input into chunks.\nexport default (input, fail) => {\n    const len = input.length;\n    let level = 0;\n    let parenLevel = 0;\n    let lastOpening;\n    let lastOpeningParen;\n    let lastMultiComment;\n    let lastMultiCommentEndBrace;\n    const chunks = [];\n    let emitFrom = 0;\n    let chunkerCurrentIndex;\n    let currentChunkStartIndex;\n    let cc;\n    let cc2;\n    let matched;\n\n    function emitChunk(force) {\n        const len = chunkerCurrentIndex - emitFrom;\n        if (((len < 512) && !force) || !len) {\n            return;\n        }\n        chunks.push(input.slice(emitFrom, chunkerCurrentIndex + 1));\n        emitFrom = chunkerCurrentIndex + 1;\n    }\n\n    for (chunkerCurrentIndex = 0; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n        cc = input.charCodeAt(chunkerCurrentIndex);\n        if (((cc >= 97) && (cc <= 122)) || (cc < 34)) {\n            // a-z or whitespace\n            continue;\n        }\n\n        switch (cc) {\n            case 40:                        // (\n                parenLevel++;\n                lastOpeningParen = chunkerCurrentIndex;\n                continue;\n            case 41:                        // )\n                if (--parenLevel < 0) {\n                    return fail('missing opening `(`', chunkerCurrentIndex);\n                }\n                continue;\n            case 59:                        // ;\n                if (!parenLevel) { emitChunk(); }\n                continue;\n            case 123:                       // {\n                level++;\n                lastOpening = chunkerCurrentIndex;\n                continue;\n            case 125:                       // }\n                if (--level < 0) {\n                    return fail('missing opening `{`', chunkerCurrentIndex);\n                }\n                if (!level && !parenLevel) { emitChunk(); }\n                continue;\n            case 92:                        // \\\n                if (chunkerCurrentIndex < len - 1) { chunkerCurrentIndex++; continue; }\n                return fail('unescaped `\\\\`', chunkerCurrentIndex);\n            case 34:\n            case 39:\n            case 96:                        // \", ' and `\n                matched = 0;\n                currentChunkStartIndex = chunkerCurrentIndex;\n                for (chunkerCurrentIndex = chunkerCurrentIndex + 1; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n                    cc2 = input.charCodeAt(chunkerCurrentIndex);\n                    if (cc2 > 96) { continue; }\n                    if (cc2 == cc) { matched = 1; break; }\n                    if (cc2 == 92) {        // \\\n                        if (chunkerCurrentIndex == len - 1) {\n                            return fail('unescaped `\\\\`', chunkerCurrentIndex);\n                        }\n                        chunkerCurrentIndex++;\n                    }\n                }\n                if (matched) { continue; }\n                return fail(`unmatched \\`${String.fromCharCode(cc)}\\``, currentChunkStartIndex);\n            case 47:                        // /, check for comment\n                if (parenLevel || (chunkerCurrentIndex == len - 1)) { continue; }\n                cc2 = input.charCodeAt(chunkerCurrentIndex + 1);\n                if (cc2 == 47) {\n                    // //, find lnfeed\n                    for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n                        cc2 = input.charCodeAt(chunkerCurrentIndex);\n                        if ((cc2 <= 13) && ((cc2 == 10) || (cc2 == 13))) { break; }\n                    }\n                } else if (cc2 == 42) {\n                    // /*, find */\n                    lastMultiComment = currentChunkStartIndex = chunkerCurrentIndex;\n                    for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len - 1; chunkerCurrentIndex++) {\n                        cc2 = input.charCodeAt(chunkerCurrentIndex);\n                        if (cc2 == 125) { lastMultiCommentEndBrace = chunkerCurrentIndex; }\n                        if (cc2 != 42) { continue; }\n                        if (input.charCodeAt(chunkerCurrentIndex + 1) == 47) { break; }\n                    }\n                    if (chunkerCurrentIndex == len - 1) {\n                        return fail('missing closing `*/`', currentChunkStartIndex);\n                    }\n                    chunkerCurrentIndex++;\n                }\n                continue;\n            case 42:                       // *, check for unmatched */\n                if ((chunkerCurrentIndex < len - 1) && (input.charCodeAt(chunkerCurrentIndex + 1) == 47)) {\n                    return fail('unmatched `/*`', chunkerCurrentIndex);\n                }\n                continue;\n        }\n    }\n\n    if (level !== 0) {\n        if ((lastMultiComment > lastOpening) && (lastMultiCommentEndBrace > lastMultiComment)) {\n            return fail('missing closing `}` or `*/`', lastOpening);\n        } else {\n            return fail('missing closing `}`', lastOpening);\n        }\n    } else if (parenLevel !== 0) {\n        return fail('missing closing `)`', lastOpeningParen);\n    }\n\n    emitChunk(true);\n    return chunks;\n};\n","import chunker from './chunker';\n\nexport default () => {\n    let // Less input string\n    input;\n\n    let // current chunk\n    j;\n\n    const // holds state for backtracking\n    saveStack = [];\n\n    let // furthest index the parser has gone to\n    furthest;\n\n    let // if this is furthest we got to, this is the probably cause\n    furthestPossibleErrorMessage;\n\n    let // chunkified input\n    chunks;\n\n    let // current chunk\n    current;\n\n    let // index of current chunk, in `input`\n    currentPos;\n\n    const parserInput = {};\n    const CHARCODE_SPACE = 32;\n    const CHARCODE_TAB = 9;\n    const CHARCODE_LF = 10;\n    const CHARCODE_CR = 13;\n    const CHARCODE_PLUS = 43;\n    const CHARCODE_COMMA = 44;\n    const CHARCODE_FORWARD_SLASH = 47;\n    const CHARCODE_9 = 57;\n\n    function skipWhitespace(length) {\n        const oldi = parserInput.i;\n        const oldj = j;\n        const curr = parserInput.i - currentPos;\n        const endIndex = parserInput.i + current.length - curr;\n        const mem = (parserInput.i += length);\n        const inp = input;\n        let c;\n        let nextChar;\n        let comment;\n\n        for (; parserInput.i < endIndex; parserInput.i++) {\n            c = inp.charCodeAt(parserInput.i);\n\n            if (parserInput.autoCommentAbsorb && c === CHARCODE_FORWARD_SLASH) {\n                nextChar = inp.charAt(parserInput.i + 1);\n                if (nextChar === '/') {\n                    comment = {index: parserInput.i, isLineComment: true};\n                    let nextNewLine = inp.indexOf('\\n', parserInput.i + 2);\n                    if (nextNewLine < 0) {\n                        nextNewLine = endIndex;\n                    }\n                    parserInput.i = nextNewLine;\n                    comment.text = inp.substr(comment.index, parserInput.i - comment.index);\n                    parserInput.commentStore.push(comment);\n                    continue;\n                } else if (nextChar === '*') {\n                    const nextStarSlash = inp.indexOf('*/', parserInput.i + 2);\n                    if (nextStarSlash >= 0) {\n                        comment = {\n                            index: parserInput.i,\n                            text: inp.substr(parserInput.i, nextStarSlash + 2 - parserInput.i),\n                            isLineComment: false\n                        };\n                        parserInput.i += comment.text.length - 1;\n                        parserInput.commentStore.push(comment);\n                        continue;\n                    }\n                }\n                break;\n            }\n\n            if ((c !== CHARCODE_SPACE) && (c !== CHARCODE_LF) && (c !== CHARCODE_TAB) && (c !== CHARCODE_CR)) {\n                break;\n            }\n        }\n\n        current = current.slice(length + parserInput.i - mem + curr);\n        currentPos = parserInput.i;\n\n        if (!current.length) {\n            if (j < chunks.length - 1) {\n                current = chunks[++j];\n                skipWhitespace(0); // skip space at the beginning of a chunk\n                return true; // things changed\n            }\n            parserInput.finished = true;\n        }\n\n        return oldi !== parserInput.i || oldj !== j;\n    }\n\n    parserInput.save = () => {\n        currentPos = parserInput.i;\n        saveStack.push( { current, i: parserInput.i, j });\n    };\n    parserInput.restore = possibleErrorMessage => {\n\n        if (parserInput.i > furthest || (parserInput.i === furthest && possibleErrorMessage && !furthestPossibleErrorMessage)) {\n            furthest = parserInput.i;\n            furthestPossibleErrorMessage = possibleErrorMessage;\n        }\n        const state = saveStack.pop();\n        current = state.current;\n        currentPos = parserInput.i = state.i;\n        j = state.j;\n    };\n    parserInput.forget = () => {\n        saveStack.pop();\n    };\n    parserInput.isWhitespace = offset => {\n        const pos = parserInput.i + (offset || 0);\n        const code = input.charCodeAt(pos);\n        return (code === CHARCODE_SPACE || code === CHARCODE_CR || code === CHARCODE_TAB || code === CHARCODE_LF);\n    };\n\n    // Specialization of $(tok)\n    parserInput.$re = tok => {\n        if (parserInput.i > currentPos) {\n            current = current.slice(parserInput.i - currentPos);\n            currentPos = parserInput.i;\n        }\n\n        const m = tok.exec(current);\n        if (!m) {\n            return null;\n        }\n\n        skipWhitespace(m[0].length);\n        if (typeof m === 'string') {\n            return m;\n        }\n\n        return m.length === 1 ? m[0] : m;\n    };\n\n    parserInput.$char = tok => {\n        if (input.charAt(parserInput.i) !== tok) {\n            return null;\n        }\n        skipWhitespace(1);\n        return tok;\n    };\n\n    parserInput.$str = tok => {\n        const tokLength = tok.length;\n\n        // https://jsperf.com/string-startswith/21\n        for (let i = 0; i < tokLength; i++) {\n            if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\n                return null;\n            }\n        }\n\n        skipWhitespace(tokLength);\n        return tok;\n    };\n\n    parserInput.$quoted = loc => {\n        const pos = loc || parserInput.i;\n        const startChar = input.charAt(pos);\n\n        if (startChar !== '\\'' && startChar !== '\"') {\n            return;\n        }\n        const length = input.length;\n        const currentPosition = pos;\n\n        for (let i = 1; i + currentPosition < length; i++) {\n            const nextChar = input.charAt(i + currentPosition);\n            switch (nextChar) {\n                case '\\\\':\n                    i++;\n                    continue;\n                case '\\r':\n                case '\\n':\n                    break;\n                case startChar:\n                    const str = input.substr(currentPosition, i + 1);\n                    if (!loc && loc !== 0) {\n                        skipWhitespace(i + 1);\n                        return str\n                    }\n                    return [startChar, str];\n                default:\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Permissive parsing. Ignores everything except matching {} [] () and quotes\n     * until matching token (outside of blocks)\n     */\n    parserInput.$parseUntil = tok => {\n        let quote = '';\n        let returnVal = null;\n        let inComment = false;\n        let blockDepth = 0;\n        const blockStack = [];\n        const parseGroups = [];\n        const length = input.length;\n        const startPos = parserInput.i;\n        let lastPos = parserInput.i;\n        let i = parserInput.i;\n        let loop = true;\n        let testChar;\n\n        if (typeof tok === 'string') {\n            testChar = char => char === tok\n        } else {\n            testChar = char => tok.test(char)\n        }\n\n        do {\n            let prevChar;\n            let nextChar = input.charAt(i);\n            if (blockDepth === 0 && testChar(nextChar)) {\n                returnVal = input.substr(lastPos, i - lastPos);\n                if (returnVal) {\n                    parseGroups.push(returnVal);\n                }\n                else {\n                    parseGroups.push(' ');\n                }\n                returnVal = parseGroups;\n                skipWhitespace(i - startPos);\n                loop = false\n            } else {\n                if (inComment) {\n                    if (nextChar === '*' && \n                        input.charAt(i + 1) === '/') {\n                        i++;\n                        blockDepth--;\n                        inComment = false;\n                    }\n                    i++;\n                    continue;\n                }\n                switch (nextChar) {\n                    case '\\\\':\n                        i++;\n                        nextChar = input.charAt(i);\n                        parseGroups.push(input.substr(lastPos, i - lastPos + 1));\n                        lastPos = i + 1;\n                        break;\n                    case '/':\n                        if (input.charAt(i + 1) === '*') {\n                            i++;\n                            inComment = true;\n                            blockDepth++;\n                        }\n                        break;\n                    case '\\'':\n                    case '\"':\n                        quote = parserInput.$quoted(i);\n                        if (quote) {\n                            parseGroups.push(input.substr(lastPos, i - lastPos), quote);\n                            i += quote[1].length - 1;\n                            lastPos = i + 1;\n                        }\n                        else {\n                            skipWhitespace(i - startPos);\n                            returnVal = nextChar;\n                            loop = false;\n                        }\n                        break;\n                    case '{':\n                        blockStack.push('}');\n                        blockDepth++;\n                        break;\n                    case '(':\n                        blockStack.push(')');\n                        blockDepth++;\n                        break;\n                    case '[':\n                        blockStack.push(']');\n                        blockDepth++;\n                        break;\n                    case '}':\n                    case ')':\n                    case ']':\n                        const expected = blockStack.pop();\n                        if (nextChar === expected) {\n                            blockDepth--;\n                        } else {\n                            // move the parser to the error and return expected\n                            skipWhitespace(i - startPos);\n                            returnVal = expected;\n                            loop = false;\n                        }\n                }\n                i++;\n                if (i > length) {\n                    loop = false;\n                }\n            }\n            prevChar = nextChar;\n        } while (loop);\n\n        return returnVal ? returnVal : null;\n    }\n\n    parserInput.autoCommentAbsorb = true;\n    parserInput.commentStore = [];\n    parserInput.finished = false;\n\n    // Same as $(), but don't change the state of the parser,\n    // just return the match.\n    parserInput.peek = tok => {\n        if (typeof tok === 'string') {\n            // https://jsperf.com/string-startswith/21\n            for (let i = 0; i < tok.length; i++) {\n                if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return tok.test(current);\n        }\n    };\n\n    // Specialization of peek()\n    // TODO remove or change some currentChar calls to peekChar\n    parserInput.peekChar = tok => input.charAt(parserInput.i) === tok;\n\n    parserInput.currentChar = () => input.charAt(parserInput.i);\n\n    parserInput.prevChar = () => input.charAt(parserInput.i - 1);\n\n    parserInput.getInput = () => input;\n\n    parserInput.peekNotNumeric = () => {\n        const c = input.charCodeAt(parserInput.i);\n        // Is the first char of the dimension 0-9, '.', '+' or '-'\n        return (c > CHARCODE_9 || c < CHARCODE_PLUS) || c === CHARCODE_FORWARD_SLASH || c === CHARCODE_COMMA;\n    };\n\n    parserInput.start = (str, chunkInput, failFunction) => {\n        input = str;\n        parserInput.i = j = currentPos = furthest = 0;\n\n        // chunking apparently makes things quicker (but my tests indicate\n        // it might actually make things slower in node at least)\n        // and it is a non-perfect parse - it can't recognise\n        // unquoted urls, meaning it can't distinguish comments\n        // meaning comments with quotes or {}() in them get 'counted'\n        // and then lead to parse errors.\n        // In addition if the chunking chunks in the wrong place we might\n        // not be able to parse a parser statement in one go\n        // this is officially deprecated but can be switched on via an option\n        // in the case it causes too much performance issues.\n        if (chunkInput) {\n            chunks = chunker(str, failFunction);\n        } else {\n            chunks = [str];\n        }\n\n        current = chunks[0];\n\n        skipWhitespace(0);\n    };\n\n    parserInput.end = () => {\n        let message;\n        const isFinished = parserInput.i >= input.length;\n\n        if (parserInput.i < furthest) {\n            message = furthestPossibleErrorMessage;\n            parserInput.i = furthest;\n        }\n        return {\n            isFinished,\n            furthest: parserInput.i,\n            furthestPossibleErrorMessage: message,\n            furthestReachedEnd: parserInput.i >= input.length - 1,\n            furthestChar: input[parserInput.i]\n        };\n    };\n\n    return parserInput;\n};\n","import LessError from '../less-error';\nimport tree from '../tree';\nimport visitors from '../visitors';\nimport getParserInput from './parser-input';\nimport * as utils from '../utils';\nimport functionRegistry from '../functions/function-registry';\n\n//\n// less.js - parser\n//\n//    A relatively straight-forward predictive parser.\n//    There is no tokenization/lexing stage, the input is parsed\n//    in one sweep.\n//\n//    To make the parser fast enough to run in the browser, several\n//    optimization had to be made:\n//\n//    - Matching and slicing on a huge input is often cause of slowdowns.\n//      The solution is to chunkify the input into smaller strings.\n//      The chunks are stored in the `chunks` var,\n//      `j` holds the current chunk index, and `currentPos` holds\n//      the index of the current chunk in relation to `input`.\n//      This gives us an almost 4x speed-up.\n//\n//    - In many cases, we don't need to match individual tokens;\n//      for example, if a value doesn't hold any variables, operations\n//      or dynamic references, the parser can effectively 'skip' it,\n//      treating it as a literal.\n//      An example would be '1px solid #000' - which evaluates to itself,\n//      we don't need to know what the individual components are.\n//      The drawback, of course is that you don't get the benefits of\n//      syntax-checking on the CSS. This gives us a 50% speed-up in the parser,\n//      and a smaller speed-up in the code-gen.\n//\n//\n//    Token matching is done with the `$` function, which either takes\n//    a terminal string or regexp, or a non-terminal function to call.\n//    It also takes care of moving all the indices forwards.\n//\n\nconst Parser = function Parser(context, imports, fileInfo) {\n    let parsers;\n    const parserInput = getParserInput();\n\n    function error(msg, type) {\n        throw new LessError(\n            {\n                index: parserInput.i,\n                filename: fileInfo.filename,\n                type: type || 'Syntax',\n                message: msg\n            },\n            imports\n        );\n    }\n\n    function expect(arg, msg) {\n        // some older browsers return typeof 'function' for RegExp\n        const result = (arg instanceof Function) ? arg.call(parsers) : parserInput.$re(arg);\n        if (result) {\n            return result;\n        }\n        \n        error(msg || (typeof arg === 'string'\n            ? `expected '${arg}' got '${parserInput.currentChar()}'`\n            : 'unexpected token'));\n    }\n\n    // Specialization of expect()\n    function expectChar(arg, msg) {\n        if (parserInput.$char(arg)) {\n            return arg;\n        }\n        error(msg || `expected '${arg}' got '${parserInput.currentChar()}'`);\n    }\n\n    function getDebugInfo(index) {\n        const filename = fileInfo.filename;\n\n        return {\n            lineNumber: utils.getLocation(index, parserInput.getInput()).line + 1,\n            fileName: filename\n        };\n    }\n\n    /**\n     *  Used after initial parsing to create nodes on the fly\n     * \n     *  @param {String} str          - string to parse \n     *  @param {Array}  parseList    - array of parsers to run input through e.g. [\"value\", \"important\"]\n     *  @param {Number} currentIndex - start number to begin indexing\n     *  @param {Object} fileInfo     - fileInfo to attach to created nodes\n     */\n    function parseNode(str, parseList, currentIndex, fileInfo, callback) {\n        let result;\n        const returnNodes = [];\n        const parser = parserInput;\n\n        try {\n            parser.start(str, false, function fail(msg, index) {\n                callback({\n                    message: msg,\n                    index: index + currentIndex\n                });\n            });\n            for (let x = 0, p, i; (p = parseList[x]); x++) {\n                i = parser.i;\n                result = parsers[p]();\n                if (result) {\n                    result._index = i + currentIndex;\n                    result._fileInfo = fileInfo;\n                    returnNodes.push(result);\n                }\n                else {\n                    returnNodes.push(null);\n                }\n            }\n\n            const endInfo = parser.end();\n            if (endInfo.isFinished) {\n                callback(null, returnNodes);\n            }\n            else {\n                callback(true, null);\n            }\n        } catch (e) {\n            throw new LessError({\n                index: e.index + currentIndex,\n                message: e.message\n            }, imports, fileInfo.filename);\n        }\n    }\n\n    //\n    // The Parser\n    //\n    return {\n        parserInput,\n        imports,\n        fileInfo,\n        parseNode,\n        //\n        // Parse an input string into an abstract syntax tree,\n        // @param str A string containing 'less' markup\n        // @param callback call `callback` when done.\n        // @param [additionalData] An optional map which can contains vars - a map (key, value) of variables to apply\n        //\n        parse: function (str, callback, additionalData) {\n            let root;\n            let error = null;\n            let globalVars;\n            let modifyVars;\n            let ignored;\n            let preText = '';\n\n            globalVars = (additionalData && additionalData.globalVars) ? `${Parser.serializeVars(additionalData.globalVars)}\\n` : '';\n            modifyVars = (additionalData && additionalData.modifyVars) ? `\\n${Parser.serializeVars(additionalData.modifyVars)}` : '';\n\n            if (context.pluginManager) {\n                const preProcessors = context.pluginManager.getPreProcessors();\n                for (let i = 0; i < preProcessors.length; i++) {\n                    str = preProcessors[i].process(str, { context, imports, fileInfo });\n                }\n            }\n\n            if (globalVars || (additionalData && additionalData.banner)) {\n                preText = ((additionalData && additionalData.banner) ? additionalData.banner : '') + globalVars;\n                ignored = imports.contentsIgnoredChars;\n                ignored[fileInfo.filename] = ignored[fileInfo.filename] || 0;\n                ignored[fileInfo.filename] += preText.length;\n            }\n\n            str = str.replace(/\\r\\n?/g, '\\n');\n            // Remove potential UTF Byte Order Mark\n            str = preText + str.replace(/^\\uFEFF/, '') + modifyVars;\n            imports.contents[fileInfo.filename] = str;\n\n            // Start with the primary rule.\n            // The whole syntax tree is held under a Ruleset node,\n            // with the `root` property set to true, so no `{}` are\n            // output. The callback is called when the input is parsed.\n            try {\n                parserInput.start(str, context.chunkInput, function fail(msg, index) {\n                    throw new LessError({\n                        index,\n                        type: 'Parse',\n                        message: msg,\n                        filename: fileInfo.filename\n                    }, imports);\n                });\n\n                tree.Node.prototype.parse = this;\n                root = new tree.Ruleset(null, this.parsers.primary());\n                tree.Node.prototype.rootNode = root;\n                root.root = true;\n                root.firstRoot = true;\n                root.functionRegistry = functionRegistry.inherit();\n                \n            } catch (e) {\n                return callback(new LessError(e, imports, fileInfo.filename));\n            }\n\n            // If `i` is smaller than the `input.length - 1`,\n            // it means the parser wasn't able to parse the whole\n            // string, so we've got a parsing error.\n            //\n            // We try to extract a \\n delimited string,\n            // showing the line where the parse error occurred.\n            // We split it up into two parts (the part which parsed,\n            // and the part which didn't), so we can color them differently.\n            const endInfo = parserInput.end();\n            if (!endInfo.isFinished) {\n\n                let message = endInfo.furthestPossibleErrorMessage;\n\n                if (!message) {\n                    message = 'Unrecognised input';\n                    if (endInfo.furthestChar === '}') {\n                        message += '. Possibly missing opening \\'{\\'';\n                    } else if (endInfo.furthestChar === ')') {\n                        message += '. Possibly missing opening \\'(\\'';\n                    } else if (endInfo.furthestReachedEnd) {\n                        message += '. Possibly missing something';\n                    }\n                }\n\n                error = new LessError({\n                    type: 'Parse',\n                    message,\n                    index: endInfo.furthest,\n                    filename: fileInfo.filename\n                }, imports);\n            }\n\n            const finish = e => {\n                e = error || e || imports.error;\n\n                if (e) {\n                    if (!(e instanceof LessError)) {\n                        e = new LessError(e, imports, fileInfo.filename);\n                    }\n\n                    return callback(e);\n                }\n                else {\n                    return callback(null, root);\n                }\n            };\n\n            if (context.processImports !== false) {\n                new visitors.ImportVisitor(imports, finish)\n                    .run(root);\n            } else {\n                return finish();\n            }\n        },\n\n        //\n        // Here in, the parsing rules/functions\n        //\n        // The basic structure of the syntax tree generated is as follows:\n        //\n        //   Ruleset ->  Declaration -> Value -> Expression -> Entity\n        //\n        // Here's some Less code:\n        //\n        //    .class {\n        //      color: #fff;\n        //      border: 1px solid #000;\n        //      width: @w + 4px;\n        //      > .child {...}\n        //    }\n        //\n        // And here's what the parse tree might look like:\n        //\n        //     Ruleset (Selector '.class', [\n        //         Declaration (\"color\",  Value ([Expression [Color #fff]]))\n        //         Declaration (\"border\", Value ([Expression [Dimension 1px][Keyword \"solid\"][Color #000]]))\n        //         Declaration (\"width\",  Value ([Expression [Operation \" + \" [Variable \"@w\"][Dimension 4px]]]))\n        //         Ruleset (Selector [Element '>', '.child'], [...])\n        //     ])\n        //\n        //  In general, most rules will try to parse a token with the `$re()` function, and if the return\n        //  value is truly, will return a new node, of the relevant type. Sometimes, we need to check\n        //  first, before parsing, that's when we use `peek()`.\n        //\n        parsers: parsers = {\n            //\n            // The `primary` rule is the *entry* and *exit* point of the parser.\n            // The rules here can appear at any level of the parse tree.\n            //\n            // The recursive nature of the grammar is an interplay between the `block`\n            // rule, which represents `{ ... }`, the `ruleset` rule, and this `primary` rule,\n            // as represented by this simplified grammar:\n            //\n            //     primary  →  (ruleset | declaration)+\n            //     ruleset  →  selector+ block\n            //     block    →  '{' primary '}'\n            //\n            // Only at one point is the primary rule not called from the\n            // block rule: at the root level.\n            //\n            primary: function () {\n                const mixin = this.mixin;\n                let root = [];\n                let node;\n\n                while (true) {\n                    while (true) {\n                        node = this.comment();\n                        if (!node) { break; }\n                        root.push(node);\n                    }\n                    // always process comments before deciding if finished\n                    if (parserInput.finished) {\n                        break;\n                    }\n                    if (parserInput.peek('}')) {\n                        break;\n                    }\n\n                    node = this.extendRule();\n                    if (node) {\n                        root = root.concat(node);\n                        continue;\n                    }\n\n                    node = mixin.definition() || this.declaration() || this.ruleset() ||\n                        mixin.call(false, false) || this.variableCall() || this.entities.call() || this.atrule();\n                    if (node) {\n                        root.push(node);\n                    } else {\n                        let foundSemiColon = false;\n                        while (parserInput.$char(';')) {\n                            foundSemiColon = true;\n                        }\n                        if (!foundSemiColon) {\n                            break;\n                        }\n                    }\n                }\n\n                return root;\n            },\n\n            // comments are collected by the main parsing mechanism and then assigned to nodes\n            // where the current structure allows it\n            comment: function () {\n                if (parserInput.commentStore.length) {\n                    const comment = parserInput.commentStore.shift();\n                    return new(tree.Comment)(comment.text, comment.isLineComment, comment.index, fileInfo);\n                }\n            },\n\n            //\n            // Entities are tokens which can be found inside an Expression\n            //\n            entities: {\n                mixinLookup: function() {\n                    return parsers.mixin.call(true, true);\n                },\n                //\n                // A string, which supports escaping \" and '\n                //\n                //     \"milky way\" 'he\\'s the one!'\n                //\n                quoted: function (forceEscaped) {\n                    let str;\n                    const index = parserInput.i;\n                    let isEscaped = false;\n\n                    parserInput.save();\n                    if (parserInput.$char('~')) {\n                        isEscaped = true;\n                    } else if (forceEscaped) {\n                        parserInput.restore();\n                        return;\n                    }\n\n                    str = parserInput.$quoted();\n                    if (!str) {\n                        parserInput.restore();\n                        return;\n                    }\n                    parserInput.forget();\n\n                    return new(tree.Quoted)(str.charAt(0), str.substr(1, str.length - 2), isEscaped, index, fileInfo);\n                },\n\n                //\n                // A catch-all word, such as:\n                //\n                //     black border-collapse\n                //\n                keyword: function () {\n                    const k = parserInput.$char('%') || parserInput.$re(/^\\[?(?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+\\]?/);\n                    if (k) {\n                        return tree.Color.fromKeyword(k) || new(tree.Keyword)(k);\n                    }\n                },\n\n                //\n                // A function call\n                //\n                //     rgb(255, 0, 255)\n                //\n                // The arguments are parsed with the `entities.arguments` parser.\n                //\n                call: function () {\n                    let name;\n                    let args;\n                    let func;\n                    const index = parserInput.i;\n\n                    // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\n                    if (parserInput.peek(/^url\\(/i)) {\n                        return;\n                    }\n\n                    parserInput.save();\n\n                    name = parserInput.$re(/^([\\w-]+|%|progid:[\\w\\.]+)\\(/);\n                    if (!name) {\n                        parserInput.forget(); \n                        return;\n                    }\n\n                    name = name[1];\n                    func = this.customFuncCall(name);\n                    if (func) {\n                        args = func.parse();\n                        if (args && func.stop) {\n                            parserInput.forget();\n                            return args;\n                        }\n                    }\n\n                    args = this.arguments(args);\n\n                    if (!parserInput.$char(')')) {\n                        parserInput.restore('Could not parse call arguments or missing \\')\\'');\n                        return;\n                    }\n\n                    parserInput.forget();\n\n                    return new(tree.Call)(name, args, index, fileInfo);\n                },\n                \n                //\n                // Parsing rules for functions with non-standard args, e.g.:\n                //\n                //     boolean(not(2 > 1))\n                //\n                //     This is a quick prototype, to be modified/improved when\n                //     more custom-parsed funcs come (e.g. `selector(...)`)\n                //\n\n                customFuncCall: function (name) {\n                    /* Ideally the table is to be moved out of here for faster perf.,\n                       but it's quite tricky since it relies on all these `parsers`\n                       and `expect` available only here */\n                    return {\n                        alpha:   f(parsers.ieAlpha, true),\n                        boolean: f(condition),\n                        'if':    f(condition)\n                    }[name.toLowerCase()];\n\n                    function f(parse, stop) {\n                        return {\n                            parse, // parsing function\n                            stop   // when true - stop after parse() and return its result, \n                                          // otherwise continue for plain args\n                        };\n                    }\n                \n                    function condition() {\n                        return [expect(parsers.condition, 'expected condition')];\n                    }\n                },\n\n                arguments: function (prevArgs) {\n                    let argsComma = prevArgs || [];\n                    const argsSemiColon = [];\n                    let isSemiColonSeparated;\n                    let value;\n\n                    parserInput.save();\n\n                    while (true) {\n                        if (prevArgs) {\n                            prevArgs = false;\n                        } else {\n                            value = parsers.detachedRuleset() || this.assignment() || parsers.expression();\n                            if (!value) {\n                                break;\n                            }\n\n                            if (value.value && value.value.length == 1) {\n                                value = value.value[0];\n                            }\n\n                            argsComma.push(value);\n                        }\n\n                        if (parserInput.$char(',')) {\n                            continue;\n                        }\n\n                        if (parserInput.$char(';') || isSemiColonSeparated) {\n                            isSemiColonSeparated = true;\n                            value = (argsComma.length < 1) ? argsComma[0]\n                                : new tree.Value(argsComma);\n                            argsSemiColon.push(value);\n                            argsComma = [];\n                        }\n                    }\n\n                    parserInput.forget();\n                    return isSemiColonSeparated ? argsSemiColon : argsComma;\n                },\n                literal: function () {\n                    return this.dimension() ||\n                           this.color() ||\n                           this.quoted() ||\n                           this.unicodeDescriptor();\n                },\n\n                // Assignments are argument entities for calls.\n                // They are present in ie filter properties as shown below.\n                //\n                //     filter: progid:DXImageTransform.Microsoft.Alpha( *opacity=50* )\n                //\n\n                assignment: function () {\n                    let key;\n                    let value;\n                    parserInput.save();\n                    key = parserInput.$re(/^\\w+(?=\\s?=)/i);\n                    if (!key) {\n                        parserInput.restore();\n                        return;\n                    }\n                    if (!parserInput.$char('=')) {\n                        parserInput.restore();\n                        return;\n                    }\n                    value = parsers.entity();\n                    if (value) {\n                        parserInput.forget();\n                        return new(tree.Assignment)(key, value);\n                    } else {\n                        parserInput.restore();\n                    }\n                },\n\n                //\n                // Parse url() tokens\n                //\n                // We use a specific rule for urls, because they don't really behave like\n                // standard function calls. The difference is that the argument doesn't have\n                // to be enclosed within a string, so it can't be parsed as an Expression.\n                //\n                url: function () {\n                    let value;\n                    const index = parserInput.i;\n\n                    parserInput.autoCommentAbsorb = false;\n\n                    if (!parserInput.$str('url(')) {\n                        parserInput.autoCommentAbsorb = true;\n                        return;\n                    }\n\n                    value = this.quoted() || this.variable() || this.property() ||\n                            parserInput.$re(/^(?:(?:\\\\[\\(\\)'\"])|[^\\(\\)'\"])+/) || '';\n\n                    parserInput.autoCommentAbsorb = true;\n\n                    expectChar(')');\n\n                    return new(tree.URL)((value.value != null || \n                        value instanceof tree.Variable || \n                        value instanceof tree.Property) ?\n                        value : new(tree.Anonymous)(value, index), index, fileInfo);\n                },\n\n                //\n                // A Variable entity, such as `@fink`, in\n                //\n                //     width: @fink + 2px\n                //\n                // We use a different parser for variable definitions,\n                // see `parsers.variable`.\n                //\n                variable: function () {\n                    let ch;\n                    let name;\n                    const index = parserInput.i;\n\n                    parserInput.save();\n                    if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^@@?[\\w-]+/))) {\n                        ch = parserInput.currentChar();\n                        if (ch === '(' || ch === '[' && !parserInput.prevChar().match(/^\\s/)) {\n                            // this may be a VariableCall lookup\n                            const result = parsers.variableCall(name);\n                            if (result) {\n                                parserInput.forget();\n                                return result;\n                            }\n                        }\n                        parserInput.forget();\n                        return new(tree.Variable)(name, index, fileInfo);\n                    }\n                    parserInput.restore();\n                },\n\n                // A variable entity using the protective {} e.g. @{var}\n                variableCurly: function () {\n                    let curly;\n                    const index = parserInput.i;\n\n                    if (parserInput.currentChar() === '@' && (curly = parserInput.$re(/^@\\{([\\w-]+)\\}/))) {\n                        return new(tree.Variable)(`@${curly[1]}`, index, fileInfo);\n                    }\n                },\n                //\n                // A Property accessor, such as `$color`, in\n                //\n                //     background-color: $color\n                //\n                property: function () {\n                    let name;\n                    const index = parserInput.i;\n\n                    if (parserInput.currentChar() === '$' && (name = parserInput.$re(/^\\$[\\w-]+/))) {\n                        return new(tree.Property)(name, index, fileInfo);\n                    }\n                },\n\n                // A property entity useing the protective {} e.g. ${prop}\n                propertyCurly: function () {\n                    let curly;\n                    const index = parserInput.i;\n\n                    if (parserInput.currentChar() === '$' && (curly = parserInput.$re(/^\\$\\{([\\w-]+)\\}/))) {\n                        return new(tree.Property)(`$${curly[1]}`, index, fileInfo);\n                    }\n                },\n                //\n                // A Hexadecimal color\n                //\n                //     #4F3C2F\n                //\n                // `rgb` and `hsl` colors are parsed through the `entities.call` parser.\n                //\n                color: function () {\n                    let rgb;\n                    parserInput.save();\n\n                    if (parserInput.currentChar() === '#' && (rgb = parserInput.$re(/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})([\\w.#\\[])?/))) {\n                        if (!rgb[2]) {\n                            parserInput.forget();\n                            return new(tree.Color)(rgb[1], undefined, rgb[0]);\n                        } \n                    }\n                    parserInput.restore();\n                },\n\n                colorKeyword: function () {\n                    parserInput.save();\n                    const autoCommentAbsorb = parserInput.autoCommentAbsorb;\n                    parserInput.autoCommentAbsorb = false;\n                    const k = parserInput.$re(/^[_A-Za-z-][_A-Za-z0-9-]+/);\n                    parserInput.autoCommentAbsorb = autoCommentAbsorb;\n                    if (!k) {\n                        parserInput.forget();\n                        return;\n                    }\n                    parserInput.restore();\n                    const color = tree.Color.fromKeyword(k);\n                    if (color) {\n                        parserInput.$str(k);\n                        return color;\n                    }\n                },\n\n                //\n                // A Dimension, that is, a number and a unit\n                //\n                //     0.5em 95%\n                //\n                dimension: function () {\n                    if (parserInput.peekNotNumeric()) {\n                        return;\n                    }\n\n                    const value = parserInput.$re(/^([+-]?\\d*\\.?\\d+)(%|[a-z_]+)?/i);\n                    if (value) {\n                        return new(tree.Dimension)(value[1], value[2]);\n                    }\n                },\n\n                //\n                // A unicode descriptor, as is used in unicode-range\n                //\n                // U+0??  or U+00A1-00A9\n                //\n                unicodeDescriptor: function () {\n                    let ud;\n\n                    ud = parserInput.$re(/^U\\+[0-9a-fA-F?]+(\\-[0-9a-fA-F?]+)?/);\n                    if (ud) {\n                        return new(tree.UnicodeDescriptor)(ud[0]);\n                    }\n                },\n\n                //\n                // JavaScript code to be evaluated\n                //\n                //     `window.location.href`\n                //\n                javascript: function () {\n                    let js;\n                    const index = parserInput.i;\n\n                    parserInput.save();\n\n                    const escape = parserInput.$char('~');\n                    const jsQuote = parserInput.$char('`');\n\n                    if (!jsQuote) {\n                        parserInput.restore();\n                        return;\n                    }\n\n                    js = parserInput.$re(/^[^`]*`/);\n                    if (js) {\n                        parserInput.forget();\n                        return new(tree.JavaScript)(js.substr(0, js.length - 1), Boolean(escape), index, fileInfo);\n                    }\n                    parserInput.restore('invalid javascript definition');\n                }\n            },\n\n            //\n            // The variable part of a variable definition. Used in the `rule` parser\n            //\n            //     @fink:\n            //\n            variable: function () {\n                let name;\n\n                if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^(@[\\w-]+)\\s*:/))) { return name[1]; }\n            },\n\n            //\n            // Call a variable value to retrieve a detached ruleset\n            // or a value from a detached ruleset's rules.\n            //\n            //     @fink();\n            //     @fink;\n            //     color: @fink[@color];\n            //\n            variableCall: function (parsedName) {\n                let lookups;\n                let important;\n                const i = parserInput.i;\n                const inValue = !!parsedName;\n                let name = parsedName;\n\n                parserInput.save();\n\n                if (name || (parserInput.currentChar() === '@'\n                    && (name = parserInput.$re(/^(@[\\w-]+)(\\(\\s*\\))?/)))) {\n\n                    lookups = this.mixin.ruleLookups();\n\n                    if (!lookups && ((inValue && parserInput.$str('()') !== '()') || (name[2] !== '()'))) {\n                        parserInput.restore('Missing \\'[...]\\' lookup in variable call');\n                        return;\n                    }\n\n                    if (!inValue) {\n                        name = name[1];\n                    }\n\n                    if (lookups && parsers.important()) {\n                        important = true;\n                    }\n\n                    const call = new tree.VariableCall(name, i, fileInfo);\n                    if (!inValue && parsers.end()) {\n                        parserInput.forget();\n                        return call;\n                    }\n                    else {\n                        parserInput.forget();\n                        return new tree.NamespaceValue(call, lookups, important, i, fileInfo);\n                    }\n                }\n\n                parserInput.restore();\n            },\n\n            //\n            // extend syntax - used to extend selectors\n            //\n            extend: function(isRule) {\n                let elements;\n                let e;\n                const index = parserInput.i;\n                let option;\n                let extendList;\n                let extend;\n\n                if (!parserInput.$str(isRule ? '&:extend(' : ':extend(')) {\n                    return;\n                }\n\n                do {\n                    option = null;\n                    elements = null;\n                    while (!(option = parserInput.$re(/^(all)(?=\\s*(\\)|,))/))) {\n                        e = this.element();\n                        if (!e) {\n                            break;\n                        }\n                        if (elements) {\n                            elements.push(e);\n                        } else {\n                            elements = [ e ];\n                        }\n                    }\n\n                    option = option && option[1];\n                    if (!elements) {\n                        error('Missing target selector for :extend().');\n                    }\n                    extend = new(tree.Extend)(new(tree.Selector)(elements), option, index, fileInfo);\n                    if (extendList) {\n                        extendList.push(extend);\n                    } else {\n                        extendList = [ extend ];\n                    }\n                } while (parserInput.$char(','));\n\n                expect(/^\\)/);\n\n                if (isRule) {\n                    expect(/^;/);\n                }\n\n                return extendList;\n            },\n\n            //\n            // extendRule - used in a rule to extend all the parent selectors\n            //\n            extendRule: function() {\n                return this.extend(true);\n            },\n\n            //\n            // Mixins\n            //\n            mixin: {\n                //\n                // A Mixin call, with an optional argument list\n                //\n                //     #mixins > .square(#fff);\n                //     #mixins.square(#fff);\n                //     .rounded(4px, black);\n                //     .button;\n                //\n                // We can lookup / return a value using the lookup syntax:\n                //\n                //     color: #mixin.square(#fff)[@color];\n                //\n                // The `while` loop is there because mixins can be\n                // namespaced, but we only support the child and descendant\n                // selector for now.\n                //\n                call: function (inValue, getLookup) {\n                    const s = parserInput.currentChar();\n                    let important = false;\n                    let lookups;\n                    const index = parserInput.i;\n                    let elements;\n                    let args;\n                    let hasParens;\n\n                    if (s !== '.' && s !== '#') { return; }\n\n                    parserInput.save(); // stop us absorbing part of an invalid selector\n\n                    elements = this.elements();\n\n                    if (elements) {\n                        if (parserInput.$char('(')) {\n                            args = this.args(true).args;\n                            expectChar(')');\n                            hasParens = true;\n                        }\n\n                        if (getLookup !== false) {\n                            lookups = this.ruleLookups();\n                        }\n                        if (getLookup === true && !lookups) {\n                            parserInput.restore();\n                            return;\n                        }\n\n                        if (inValue && !lookups && !hasParens) {\n                            // This isn't a valid in-value mixin call\n                            parserInput.restore();\n                            return;\n                        }\n\n                        if (!inValue && parsers.important()) {\n                            important = true;\n                        }\n\n                        if (inValue || parsers.end()) {\n                            parserInput.forget();\n                            const mixin = new(tree.mixin.Call)(elements, args, index, fileInfo, !lookups && important);\n                            if (lookups) {\n                                return new tree.NamespaceValue(mixin, lookups, important);\n                            }\n                            else {\n                                return mixin;\n                            }\n                        }\n                    }\n\n                    parserInput.restore();\n                },\n                /**\n                 * Matching elements for mixins\n                 * (Start with . or # and can have > )\n                 */\n                elements: function() {\n                    let elements;\n                    let e;\n                    let c;\n                    let elem;\n                    let elemIndex;\n                    const re = /^[#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/;\n                    while (true) {\n                        elemIndex = parserInput.i;\n                        e = parserInput.$re(re);\n                        \n                        if (!e) {\n                            break;\n                        }\n                        elem = new(tree.Element)(c, e, false, elemIndex, fileInfo);\n                        if (elements) {\n                            elements.push(elem);\n                        } else {\n                            elements = [ elem ];\n                        }\n                        c = parserInput.$char('>');\n                    }\n                    return elements;\n                },\n                args: function (isCall) {\n                    const entities = parsers.entities;\n                    const returner = { args:null, variadic: false };\n                    let expressions = [];\n                    const argsSemiColon = [];\n                    const argsComma = [];\n                    let isSemiColonSeparated;\n                    let expressionContainsNamed;\n                    let name;\n                    let nameLoop;\n                    let value;\n                    let arg;\n                    let expand;\n                    let hasSep = true;\n\n                    parserInput.save();\n\n                    while (true) {\n                        if (isCall) {\n                            arg = parsers.detachedRuleset() || parsers.expression();\n                        } else {\n                            parserInput.commentStore.length = 0;\n                            if (parserInput.$str('...')) {\n                                returner.variadic = true;\n                                if (parserInput.$char(';') && !isSemiColonSeparated) {\n                                    isSemiColonSeparated = true;\n                                }\n                                (isSemiColonSeparated ? argsSemiColon : argsComma)\n                                    .push({ variadic: true });\n                                break;\n                            }\n                            arg = entities.variable() || entities.property() || entities.literal() || entities.keyword() || this.call(true);\n                        }\n\n                        if (!arg || !hasSep) {\n                            break;\n                        }\n\n                        nameLoop = null;\n                        if (arg.throwAwayComments) {\n                            arg.throwAwayComments();\n                        }\n                        value = arg;\n                        let val = null;\n\n                        if (isCall) {\n                            // Variable\n                            if (arg.value && arg.value.length == 1) {\n                                val = arg.value[0];\n                            }\n                        } else {\n                            val = arg;\n                        }\n\n                        if (val && (val instanceof tree.Variable || val instanceof tree.Property)) {\n                            if (parserInput.$char(':')) {\n                                if (expressions.length > 0) {\n                                    if (isSemiColonSeparated) {\n                                        error('Cannot mix ; and , as delimiter types');\n                                    }\n                                    expressionContainsNamed = true;\n                                }\n\n                                value = parsers.detachedRuleset() || parsers.expression();\n\n                                if (!value) {\n                                    if (isCall) {\n                                        error('could not understand value for named argument');\n                                    } else {\n                                        parserInput.restore();\n                                        returner.args = [];\n                                        return returner;\n                                    }\n                                }\n                                nameLoop = (name = val.name);\n                            } else if (parserInput.$str('...')) {\n                                if (!isCall) {\n                                    returner.variadic = true;\n                                    if (parserInput.$char(';') && !isSemiColonSeparated) {\n                                        isSemiColonSeparated = true;\n                                    }\n                                    (isSemiColonSeparated ? argsSemiColon : argsComma)\n                                        .push({ name: arg.name, variadic: true });\n                                    break;\n                                } else {\n                                    expand = true;\n                                }\n                            } else if (!isCall) {\n                                name = nameLoop = val.name;\n                                value = null;\n                            }\n                        }\n\n                        if (value) {\n                            expressions.push(value);\n                        }\n\n                        argsComma.push({ name:nameLoop, value, expand });\n\n                        if (parserInput.$char(',')) {\n                            hasSep = true;\n                            continue;\n                        }\n                        hasSep = parserInput.$char(';') === ';';\n\n                        if (hasSep || isSemiColonSeparated) {\n\n                            if (expressionContainsNamed) {\n                                error('Cannot mix ; and , as delimiter types');\n                            }\n\n                            isSemiColonSeparated = true;\n\n                            if (expressions.length > 1) {\n                                value = new(tree.Value)(expressions);\n                            }\n                            argsSemiColon.push({ name, value, expand });\n\n                            name = null;\n                            expressions = [];\n                            expressionContainsNamed = false;\n                        }\n                    }\n\n                    parserInput.forget();\n                    returner.args = isSemiColonSeparated ? argsSemiColon : argsComma;\n                    return returner;\n                },\n                //\n                // A Mixin definition, with a list of parameters\n                //\n                //     .rounded (@radius: 2px, @color) {\n                //        ...\n                //     }\n                //\n                // Until we have a finer grained state-machine, we have to\n                // do a look-ahead, to make sure we don't have a mixin call.\n                // See the `rule` function for more information.\n                //\n                // We start by matching `.rounded (`, and then proceed on to\n                // the argument list, which has optional default values.\n                // We store the parameters in `params`, with a `value` key,\n                // if there is a value, such as in the case of `@radius`.\n                //\n                // Once we've got our params list, and a closing `)`, we parse\n                // the `{...}` block.\n                //\n                definition: function () {\n                    let name;\n                    let params = [];\n                    let match;\n                    let ruleset;\n                    let cond;\n                    let variadic = false;\n                    if ((parserInput.currentChar() !== '.' && parserInput.currentChar() !== '#') ||\n                        parserInput.peek(/^[^{]*\\}/)) {\n                        return;\n                    }\n\n                    parserInput.save();\n\n                    match = parserInput.$re(/^([#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+)\\s*\\(/);\n                    if (match) {\n                        name = match[1];\n\n                        const argInfo = this.args(false);\n                        params = argInfo.args;\n                        variadic = argInfo.variadic;\n\n                        // .mixincall(\"@{a}\");\n                        // looks a bit like a mixin definition..\n                        // also\n                        // .mixincall(@a: {rule: set;});\n                        // so we have to be nice and restore\n                        if (!parserInput.$char(')')) {\n                            parserInput.restore('Missing closing \\')\\'');\n                            return;\n                        }\n\n                        parserInput.commentStore.length = 0;\n\n                        if (parserInput.$str('when')) { // Guard\n                            cond = expect(parsers.conditions, 'expected condition');\n                        }\n\n                        ruleset = parsers.block();\n\n                        if (ruleset) {\n                            parserInput.forget();\n                            return new(tree.mixin.Definition)(name, params, ruleset, cond, variadic);\n                        } else {\n                            parserInput.restore();\n                        }\n                    } else {\n                        parserInput.forget();\n                    }\n                },\n            \n                ruleLookups: function() {\n                    let rule;\n                    let args;\n                    const lookups = [];\n\n                    if (parserInput.currentChar() !== '[') { \n                        return;\n                    }\n\n                    while (true) {\n                        parserInput.save();\n                        args = null;\n                        rule = this.lookupValue();\n                        if (!rule && rule !== '') {\n                            parserInput.restore();\n                            break;\n                        }\n                        lookups.push(rule);\n                        parserInput.forget();\n                    }\n                    if (lookups.length > 0) {\n                        return lookups;\n                    }\n                },\n    \n                lookupValue: function() {\n                    parserInput.save();\n    \n                    if (!parserInput.$char('[')) { \n                        parserInput.restore();\n                        return;\n                    }\n    \n                    const name = parserInput.$re(/^(?:[@$]{0,2})[_a-zA-Z0-9-]*/);\n    \n                    if (!parserInput.$char(']')) {\n                        parserInput.restore();\n                        return;\n                    } \n\n                    if (name || name === '') {\n                        parserInput.forget();\n                        return name;\n                    }\n    \n                    parserInput.restore();\n                }\n            },\n            //\n            // Entities are the smallest recognized token,\n            // and can be found inside a rule's value.\n            //\n            entity: function () {\n                const entities = this.entities;\n\n                return this.comment() || entities.literal() || entities.variable() || entities.url() ||\n                    entities.property() || entities.call() || entities.keyword() || this.mixin.call(true) ||\n                    entities.javascript();\n            },\n\n            //\n            // A Declaration terminator. Note that we use `peek()` to check for '}',\n            // because the `block` rule will be expecting it, but we still need to make sure\n            // it's there, if ';' was omitted.\n            //\n            end: function () {\n                return parserInput.$char(';') || parserInput.peek('}');\n            },\n\n            //\n            // IE's alpha function\n            //\n            //     alpha(opacity=88)\n            //\n            ieAlpha: function () {\n                let value;\n\n                // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\n                if (!parserInput.$re(/^opacity=/i)) { return; }\n                value = parserInput.$re(/^\\d+/);\n                if (!value) {\n                    value = expect(parsers.entities.variable, 'Could not parse alpha');\n                    value = `@{${value.name.slice(1)}}`;\n                }\n                expectChar(')');\n                return new tree.Quoted('', `alpha(opacity=${value})`);\n            },\n\n            //\n            // A Selector Element\n            //\n            //     div\n            //     + h1\n            //     #socks\n            //     input[type=\"text\"]\n            //\n            // Elements are the building blocks for Selectors,\n            // they are made out of a `Combinator` (see combinator rule),\n            // and an element name, such as a tag a class, or `*`.\n            //\n            element: function () {\n                let e;\n                let c;\n                let v;\n                const index = parserInput.i;\n\n                c = this.combinator();\n\n                e = parserInput.$re(/^(?:\\d+\\.\\d+|\\d+)%/) ||\n                    parserInput.$re(/^(?:[.#]?|:*)(?:[\\w-]|[^\\x00-\\x9f]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/) ||\n                    parserInput.$char('*') || parserInput.$char('&') || this.attribute() ||\n                    parserInput.$re(/^\\([^&()@]+\\)/) ||  parserInput.$re(/^[\\.#:](?=@)/) ||\n                    this.entities.variableCurly();\n\n                if (!e) {\n                    parserInput.save();\n                    if (parserInput.$char('(')) {\n                        if ((v = this.selector(false)) && parserInput.$char(')')) {\n                            e = new(tree.Paren)(v);\n                            parserInput.forget();\n                        } else {\n                            parserInput.restore('Missing closing \\')\\'');\n                        }\n                    } else {\n                        parserInput.forget();\n                    }\n                }\n\n                if (e) { return new(tree.Element)(c, e, e instanceof tree.Variable, index, fileInfo); }\n            },\n\n            //\n            // Combinators combine elements together, in a Selector.\n            //\n            // Because our parser isn't white-space sensitive, special care\n            // has to be taken, when parsing the descendant combinator, ` `,\n            // as it's an empty space. We have to check the previous character\n            // in the input, to see if it's a ` ` character. More info on how\n            // we deal with this in *combinator.js*.\n            //\n            combinator: function () {\n                let c = parserInput.currentChar();\n\n                if (c === '/') {\n                    parserInput.save();\n                    const slashedCombinator = parserInput.$re(/^\\/[a-z]+\\//i);\n                    if (slashedCombinator) {\n                        parserInput.forget();\n                        return new(tree.Combinator)(slashedCombinator);\n                    }\n                    parserInput.restore();\n                }\n\n                if (c === '>' || c === '+' || c === '~' || c === '|' || c === '^') {\n                    parserInput.i++;\n                    if (c === '^' && parserInput.currentChar() === '^') {\n                        c = '^^';\n                        parserInput.i++;\n                    }\n                    while (parserInput.isWhitespace()) { parserInput.i++; }\n                    return new(tree.Combinator)(c);\n                } else if (parserInput.isWhitespace(-1)) {\n                    return new(tree.Combinator)(' ');\n                } else {\n                    return new(tree.Combinator)(null);\n                }\n            },\n            //\n            // A CSS Selector\n            // with less extensions e.g. the ability to extend and guard\n            //\n            //     .class > div + h1\n            //     li a:hover\n            //\n            // Selectors are made out of one or more Elements, see above.\n            //\n            selector: function (isLess) {\n                const index = parserInput.i;\n                let elements;\n                let extendList;\n                let c;\n                let e;\n                let allExtends;\n                let when;\n                let condition;\n                isLess = isLess !== false;\n                while ((isLess && (extendList = this.extend())) || (isLess && (when = parserInput.$str('when'))) || (e = this.element())) {\n                    if (when) {\n                        condition = expect(this.conditions, 'expected condition');\n                    } else if (condition) {\n                        error('CSS guard can only be used at the end of selector');\n                    } else if (extendList) {\n                        if (allExtends) {\n                            allExtends = allExtends.concat(extendList);\n                        } else {\n                            allExtends = extendList;\n                        }\n                    } else {\n                        if (allExtends) { error('Extend can only be used at the end of selector'); }\n                        c = parserInput.currentChar();\n                        if (elements) {\n                            elements.push(e);\n                        } else {\n                            elements = [ e ];\n                        }\n                        e = null;\n                    }\n                    if (c === '{' || c === '}' || c === ';' || c === ',' || c === ')') {\n                        break;\n                    }\n                }\n\n                if (elements) { return new(tree.Selector)(elements, allExtends, condition, index, fileInfo); }\n                if (allExtends) { error('Extend must be used to extend a selector, it cannot be used on its own'); }\n            },\n            selectors: function () {\n                let s;\n                let selectors;\n                while (true) {\n                    s = this.selector();\n                    if (!s) {\n                        break;\n                    }\n                    if (selectors) {\n                        selectors.push(s);\n                    } else {\n                        selectors = [ s ];\n                    }\n                    parserInput.commentStore.length = 0;\n                    if (s.condition && selectors.length > 1) {\n                        error(\"Guards are only currently allowed on a single selector.\");\n                    }\n                    if (!parserInput.$char(',')) { break; }\n                    if (s.condition) {\n                        error(\"Guards are only currently allowed on a single selector.\");\n                    }\n                    parserInput.commentStore.length = 0;\n                }\n                return selectors;\n            },\n            attribute: function () {\n                if (!parserInput.$char('[')) { return; }\n\n                const entities = this.entities;\n                let key;\n                let val;\n                let op;\n\n                if (!(key = entities.variableCurly())) {\n                    key = expect(/^(?:[_A-Za-z0-9-\\*]*\\|)?(?:[_A-Za-z0-9-]|\\\\.)+/);\n                }\n\n                op = parserInput.$re(/^[|~*$^]?=/);\n                if (op) {\n                    val = entities.quoted() || parserInput.$re(/^[0-9]+%/) || parserInput.$re(/^[\\w-]+/) || entities.variableCurly();\n                }\n\n                expectChar(']');\n\n                return new(tree.Attribute)(key, op, val);\n            },\n\n            //\n            // The `block` rule is used by `ruleset` and `mixin.definition`.\n            // It's a wrapper around the `primary` rule, with added `{}`.\n            //\n            block: function () {\n                let content;\n                if (parserInput.$char('{') && (content = this.primary()) && parserInput.$char('}')) {\n                    return content;\n                }\n            },\n\n            blockRuleset: function() {\n                let block = this.block();\n\n                if (block) {\n                    block = new tree.Ruleset(null, block);\n                }\n                return block;\n            },\n\n            detachedRuleset: function() {\n                let argInfo;\n                let params;\n                let variadic;\n\n                parserInput.save();\n                if (parserInput.$re(/^[.#]\\(/)) {\n                    /**\n                     * DR args currently only implemented for each() function, and not \n                     * yet settable as `@dr: #(@arg) {}`\n                     * This should be done when DRs are merged with mixins.\n                     * See: https://github.com/less/less-meta/issues/16\n                     */\n                    argInfo = this.mixin.args(false);\n                    params = argInfo.args;\n                    variadic = argInfo.variadic;\n                    if (!parserInput.$char(')')) {\n                        parserInput.restore();\n                        return;\n                    }\n                }\n                const blockRuleset = this.blockRuleset();\n                if (blockRuleset) {\n                    parserInput.forget();\n                    if (params) {\n                        return new tree.mixin.Definition(null, params, blockRuleset, null, variadic);\n                    }\n                    return new tree.DetachedRuleset(blockRuleset);\n                }\n                parserInput.restore();\n            },\n\n            //\n            // div, .class, body > p {...}\n            //\n            ruleset: function () {\n                let selectors;\n                let rules;\n                let debugInfo;\n\n                parserInput.save();\n\n                if (context.dumpLineNumbers) {\n                    debugInfo = getDebugInfo(parserInput.i);\n                }\n\n                selectors = this.selectors();\n\n                if (selectors && (rules = this.block())) {\n                    parserInput.forget();\n                    const ruleset = new(tree.Ruleset)(selectors, rules, context.strictImports);\n                    if (context.dumpLineNumbers) {\n                        ruleset.debugInfo = debugInfo;\n                    }\n                    return ruleset;\n                } else {\n                    parserInput.restore();\n                }\n            },\n            declaration: function () {\n                let name;\n                let value;\n                const index = parserInput.i;\n                let hasDR;\n                const c = parserInput.currentChar();\n                let important;\n                let merge;\n                let isVariable;\n\n                if (c === '.' || c === '#' || c === '&' || c === ':') { return; }\n\n                parserInput.save();\n\n                name = this.variable() || this.ruleProperty();\n                if (name) {\n                    isVariable = typeof name === 'string';\n\n                    if (isVariable) {\n                        value = this.detachedRuleset();\n                        if (value) {\n                            hasDR = true;\n                        }\n                    }\n\n                    parserInput.commentStore.length = 0;\n                    if (!value) {\n                        // a name returned by this.ruleProperty() is always an array of the form:\n                        // [string-1, ..., string-n, \"\"] or [string-1, ..., string-n, \"+\"]\n                        // where each item is a tree.Keyword or tree.Variable\n                        merge = !isVariable && name.length > 1 && name.pop().value;\n\n                        // Custom property values get permissive parsing\n                        if (name[0].value && name[0].value.slice(0, 2) === '--') {\n                            value = this.permissiveValue();\n                        }\n                        // Try to store values as anonymous\n                        // If we need the value later we'll re-parse it in ruleset.parseValue\n                        else {\n                            value = this.anonymousValue();\n                        }\n                        if (value) {\n                            parserInput.forget();\n                            // anonymous values absorb the end ';' which is required for them to work\n                            return new (tree.Declaration)(name, value, false, merge, index, fileInfo);\n                        }\n\n                        if (!value) {\n                            value = this.value();\n                        }\n\n                        if (value) {\n                            important = this.important();\n                        } else if (isVariable) {\n                            // As a last resort, try permissiveValue\n                            value = this.permissiveValue();\n                        }\n                    }\n\n                    if (value && (this.end() || hasDR)) {\n                        parserInput.forget();\n                        return new (tree.Declaration)(name, value, important, merge, index, fileInfo);\n                    }\n                    else {\n                        parserInput.restore();\n                    }\n                } else {\n                    parserInput.restore();\n                }\n            },\n            anonymousValue: function () {\n                const index = parserInput.i;\n                const match = parserInput.$re(/^([^.#@\\$+\\/'\"*`(;{}-]*);/);\n                if (match) {\n                    return new(tree.Anonymous)(match[1], index);\n                }\n            },\n            /**\n             * Used for custom properties, at-rules, and variables (as fallback)\n             * Parses almost anything inside of {} [] () \"\" blocks\n             * until it reaches outer-most tokens.\n             * \n             * First, it will try to parse comments and entities to reach\n             * the end. This is mostly like the Expression parser except no\n             * math is allowed.\n             */\n            permissiveValue: function (untilTokens) {\n                let i;\n                let e;\n                let done;\n                let value;\n                const tok = untilTokens || ';';\n                const index = parserInput.i;\n                const result = [];\n\n                function testCurrentChar() {\n                    const char = parserInput.currentChar();\n                    if (typeof tok === 'string') {\n                        return char === tok;\n                    } else {\n                        return tok.test(char);\n                    }\n                }\n                if (testCurrentChar()) {\n                    return;\n                }\n                value = [];\n                do {\n                    e = this.comment();\n                    if (e) {\n                        value.push(e);\n                        continue;\n                    }\n                    e = this.entity();\n                    if (e) {\n                        value.push(e);\n                    }\n                } while (e);\n\n                done = testCurrentChar();\n\n                if (value.length > 0) {\n                    value = new(tree.Expression)(value);\n                    if (done) {\n                        return value;\n                    }\n                    else {\n                        result.push(value);\n                    }\n                    // Preserve space before $parseUntil as it will not\n                    if (parserInput.prevChar() === ' ') {\n                        result.push(new tree.Anonymous(' ', index));\n                    }\n                }\n                parserInput.save();\n\n                value = parserInput.$parseUntil(tok);\n\n                if (value) {\n                    if (typeof value === 'string') {\n                        error(`Expected '${value}'`, 'Parse');\n                    }\n                    if (value.length === 1 && value[0] === ' ') {\n                        parserInput.forget();\n                        return new tree.Anonymous('', index);\n                    }\n                    let item;\n                    for (i = 0; i < value.length; i++) {\n                        item = value[i];\n                        if (Array.isArray(item)) {\n                            // Treat actual quotes as normal quoted values\n                            result.push(new tree.Quoted(item[0], item[1], true, index, fileInfo));\n                        }\n                        else {\n                            if (i === value.length - 1) {\n                                item = item.trim();\n                            }\n                            // Treat like quoted values, but replace vars like unquoted expressions\n                            const quote = new tree.Quoted('\\'', item, true, index, fileInfo);\n                            quote.variableRegex = /@([\\w-]+)/g;\n                            quote.propRegex = /\\$([\\w-]+)/g;\n                            result.push(quote);\n                        }\n                    }\n                    parserInput.forget();\n                    return new tree.Expression(result, true);\n                }\n                parserInput.restore();\n            },\n\n            //\n            // An @import atrule\n            //\n            //     @import \"lib\";\n            //\n            // Depending on our environment, importing is done differently:\n            // In the browser, it's an XHR request, in Node, it would be a\n            // file-system operation. The function used for importing is\n            // stored in `import`, which we pass to the Import constructor.\n            //\n            'import': function () {\n                let path;\n                let features;\n                const index = parserInput.i;\n\n                const dir = parserInput.$re(/^@import?\\s+/);\n\n                if (dir) {\n                    const options = (dir ? this.importOptions() : null) || {};\n\n                    if ((path = this.entities.quoted() || this.entities.url())) {\n                        features = this.mediaFeatures();\n\n                        if (!parserInput.$char(';')) {\n                            parserInput.i = index;\n                            error('missing semi-colon or unrecognised media features on import');\n                        }\n                        features = features && new(tree.Value)(features);\n                        return new(tree.Import)(path, features, options, index, fileInfo);\n                    }\n                    else {\n                        parserInput.i = index;\n                        error('malformed import statement');\n                    }\n                }\n            },\n\n            importOptions: function() {\n                let o;\n                const options = {};\n                let optionName;\n                let value;\n\n                // list of options, surrounded by parens\n                if (!parserInput.$char('(')) { return null; }\n                do {\n                    o = this.importOption();\n                    if (o) {\n                        optionName = o;\n                        value = true;\n                        switch (optionName) {\n                            case 'css':\n                                optionName = 'less';\n                                value = false;\n                                break;\n                            case 'once':\n                                optionName = 'multiple';\n                                value = false;\n                                break;\n                        }\n                        options[optionName] = value;\n                        if (!parserInput.$char(',')) { break; }\n                    }\n                } while (o);\n                expectChar(')');\n                return options;\n            },\n\n            importOption: function() {\n                const opt = parserInput.$re(/^(less|css|multiple|once|inline|reference|optional)/);\n                if (opt) {\n                    return opt[1];\n                }\n            },\n\n            mediaFeature: function () {\n                const entities = this.entities;\n                const nodes = [];\n                let e;\n                let p;\n                parserInput.save();\n                do {\n                    e = entities.keyword() || entities.variable() || entities.mixinLookup();\n                    if (e) {\n                        nodes.push(e);\n                    } else if (parserInput.$char('(')) {\n                        p = this.property();\n                        e = this.value();\n                        if (parserInput.$char(')')) {\n                            if (p && e) {\n                                nodes.push(new(tree.Paren)(new(tree.Declaration)(p, e, null, null, parserInput.i, fileInfo, true)));\n                            } else if (e) {\n                                nodes.push(new(tree.Paren)(e));\n                            } else {\n                                error('badly formed media feature definition');\n                            }\n                        } else {\n                            error('Missing closing \\')\\'', 'Parse');\n                        }\n                    }\n                } while (e);\n\n                parserInput.forget();\n                if (nodes.length > 0) {\n                    return new(tree.Expression)(nodes);\n                }\n            },\n\n            mediaFeatures: function () {\n                const entities = this.entities;\n                const features = [];\n                let e;\n                do {\n                    e = this.mediaFeature();\n                    if (e) {\n                        features.push(e);\n                        if (!parserInput.$char(',')) { break; }\n                    } else {\n                        e = entities.variable() || entities.mixinLookup();\n                        if (e) {\n                            features.push(e);\n                            if (!parserInput.$char(',')) { break; }\n                        }\n                    }\n                } while (e);\n\n                return features.length > 0 ? features : null;\n            },\n\n            media: function () {\n                let features;\n                let rules;\n                let media;\n                let debugInfo;\n                const index = parserInput.i;\n\n                if (context.dumpLineNumbers) {\n                    debugInfo = getDebugInfo(index);\n                }\n\n                parserInput.save();\n\n                if (parserInput.$str('@media')) {\n                    features = this.mediaFeatures();\n\n                    rules = this.block();\n\n                    if (!rules) {\n                        error('media definitions require block statements after any features');\n                    }\n\n                    parserInput.forget();\n\n                    media = new(tree.Media)(rules, features, index, fileInfo);\n                    if (context.dumpLineNumbers) {\n                        media.debugInfo = debugInfo;\n                    }\n\n                    return media;\n                }\n\n                parserInput.restore();\n            },\n\n            //\n\n            // A @plugin directive, used to import plugins dynamically.\n            //\n            //     @plugin (args) \"lib\";\n            //\n            plugin: function () {\n                let path;\n                let args;\n                let options;\n                const index = parserInput.i;\n                const dir   = parserInput.$re(/^@plugin?\\s+/);\n\n                if (dir) {\n                    args = this.pluginArgs();\n\n                    if (args) {\n                        options = {\n                            pluginArgs: args,\n                            isPlugin: true\n                        };\n                    }\n                    else {\n                        options = { isPlugin: true };\n                    }\n\n                    if ((path = this.entities.quoted() || this.entities.url())) {\n\n                        if (!parserInput.$char(';')) {\n                            parserInput.i = index;\n                            error('missing semi-colon on @plugin');\n                        }\n                        return new(tree.Import)(path, null, options, index, fileInfo);\n                    }\n                    else {\n                        parserInput.i = index;\n                        error('malformed @plugin statement');\n                    }\n                }\n            },\n\n            pluginArgs: function() {\n                // list of options, surrounded by parens\n                parserInput.save();\n                if (!parserInput.$char('(')) {\n                    parserInput.restore();\n                    return null;\n                }\n                const args = parserInput.$re(/^\\s*([^\\);]+)\\)\\s*/);\n                if (args[1]) {\n                    parserInput.forget();\n                    return args[1].trim();\n                }\n                else { \n                    parserInput.restore();\n                    return null;\n                }\n            },\n\n            //\n            // A CSS AtRule\n            //\n            //     @charset \"utf-8\";\n            //\n            atrule: function () {\n                const index = parserInput.i;\n                let name;\n                let value;\n                let rules;\n                let nonVendorSpecificName;\n                let hasIdentifier;\n                let hasExpression;\n                let hasUnknown;\n                let hasBlock = true;\n                let isRooted = true;\n\n                if (parserInput.currentChar() !== '@') { return; }\n\n                value = this['import']() || this.plugin() || this.media();\n                if (value) {\n                    return value;\n                }\n\n                parserInput.save();\n\n                name = parserInput.$re(/^@[a-z-]+/);\n\n                if (!name) { return; }\n\n                nonVendorSpecificName = name;\n                if (name.charAt(1) == '-' && name.indexOf('-', 2) > 0) {\n                    nonVendorSpecificName = `@${name.slice(name.indexOf('-', 2) + 1)}`;\n                }\n\n                switch (nonVendorSpecificName) {\n                    case '@charset':\n                        hasIdentifier = true;\n                        hasBlock = false;\n                        break;\n                    case '@namespace':\n                        hasExpression = true;\n                        hasBlock = false;\n                        break;\n                    case '@keyframes':\n                    case '@counter-style':\n                        hasIdentifier = true;\n                        break;\n                    case '@document':\n                    case '@supports':\n                        hasUnknown = true;\n                        isRooted = false;\n                        break;\n                    default:\n                        hasUnknown = true;\n                        break;\n                }\n\n                parserInput.commentStore.length = 0;\n\n                if (hasIdentifier) {\n                    value = this.entity();\n                    if (!value) {\n                        error(`expected ${name} identifier`);\n                    }\n                } else if (hasExpression) {\n                    value = this.expression();\n                    if (!value) {\n                        error(`expected ${name} expression`);\n                    }\n                } else if (hasUnknown) {\n                    value = this.permissiveValue(/^[{;]/);\n                    hasBlock = (parserInput.currentChar() === '{');\n                    if (!value) {\n                        if (!hasBlock && parserInput.currentChar() !== ';') {\n                            error(`${name} rule is missing block or ending semi-colon`);\n                        }\n                    }\n                    else if (!value.value) {\n                        value = null;\n                    }\n                }\n\n                if (hasBlock) {\n                    rules = this.blockRuleset();\n                }\n\n                if (rules || (!hasBlock && value && parserInput.$char(';'))) {\n                    parserInput.forget();\n                    return new (tree.AtRule)(name, value, rules, index, fileInfo,\n                        context.dumpLineNumbers ? getDebugInfo(index) : null,\n                        isRooted\n                    );\n                }\n\n                parserInput.restore('at-rule options not recognised');\n            },\n\n            //\n            // A Value is a comma-delimited list of Expressions\n            //\n            //     font-family: Baskerville, Georgia, serif;\n            //\n            // In a Rule, a Value represents everything after the `:`,\n            // and before the `;`.\n            //\n            value: function () {\n                let e;\n                const expressions = [];\n                const index = parserInput.i;\n\n                do {\n                    e = this.expression();\n                    if (e) {\n                        expressions.push(e);\n                        if (!parserInput.$char(',')) { break; }\n                    }\n                } while (e);\n\n                if (expressions.length > 0) {\n                    return new(tree.Value)(expressions, index);\n                }\n            },\n            important: function () {\n                if (parserInput.currentChar() === '!') {\n                    return parserInput.$re(/^! *important/);\n                }\n            },\n            sub: function () {\n                let a;\n                let e;\n\n                parserInput.save();\n                if (parserInput.$char('(')) {\n                    a = this.addition();\n                    if (a && parserInput.$char(')')) {\n                        parserInput.forget();\n                        e = new(tree.Expression)([a]);\n                        e.parens = true;\n                        return e;\n                    }\n                    parserInput.restore('Expected \\')\\'');\n                    return;\n                }\n                parserInput.restore();\n            },\n            multiplication: function () {\n                let m;\n                let a;\n                let op;\n                let operation;\n                let isSpaced;\n                m = this.operand();\n                if (m) {\n                    isSpaced = parserInput.isWhitespace(-1);\n                    while (true) {\n                        if (parserInput.peek(/^\\/[*\\/]/)) {\n                            break;\n                        }\n\n                        parserInput.save();\n\n                        op = parserInput.$char('/') || parserInput.$char('*') || parserInput.$str('./');\n\n                        if (!op) { parserInput.forget(); break; }\n\n                        a = this.operand();\n\n                        if (!a) { parserInput.restore(); break; }\n                        parserInput.forget();\n\n                        m.parensInOp = true;\n                        a.parensInOp = true;\n                        operation = new(tree.Operation)(op, [operation || m, a], isSpaced);\n                        isSpaced = parserInput.isWhitespace(-1);\n                    }\n                    return operation || m;\n                }\n            },\n            addition: function () {\n                let m;\n                let a;\n                let op;\n                let operation;\n                let isSpaced;\n                m = this.multiplication();\n                if (m) {\n                    isSpaced = parserInput.isWhitespace(-1);\n                    while (true) {\n                        op = parserInput.$re(/^[-+]\\s+/) || (!isSpaced && (parserInput.$char('+') || parserInput.$char('-')));\n                        if (!op) {\n                            break;\n                        }\n                        a = this.multiplication();\n                        if (!a) {\n                            break;\n                        }\n\n                        m.parensInOp = true;\n                        a.parensInOp = true;\n                        operation = new(tree.Operation)(op, [operation || m, a], isSpaced);\n                        isSpaced = parserInput.isWhitespace(-1);\n                    }\n                    return operation || m;\n                }\n            },\n            conditions: function () {\n                let a;\n                let b;\n                const index = parserInput.i;\n                let condition;\n\n                a = this.condition(true);\n                if (a) {\n                    while (true) {\n                        if (!parserInput.peek(/^,\\s*(not\\s*)?\\(/) || !parserInput.$char(',')) {\n                            break;\n                        }\n                        b = this.condition(true);\n                        if (!b) {\n                            break;\n                        }\n                        condition = new(tree.Condition)('or', condition || a, b, index);\n                    }\n                    return condition || a;\n                }\n            },\n            condition: function (needsParens) {\n                let result;\n                let logical;\n                let next;\n                function or() {\n                    return parserInput.$str('or');\n                }\n\n                result = this.conditionAnd(needsParens);\n                if (!result) {\n                    return ;\n                }\n                logical = or();\n                if (logical) {\n                    next = this.condition(needsParens);\n                    if (next) {\n                        result = new(tree.Condition)(logical, result, next);\n                    } else {\n                        return ;\n                    }\n                }\n                return result;\n            },\n            conditionAnd: function (needsParens) {\n                let result;\n                let logical;\n                let next;\n                const self = this;\n                function insideCondition() {\n                    const cond = self.negatedCondition(needsParens) || self.parenthesisCondition(needsParens);\n                    if (!cond && !needsParens) {\n                        return self.atomicCondition(needsParens);\n                    }\n                    return cond;\n                }\n                function and() {\n                    return parserInput.$str('and');\n                }\n\n                result = insideCondition();\n                if (!result) {\n                    return ;\n                }\n                logical = and();\n                if (logical) {\n                    next = this.conditionAnd(needsParens);\n                    if (next) {\n                        result = new(tree.Condition)(logical, result, next);\n                    } else {\n                        return ;\n                    }\n                }\n                return result;\n            },\n            negatedCondition: function (needsParens) {\n                if (parserInput.$str('not')) {\n                    const result = this.parenthesisCondition(needsParens);\n                    if (result) {\n                        result.negate = !result.negate;\n                    }\n                    return result;\n                }\n            },\n            parenthesisCondition: function (needsParens) {\n                function tryConditionFollowedByParenthesis(me) {\n                    let body;\n                    parserInput.save();\n                    body = me.condition(needsParens);\n                    if (!body) {\n                        parserInput.restore();\n                        return ;\n                    }\n                    if (!parserInput.$char(')')) {\n                        parserInput.restore();\n                        return ;\n                    }\n                    parserInput.forget();\n                    return body;\n                }\n\n                let body;\n                parserInput.save();\n                if (!parserInput.$str('(')) {\n                    parserInput.restore();\n                    return ;\n                }\n                body = tryConditionFollowedByParenthesis(this);\n                if (body) {\n                    parserInput.forget();\n                    return body;\n                }\n\n                body = this.atomicCondition(needsParens);\n                if (!body) {\n                    parserInput.restore();\n                    return ;\n                }\n                if (!parserInput.$char(')')) {\n                    parserInput.restore(`expected ')' got '${parserInput.currentChar()}'`);\n                    return ;\n                }\n                parserInput.forget();\n                return body;\n            },\n            atomicCondition: function (needsParens) {\n                const entities = this.entities;\n                const index = parserInput.i;\n                let a;\n                let b;\n                let c;\n                let op;\n\n                function cond() {\n                    return this.addition() || entities.keyword() || entities.quoted() || entities.mixinLookup();\n                }\n                cond = cond.bind(this);\n\n                a = cond();\n                if (a) {\n                    if (parserInput.$char('>')) {\n                        if (parserInput.$char('=')) {\n                            op = '>=';\n                        } else {\n                            op = '>';\n                        }\n                    } else\n                    if (parserInput.$char('<')) {\n                        if (parserInput.$char('=')) {\n                            op = '<=';\n                        } else {\n                            op = '<';\n                        }\n                    } else\n                    if (parserInput.$char('=')) {\n                        if (parserInput.$char('>')) {\n                            op = '=>';\n                        } else if (parserInput.$char('<')) {\n                            op = '=<';\n                        } else {\n                            op = '=';\n                        }\n                    }\n                    if (op) {\n                        b = cond();\n                        if (b) {\n                            c = new(tree.Condition)(op, a, b, index, false);\n                        } else {\n                            error('expected expression');\n                        }\n                    } else {\n                        c = new(tree.Condition)('=', a, new(tree.Keyword)('true'), index, false);\n                    }\n                    return c;\n                }\n            },\n\n            //\n            // An operand is anything that can be part of an operation,\n            // such as a Color, or a Variable\n            //\n            operand: function () {\n                const entities = this.entities;\n                let negate;\n\n                if (parserInput.peek(/^-[@\\$\\(]/)) {\n                    negate = parserInput.$char('-');\n                }\n\n                let o = this.sub() || entities.dimension() ||\n                        entities.color() || entities.variable() ||\n                        entities.property() || entities.call() ||\n                        entities.quoted(true) || entities.colorKeyword() ||\n                        entities.mixinLookup();\n\n                if (negate) {\n                    o.parensInOp = true;\n                    o = new(tree.Negative)(o);\n                }\n\n                return o;\n            },\n\n            //\n            // Expressions either represent mathematical operations,\n            // or white-space delimited Entities.\n            //\n            //     1px solid black\n            //     @var * 2\n            //\n            expression: function () {\n                const entities = [];\n                let e;\n                let delim;\n                const index = parserInput.i;\n\n                do {\n                    e = this.comment();\n                    if (e) {\n                        entities.push(e);\n                        continue;\n                    }\n                    e = this.addition() || this.entity();\n                    if (e) {\n                        entities.push(e);\n                        // operations do not allow keyword \"/\" dimension (e.g. small/20px) so we support that here\n                        if (!parserInput.peek(/^\\/[\\/*]/)) {\n                            delim = parserInput.$char('/');\n                            if (delim) {\n                                entities.push(new(tree.Anonymous)(delim, index));\n                            }\n                        }\n                    }\n                } while (e);\n                if (entities.length > 0) {\n                    return new(tree.Expression)(entities);\n                }\n            },\n            property: function () {\n                const name = parserInput.$re(/^(\\*?-?[_a-zA-Z0-9-]+)\\s*:/);\n                if (name) {\n                    return name[1];\n                }\n            },\n            ruleProperty: function () {\n                let name = [];\n                const index = [];\n                let s;\n                let k;\n\n                parserInput.save();\n\n                const simpleProperty = parserInput.$re(/^([_a-zA-Z0-9-]+)\\s*:/);\n                if (simpleProperty) {\n                    name = [new(tree.Keyword)(simpleProperty[1])];\n                    parserInput.forget();\n                    return name;\n                }\n\n                function match(re) {\n                    const i = parserInput.i;\n                    const chunk = parserInput.$re(re);\n                    if (chunk) {\n                        index.push(i);\n                        return name.push(chunk[1]);\n                    }\n                }\n\n                match(/^(\\*?)/);\n                while (true) {\n                    if (!match(/^((?:[\\w-]+)|(?:[@\\$]\\{[\\w-]+\\}))/)) {\n                        break;\n                    }\n                }\n\n                if ((name.length > 1) && match(/^((?:\\+_|\\+)?)\\s*:/)) {\n                    parserInput.forget();\n\n                    // at last, we have the complete match now. move forward,\n                    // convert name particles to tree objects and return:\n                    if (name[0] === '') {\n                        name.shift();\n                        index.shift();\n                    }\n                    for (k = 0; k < name.length; k++) {\n                        s = name[k];\n                        name[k] = (s.charAt(0) !== '@' && s.charAt(0) !== '$') ?\n                            new(tree.Keyword)(s) :\n                            (s.charAt(0) === '@' ?\n                                new(tree.Variable)(`@${s.slice(2, -1)}`, index[k], fileInfo) :\n                                new(tree.Property)(`$${s.slice(2, -1)}`, index[k], fileInfo));\n                    }\n                    return name;\n                }\n                parserInput.restore();\n            }\n        }\n    };\n};\nParser.serializeVars = vars => {\n    let s = '';\n\n    for (const name in vars) {\n        if (Object.hasOwnProperty.call(vars, name)) {\n            const value = vars[name];\n            s += `${((name[0] === '@') ? '' : '@') + name}: ${value}${(String(value).slice(-1) === ';') ? '' : ';'}`;\n        }\n    }\n\n    return s;\n};\n\nexport default Parser;\n","import Anonymous from '../tree/anonymous';\nimport Keyword from '../tree/keyword';\n\nfunction boolean(condition) {\n    return condition ? Keyword.True : Keyword.False;\n}\n\nfunction If(condition, trueValue, falseValue) {\n    return condition ? trueValue\n        : (falseValue || new Anonymous);\n}\n\nexport default { boolean, 'if': If };\n","import Dimension from '../tree/dimension';\nimport Color from '../tree/color';\nimport Quoted from '../tree/quoted';\nimport Anonymous from '../tree/anonymous';\nlet colorFunctions;\n\nfunction clamp(val) {\n    return Math.min(1, Math.max(0, val));\n}\nfunction hsla(origColor, hsl) {\n    const color = colorFunctions.hsla(hsl.h, hsl.s, hsl.l, hsl.a);\n    if (color) {\n        if (origColor.value && \n            /^(rgb|hsl)/.test(origColor.value)) {\n            color.value = origColor.value;\n        } else {\n            color.value = 'rgb';\n        }\n        return color;\n    }\n}\nfunction toHSL(color) {\n    if (color.toHSL) {\n        return color.toHSL();\n    } else {\n        throw new Error('Argument cannot be evaluated to a color');\n    }\n}\n\nfunction toHSV(color) {\n    if (color.toHSV) {\n        return color.toHSV();\n    } else {\n        throw new Error('Argument cannot be evaluated to a color');\n    }\n}\n\nfunction number(n) {\n    if (n instanceof Dimension) {\n        return parseFloat(n.unit.is('%') ? n.value / 100 : n.value);\n    } else if (typeof n === 'number') {\n        return n;\n    } else {\n        throw {\n            type: 'Argument',\n            message: 'color functions take numbers as parameters'\n        };\n    }\n}\nfunction scaled(n, size) {\n    if (n instanceof Dimension && n.unit.is('%')) {\n        return parseFloat(n.value * size / 100);\n    } else {\n        return number(n);\n    }\n}\ncolorFunctions = {\n    rgb: function (r, g, b) {\n        const color = colorFunctions.rgba(r, g, b, 1.0);\n        if (color) {\n            color.value = 'rgb';\n            return color;\n        }\n    },\n    rgba: function (r, g, b, a) {\n        try {\n            if (r instanceof Color) {\n                if (g) {\n                    a = number(g);\n                } else {\n                    a = r.alpha;\n                }\n                return new Color(r.rgb, a, 'rgba');\n            }\n            const rgb = [r, g, b].map(c => scaled(c, 255));\n            a = number(a);\n            return new Color(rgb, a, 'rgba');\n        }\n        catch (e) {}\n    },\n    hsl: function (h, s, l) {\n        const color = colorFunctions.hsla(h, s, l, 1.0);\n        if (color) {\n            color.value = 'hsl';\n            return color;\n        }\n    },\n    hsla: function (h, s, l, a) {\n        try {\n            if (h instanceof Color) {\n                if (s) {\n                    a = number(s);\n                } else {\n                    a = h.alpha;\n                }\n                return new Color(h.rgb, a, 'hsla');\n            }\n\n            let m1;\n            let m2;\n\n            function hue(h) {\n                h = h < 0 ? h + 1 : (h > 1 ? h - 1 : h);\n                if (h * 6 < 1) {\n                    return m1 + (m2 - m1) * h * 6;\n                }\n                else if (h * 2 < 1) {\n                    return m2;\n                }\n                else if (h * 3 < 2) {\n                    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n                }\n                else {\n                    return m1;\n                }\n            }\n\n            h = (number(h) % 360) / 360;\n            s = clamp(number(s));l = clamp(number(l));a = clamp(number(a));\n\n            m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n            m1 = l * 2 - m2;\n\n            const rgb = [\n                hue(h + 1 / 3) * 255,\n                hue(h)       * 255,\n                hue(h - 1 / 3) * 255\n            ];\n            a = number(a);\n            return new Color(rgb, a, 'hsla');\n        }\n        catch (e) {}\n    },\n\n    hsv: function(h, s, v) {\n        return colorFunctions.hsva(h, s, v, 1.0);\n    },\n\n    hsva: function(h, s, v, a) {\n        h = ((number(h) % 360) / 360) * 360;\n        s = number(s);v = number(v);a = number(a);\n\n        let i;\n        let f;\n        i = Math.floor((h / 60) % 6);\n        f = (h / 60) - i;\n\n        const vs = [v,\n            v * (1 - s),\n            v * (1 - f * s),\n            v * (1 - (1 - f) * s)];\n        const perm = [[0, 3, 1],\n            [2, 0, 1],\n            [1, 0, 3],\n            [1, 2, 0],\n            [3, 1, 0],\n            [0, 1, 2]];\n\n        return colorFunctions.rgba(vs[perm[i][0]] * 255,\n            vs[perm[i][1]] * 255,\n            vs[perm[i][2]] * 255,\n            a);\n    },\n\n    hue: function (color) {\n        return new Dimension(toHSL(color).h);\n    },\n    saturation: function (color) {\n        return new Dimension(toHSL(color).s * 100, '%');\n    },\n    lightness: function (color) {\n        return new Dimension(toHSL(color).l * 100, '%');\n    },\n    hsvhue: function(color) {\n        return new Dimension(toHSV(color).h);\n    },\n    hsvsaturation: function (color) {\n        return new Dimension(toHSV(color).s * 100, '%');\n    },\n    hsvvalue: function (color) {\n        return new Dimension(toHSV(color).v * 100, '%');\n    },\n    red: function (color) {\n        return new Dimension(color.rgb[0]);\n    },\n    green: function (color) {\n        return new Dimension(color.rgb[1]);\n    },\n    blue: function (color) {\n        return new Dimension(color.rgb[2]);\n    },\n    alpha: function (color) {\n        return new Dimension(toHSL(color).a);\n    },\n    luma: function (color) {\n        return new Dimension(color.luma() * color.alpha * 100, '%');\n    },\n    luminance: function (color) {\n        const luminance =\n            (0.2126 * color.rgb[0] / 255) +\n                (0.7152 * color.rgb[1] / 255) +\n                (0.0722 * color.rgb[2] / 255);\n\n        return new Dimension(luminance * color.alpha * 100, '%');\n    },\n    saturate: function (color, amount, method) {\n        // filter: saturate(3.2);\n        // should be kept as is, so check for color\n        if (!color.rgb) {\n            return null;\n        }\n        const hsl = toHSL(color);\n\n        if (typeof method !== 'undefined' && method.value === 'relative') {\n            hsl.s +=  hsl.s * amount.value / 100;\n        }\n        else {\n            hsl.s += amount.value / 100;\n        }\n        hsl.s = clamp(hsl.s);\n        return hsla(color, hsl);\n    },\n    desaturate: function (color, amount, method) {\n        const hsl = toHSL(color);\n\n        if (typeof method !== 'undefined' && method.value === 'relative') {\n            hsl.s -=  hsl.s * amount.value / 100;\n        }\n        else {\n            hsl.s -= amount.value / 100;\n        }\n        hsl.s = clamp(hsl.s);\n        return hsla(color, hsl);\n    },\n    lighten: function (color, amount, method) {\n        const hsl = toHSL(color);\n\n        if (typeof method !== 'undefined' && method.value === 'relative') {\n            hsl.l +=  hsl.l * amount.value / 100;\n        }\n        else {\n            hsl.l += amount.value / 100;\n        }\n        hsl.l = clamp(hsl.l);\n        return hsla(color, hsl);\n    },\n    darken: function (color, amount, method) {\n        const hsl = toHSL(color);\n\n        if (typeof method !== 'undefined' && method.value === 'relative') {\n            hsl.l -=  hsl.l * amount.value / 100;\n        }\n        else {\n            hsl.l -= amount.value / 100;\n        }\n        hsl.l = clamp(hsl.l);\n        return hsla(color, hsl);\n    },\n    fadein: function (color, amount, method) {\n        const hsl = toHSL(color);\n\n        if (typeof method !== 'undefined' && method.value === 'relative') {\n            hsl.a +=  hsl.a * amount.value / 100;\n        }\n        else {\n            hsl.a += amount.value / 100;\n        }\n        hsl.a = clamp(hsl.a);\n        return hsla(color, hsl);\n    },\n    fadeout: function (color, amount, method) {\n        const hsl = toHSL(color);\n\n        if (typeof method !== 'undefined' && method.value === 'relative') {\n            hsl.a -=  hsl.a * amount.value / 100;\n        }\n        else {\n            hsl.a -= amount.value / 100;\n        }\n        hsl.a = clamp(hsl.a);\n        return hsla(color, hsl);\n    },\n    fade: function (color, amount) {\n        const hsl = toHSL(color);\n\n        hsl.a = amount.value / 100;\n        hsl.a = clamp(hsl.a);\n        return hsla(color, hsl);\n    },\n    spin: function (color, amount) {\n        const hsl = toHSL(color);\n        const hue = (hsl.h + amount.value) % 360;\n\n        hsl.h = hue < 0 ? 360 + hue : hue;\n\n        return hsla(color, hsl);\n    },\n    //\n    // Copyright (c) 2006-2009 Hampton Catlin, Natalie Weizenbaum, and Chris Eppstein\n    // http://sass-lang.com\n    //\n    mix: function (color1, color2, weight) {\n        if (!weight) {\n            weight = new Dimension(50);\n        }\n        const p = weight.value / 100.0;\n        const w = p * 2 - 1;\n        const a = toHSL(color1).a - toHSL(color2).a;\n\n        const w1 = (((w * a == -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n        const w2 = 1 - w1;\n\n        const rgb = [color1.rgb[0] * w1 + color2.rgb[0] * w2,\n            color1.rgb[1] * w1 + color2.rgb[1] * w2,\n            color1.rgb[2] * w1 + color2.rgb[2] * w2];\n\n        const alpha = color1.alpha * p + color2.alpha * (1 - p);\n\n        return new Color(rgb, alpha);\n    },\n    greyscale: function (color) {\n        return colorFunctions.desaturate(color, new Dimension(100));\n    },\n    contrast: function (color, dark, light, threshold) {\n        // filter: contrast(3.2);\n        // should be kept as is, so check for color\n        if (!color.rgb) {\n            return null;\n        }\n        if (typeof light === 'undefined') {\n            light = colorFunctions.rgba(255, 255, 255, 1.0);\n        }\n        if (typeof dark === 'undefined') {\n            dark = colorFunctions.rgba(0, 0, 0, 1.0);\n        }\n        // Figure out which is actually light and dark:\n        if (dark.luma() > light.luma()) {\n            const t = light;\n            light = dark;\n            dark = t;\n        }\n        if (typeof threshold === 'undefined') {\n            threshold = 0.43;\n        } else {\n            threshold = number(threshold);\n        }\n        if (color.luma() < threshold) {\n            return light;\n        } else {\n            return dark;\n        }\n    },\n    // Changes made in 2.7.0 - Reverted in 3.0.0\n    // contrast: function (color, color1, color2, threshold) {\n    //     // Return which of `color1` and `color2` has the greatest contrast with `color`\n    //     // according to the standard WCAG contrast ratio calculation.\n    //     // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n    //     // The threshold param is no longer used, in line with SASS.\n    //     // filter: contrast(3.2);\n    //     // should be kept as is, so check for color\n    //     if (!color.rgb) {\n    //         return null;\n    //     }\n    //     if (typeof color1 === 'undefined') {\n    //         color1 = colorFunctions.rgba(0, 0, 0, 1.0);\n    //     }\n    //     if (typeof color2 === 'undefined') {\n    //         color2 = colorFunctions.rgba(255, 255, 255, 1.0);\n    //     }\n    //     var contrast1, contrast2;\n    //     var luma = color.luma();\n    //     var luma1 = color1.luma();\n    //     var luma2 = color2.luma();\n    //     // Calculate contrast ratios for each color\n    //     if (luma > luma1) {\n    //         contrast1 = (luma + 0.05) / (luma1 + 0.05);\n    //     } else {\n    //         contrast1 = (luma1 + 0.05) / (luma + 0.05);\n    //     }\n    //     if (luma > luma2) {\n    //         contrast2 = (luma + 0.05) / (luma2 + 0.05);\n    //     } else {\n    //         contrast2 = (luma2 + 0.05) / (luma + 0.05);\n    //     }\n    //     if (contrast1 > contrast2) {\n    //         return color1;\n    //     } else {\n    //         return color2;\n    //     }\n    // },\n    argb: function (color) {\n        return new Anonymous(color.toARGB());\n    },\n    color: function(c) {\n        if ((c instanceof Quoted) &&\n            (/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})$/i.test(c.value))) {\n            const val = c.value.slice(1);\n            return new Color(val, undefined, `#${val}`);\n        }\n        if ((c instanceof Color) || (c = Color.fromKeyword(c.value))) {\n            c.value = undefined;\n            return c;\n        }\n        throw {\n            type:    'Argument',\n            message: 'argument must be a color keyword or 3|4|6|8 digit hex e.g. #FFF'\n        };\n    },\n    tint: function(color, amount) {\n        return colorFunctions.mix(colorFunctions.rgb(255, 255, 255), color, amount);\n    },\n    shade: function(color, amount) {\n        return colorFunctions.mix(colorFunctions.rgb(0, 0, 0), color, amount);\n    }\n};\n\nexport default colorFunctions;\n","import Color from '../tree/color';\n\n// Color Blending\n// ref: http://www.w3.org/TR/compositing-1\n\nfunction colorBlend(mode, color1, color2) {\n    const ab = color1.alpha;        // result\n\n    let // backdrop\n    cb;\n\n    const as = color2.alpha;\n\n    let // source\n    cs;\n\n    let ar;\n    let cr;\n    const r = [];\n\n    ar = as + ab * (1 - as);\n    for (let i = 0; i < 3; i++) {\n        cb = color1.rgb[i] / 255;\n        cs = color2.rgb[i] / 255;\n        cr = mode(cb, cs);\n        if (ar) {\n            cr = (as * cs + ab * (cb -\n                  as * (cb + cs - cr))) / ar;\n        }\n        r[i] = cr * 255;\n    }\n\n    return new Color(r, ar);\n}\n\nconst colorBlendModeFunctions = {\n    multiply: function(cb, cs) {\n        return cb * cs;\n    },\n    screen: function(cb, cs) {\n        return cb + cs - cb * cs;\n    },\n    overlay: function(cb, cs) {\n        cb *= 2;\n        return (cb <= 1) ?\n            colorBlendModeFunctions.multiply(cb, cs) :\n            colorBlendModeFunctions.screen(cb - 1, cs);\n    },\n    softlight: function(cb, cs) {\n        let d = 1;\n        let e = cb;\n        if (cs > 0.5) {\n            e = 1;\n            d = (cb > 0.25) ? Math.sqrt(cb)\n                : ((16 * cb - 12) * cb + 4) * cb;\n        }\n        return cb - (1 - 2 * cs) * e * (d - cb);\n    },\n    hardlight: function(cb, cs) {\n        return colorBlendModeFunctions.overlay(cs, cb);\n    },\n    difference: function(cb, cs) {\n        return Math.abs(cb - cs);\n    },\n    exclusion: function(cb, cs) {\n        return cb + cs - 2 * cb * cs;\n    },\n\n    // non-w3c functions:\n    average: function(cb, cs) {\n        return (cb + cs) / 2;\n    },\n    negation: function(cb, cs) {\n        return 1 - Math.abs(cb + cs - 1);\n    }\n};\n\nfor (const f in colorBlendModeFunctions) {\n    if (colorBlendModeFunctions.hasOwnProperty(f)) {\n        colorBlend[f] = colorBlend.bind(null, colorBlendModeFunctions[f]);\n    }\n}\n\nexport default colorBlend;\n","import Quoted from '../tree/quoted';\nimport URL from '../tree/url';\nimport * as utils from '../utils';\nimport logger from '../logger';\n\nexport default environment => {\n    \n    const fallback = (functionThis, node) => new URL(node, functionThis.index, functionThis.currentFileInfo).eval(functionThis.context);    \n\n    return { 'data-uri': function(mimetypeNode, filePathNode) {\n\n        if (!filePathNode) {\n            filePathNode = mimetypeNode;\n            mimetypeNode = null;\n        }\n\n        let mimetype = mimetypeNode && mimetypeNode.value;\n        let filePath = filePathNode.value;\n        const currentFileInfo = this.currentFileInfo;\n        const currentDirectory = currentFileInfo.rewriteUrls ?\n            currentFileInfo.currentDirectory : currentFileInfo.entryPath;\n\n        const fragmentStart = filePath.indexOf('#');\n        let fragment = '';\n        if (fragmentStart !== -1) {\n            fragment = filePath.slice(fragmentStart);\n            filePath = filePath.slice(0, fragmentStart);\n        }\n        const context = utils.clone(this.context);\n        context.rawBuffer = true;\n\n        const fileManager = environment.getFileManager(filePath, currentDirectory, context, environment, true);\n\n        if (!fileManager) {\n            return fallback(this, filePathNode);\n        }\n\n        let useBase64 = false;\n\n        // detect the mimetype if not given\n        if (!mimetypeNode) {\n\n            mimetype = environment.mimeLookup(filePath);\n\n            if (mimetype === 'image/svg+xml') {\n                useBase64 = false;\n            } else {\n                // use base 64 unless it's an ASCII or UTF-8 format\n                const charset = environment.charsetLookup(mimetype);\n                useBase64 = ['US-ASCII', 'UTF-8'].indexOf(charset) < 0;\n            }\n            if (useBase64) { mimetype += ';base64'; }\n        }\n        else {\n            useBase64 = /;base64$/.test(mimetype);\n        }\n\n        const fileSync = fileManager.loadFileSync(filePath, currentDirectory, context, environment);\n        if (!fileSync.contents) {\n            logger.warn(`Skipped data-uri embedding of ${filePath} because file not found`);\n            return fallback(this, filePathNode || mimetypeNode);\n        }\n        let buf = fileSync.contents;\n        if (useBase64 && !environment.encodeBase64) {\n            return fallback(this, filePathNode);\n        }\n\n        buf = useBase64 ? environment.encodeBase64(buf) : encodeURIComponent(buf);\n\n        const uri = `data:${mimetype},${buf}${fragment}`;\n\n        return new URL(new Quoted(`\"${uri}\"`, uri, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\n    }};\n};\n","import Comment from '../tree/comment';\nimport Dimension from '../tree/dimension';\nimport Declaration from '../tree/declaration';\nimport Expression from '../tree/expression';\nimport Ruleset from '../tree/ruleset';\nimport Selector from '../tree/selector';\nimport Element from '../tree/element';\nimport Quote from '../tree/quoted';\n\nconst getItemsFromNode = node => {\n    // handle non-array values as an array of length 1\n    // return 'undefined' if index is invalid\n    const items = Array.isArray(node.value) ?\n        node.value : Array(node);\n\n    return items;\n};\n\nexport default {\n    _SELF: function(n) {\n        return n;\n    },\n    extract: function(values, index) {\n        index = index.value - 1; // (1-based index)\n\n        return getItemsFromNode(values)[index];\n    },\n    length: function(values) {\n        return new Dimension(getItemsFromNode(values).length);\n    },\n    /**\n     * Creates a Less list of incremental values.\n     * Modeled after Lodash's range function, also exists natively in PHP\n     * \n     * @param {Dimension} [start=1]\n     * @param {Dimension} end  - e.g. 10 or 10px - unit is added to output\n     * @param {Dimension} [step=1] \n     */\n    range: function(start, end, step) {\n        let from;\n        let to;\n        let stepValue = 1;\n        const list = [];\n        if (end) {\n            to = end;\n            from = start.value;\n            if (step) {\n                stepValue = step.value;\n            }\n        }\n        else {\n            from = 1;\n            to = start;\n        }\n\n        for (let i = from; i <= to.value; i += stepValue) {\n            list.push(new Dimension(i, to.unit));\n        }\n\n        return new Expression(list);\n    },\n    each: function(list, rs) {\n        const rules = [];\n        let newRules;\n        let iterator;\n\n        if (list.value && !(list instanceof Quote)) {\n            if (Array.isArray(list.value)) {\n                iterator = list.value;\n            } else {\n                iterator = [list.value];\n            }\n        } else if (list.ruleset) {\n            iterator = list.ruleset.rules;\n        } else if (list.rules) {\n            iterator = list.rules;\n        } else if (Array.isArray(list)) {\n            iterator = list;\n        } else {\n            iterator = [list];\n        }\n\n        let valueName = '@value';\n        let keyName = '@key';\n        let indexName = '@index';\n\n        if (rs.params) {\n            valueName = rs.params[0] && rs.params[0].name;\n            keyName = rs.params[1] && rs.params[1].name;\n            indexName = rs.params[2] && rs.params[2].name;\n            rs = rs.rules;\n        } else {\n            rs = rs.ruleset;\n        }\n\n        for (let i = 0; i < iterator.length; i++) {\n            let key;\n            let value;\n            const item = iterator[i];\n            if (item instanceof Declaration) {\n                key = typeof item.name === 'string' ? item.name : item.name[0].value;\n                value = item.value;\n            } else {\n                key = new Dimension(i + 1);\n                value = item;\n            }\n\n            if (item instanceof Comment) {\n                continue;\n            }\n\n            newRules = rs.rules.slice(0);\n            if (valueName) {\n                newRules.push(new Declaration(valueName,\n                    value,\n                    false, false, this.index, this.currentFileInfo));\n            }\n            if (indexName) {\n                newRules.push(new Declaration(indexName,\n                    new Dimension(i + 1),\n                    false, false, this.index, this.currentFileInfo));\n            }\n            if (keyName) {\n                newRules.push(new Declaration(keyName,\n                    key,\n                    false, false, this.index, this.currentFileInfo));\n            }\n\n            rules.push(new Ruleset([ new(Selector)([ new Element(\"\", '&') ]) ],\n                newRules,\n                rs.strictImports,\n                rs.visibilityInfo()\n            ));\n        }\n\n        return new Ruleset([ new(Selector)([ new Element(\"\", '&') ]) ],\n                rules,\n                rs.strictImports,\n                rs.visibilityInfo()\n            ).eval(this.context);\n    }\n};\n","import Dimension from '../tree/dimension';\n\nconst MathHelper = (fn, unit, n) => {\n    if (!(n instanceof Dimension)) {\n        throw { type: 'Argument', message: 'argument must be a number' };\n    }\n    if (unit == null) {\n        unit = n.unit;\n    } else {\n        n = n.unify();\n    }\n    return new Dimension(fn(parseFloat(n.value)), unit);\n};\n\nexport default MathHelper;","import mathHelper from './math-helper.js';\n\nconst mathFunctions = {\n    // name,  unit\n    ceil:  null,\n    floor: null,\n    sqrt:  null,\n    abs:   null,\n    tan:   '',\n    sin:   '',\n    cos:   '',\n    atan:  'rad',\n    asin:  'rad',\n    acos:  'rad'\n};\n\nfor (const f in mathFunctions) {\n    if (mathFunctions.hasOwnProperty(f)) {\n        mathFunctions[f] = mathHelper.bind(null, Math[f], mathFunctions[f]);\n    }\n}\n\nmathFunctions.round = (n, f) => {\n    const fraction = typeof f === 'undefined' ? 0 : f.value;\n    return mathHelper(num => num.toFixed(fraction), null, n);\n};\n\nexport default mathFunctions;\n","import Dimension from '../tree/dimension';\nimport Anonymous from '../tree/anonymous';\nimport mathHelper from './math-helper.js';\n\nconst minMax = function (isMin, args) {\n    args = Array.prototype.slice.call(args);\n    switch (args.length) {\n        case 0: throw { type: 'Argument', message: 'one or more arguments required' };\n    }\n    let i; // key is the unit.toString() for unified Dimension values,\n    let j;\n    let current;\n    let currentUnified;\n    let referenceUnified;\n    let unit;\n    let unitStatic;\n    let unitClone;\n\n    const // elems only contains original argument values.\n    order  = [];\n\n    const values = {};\n    // value is the index into the order array.\n    for (i = 0; i < args.length; i++) {\n        current = args[i];\n        if (!(current instanceof Dimension)) {\n            if (Array.isArray(args[i].value)) {\n                Array.prototype.push.apply(args, Array.prototype.slice.call(args[i].value));\n            }\n            continue;\n        }\n        currentUnified = current.unit.toString() === '' && unitClone !== undefined ? new Dimension(current.value, unitClone).unify() : current.unify();\n        unit = currentUnified.unit.toString() === '' && unitStatic !== undefined ? unitStatic : currentUnified.unit.toString();\n        unitStatic = unit !== '' && unitStatic === undefined || unit !== '' && order[0].unify().unit.toString() === '' ? unit : unitStatic;\n        unitClone = unit !== '' && unitClone === undefined ? current.unit.toString() : unitClone;\n        j = values[''] !== undefined && unit !== '' && unit === unitStatic ? values[''] : values[unit];\n        if (j === undefined) {\n            if (unitStatic !== undefined && unit !== unitStatic) {\n                throw { type: 'Argument', message: 'incompatible types' };\n            }\n            values[unit] = order.length;\n            order.push(current);\n            continue;\n        }\n        referenceUnified = order[j].unit.toString() === '' && unitClone !== undefined ? new Dimension(order[j].value, unitClone).unify() : order[j].unify();\n        if ( isMin && currentUnified.value < referenceUnified.value ||\n            !isMin && currentUnified.value > referenceUnified.value) {\n            order[j] = current;\n        }\n    }\n    if (order.length == 1) {\n        return order[0];\n    }\n    args = order.map(function (a) { return a.toCSS(this.context); }).join(this.context.compress ? ',' : ', ');\n    return new Anonymous(`${isMin ? 'min' : 'max'}(${args})`);\n};\n\nexport default {\n    min: function(...args) {\n        return minMax(true, args);\n    },\n    max: function(...args) {\n        return minMax(false, args);\n    },\n    convert: function (val, unit) {\n        return val.convertTo(unit.value);\n    },\n    pi: function () {\n        return new Dimension(Math.PI);\n    },\n    mod: function(a, b) {\n        return new Dimension(a.value % b.value, a.unit);\n    },\n    pow: function(x, y) {\n        if (typeof x === 'number' && typeof y === 'number') {\n            x = new Dimension(x);\n            y = new Dimension(y);\n        } else if (!(x instanceof Dimension) || !(y instanceof Dimension)) {\n            throw { type: 'Argument', message: 'arguments must be numbers' };\n        }\n\n        return new Dimension(Math.pow(x.value, y.value), x.unit);\n    },\n    percentage: function (n) {\n        const result = mathHelper(num => num * 100, '%', n);\n\n        return result;\n    }\n};\n","import Quoted from '../tree/quoted';\nimport Anonymous from '../tree/anonymous';\nimport Quote from '../tree/quoted';\nimport JavaScript from '../tree/javascript';\n\nexport default {\n    e: function (str) {\n        return new Quote('\"', str instanceof JavaScript ? str.evaluated : str.value, true);\n    },\n    escape: function (str) {\n        return new Anonymous(\n            encodeURI(str.value).replace(/=/g, '%3D').replace(/:/g, '%3A').replace(/#/g, '%23').replace(/;/g, '%3B')\n                .replace(/\\(/g, '%28').replace(/\\)/g, '%29'));\n    },\n    replace: function (string, pattern, replacement, flags) {\n        let result = string.value;\n        replacement = (replacement.type === 'Quoted') ?\n            replacement.value : replacement.toCSS();\n        result = result.replace(new RegExp(pattern.value, flags ? flags.value : ''), replacement);\n        return new Quoted(string.quote || '', result, string.escaped);\n    },\n    '%': function (string /* arg, arg, ... */) {\n        const args = Array.prototype.slice.call(arguments, 1);\n        let result = string.value;\n\n        for (let i = 0; i < args.length; i++) {\n            /* jshint loopfunc:true */\n            result = result.replace(/%[sda]/i, token => {\n                const value = ((args[i].type === 'Quoted') &&\n                    token.match(/s/i)) ? args[i].value : args[i].toCSS();\n                return token.match(/[A-Z]$/) ? encodeURIComponent(value) : value;\n            });\n        }\n        result = result.replace(/%%/g, '%');\n        return new Quoted(string.quote || '', result, string.escaped);\n    }\n};\n","import Dimension from '../tree/dimension';\nimport Color from '../tree/color';\nimport Expression from '../tree/expression';\nimport Quoted from '../tree/quoted';\nimport URL from '../tree/url';\n\nexport default environment => {\n    return { 'svg-gradient': function(direction) {\n        let stops;\n        let gradientDirectionSvg;\n        let gradientType = 'linear';\n        let rectangleDimension = 'x=\"0\" y=\"0\" width=\"1\" height=\"1\"';\n        const renderEnv = {compress: false};\n        let returner;\n        const directionValue = direction.toCSS(renderEnv);\n        let i;\n        let color;\n        let position;\n        let positionValue;\n        let alpha;\n\n        function throwArgumentDescriptor() {\n            throw { type: 'Argument',\n                message: 'svg-gradient expects direction, start_color [start_position], [color position,]...,' +\n                            ' end_color [end_position] or direction, color list' };\n        }\n\n        if (arguments.length == 2) {\n            if (arguments[1].value.length < 2) {\n                throwArgumentDescriptor();\n            }\n            stops = arguments[1].value;\n        } else if (arguments.length < 3) {\n            throwArgumentDescriptor();\n        } else {\n            stops = Array.prototype.slice.call(arguments, 1);\n        }\n\n        switch (directionValue) {\n            case 'to bottom':\n                gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\"';\n                break;\n            case 'to right':\n                gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"';\n                break;\n            case 'to bottom right':\n                gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\"';\n                break;\n            case 'to top right':\n                gradientDirectionSvg = 'x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"0%\"';\n                break;\n            case 'ellipse':\n            case 'ellipse at center':\n                gradientType = 'radial';\n                gradientDirectionSvg = 'cx=\"50%\" cy=\"50%\" r=\"75%\"';\n                rectangleDimension = 'x=\"-50\" y=\"-50\" width=\"101\" height=\"101\"';\n                break;\n            default:\n                throw { type: 'Argument', message: 'svg-gradient direction must be \\'to bottom\\', \\'to right\\',' +\n                    ' \\'to bottom right\\', \\'to top right\\' or \\'ellipse at center\\'' };\n        }\n        returner = `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1 1\"><${gradientType}Gradient id=\"g\" ${gradientDirectionSvg}>`;\n\n        for (i = 0; i < stops.length; i += 1) {\n            if (stops[i] instanceof Expression) {\n                color = stops[i].value[0];\n                position = stops[i].value[1];\n            } else {\n                color = stops[i];\n                position = undefined;\n            }\n\n            if (!(color instanceof Color) || (!((i === 0 || i + 1 === stops.length) && position === undefined) && !(position instanceof Dimension))) {\n                throwArgumentDescriptor();\n            }\n            positionValue = position ? position.toCSS(renderEnv) : i === 0 ? '0%' : '100%';\n            alpha = color.alpha;\n            returner += `<stop offset=\"${positionValue}\" stop-color=\"${color.toRGB()}\"${alpha < 1 ? ` stop-opacity=\"${alpha}\"` : ''}/>`;\n        }\n        returner += `</${gradientType}Gradient><rect ${rectangleDimension} fill=\"url(#g)\" /></svg>`;\n\n        returner = encodeURIComponent(returner);\n\n        returner = `data:image/svg+xml,${returner}`;\n        return new URL(new Quoted(`'${returner}'`, returner, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\n    }};\n};\n","import Keyword from '../tree/keyword';\nimport DetachedRuleset from '../tree/detached-ruleset';\nimport Dimension from '../tree/dimension';\nimport Color from '../tree/color';\nimport Quoted from '../tree/quoted';\nimport Anonymous from '../tree/anonymous';\nimport URL from '../tree/url';\nimport Operation from '../tree/operation';\n\nconst isa = (n, Type) => (n instanceof Type) ? Keyword.True : Keyword.False;\nconst isunit = (n, unit) => {\n    if (unit === undefined) {\n        throw { type: 'Argument', message: 'missing the required second argument to isunit.' };\n    }\n    unit = typeof unit.value === 'string' ? unit.value : unit;\n    if (typeof unit !== 'string') {\n        throw { type: 'Argument', message: 'Second argument to isunit should be a unit or a string.' };\n    }\n    return (n instanceof Dimension) && n.unit.is(unit) ? Keyword.True : Keyword.False;\n};\n\nexport default {\n    isruleset: function (n) {\n        return isa(n, DetachedRuleset);\n    },\n    iscolor: function (n) {\n        return isa(n, Color);\n    },\n    isnumber: function (n) {\n        return isa(n, Dimension);\n    },\n    isstring: function (n) {\n        return isa(n, Quoted);\n    },\n    iskeyword: function (n) {\n        return isa(n, Keyword);\n    },\n    isurl: function (n) {\n        return isa(n, URL);\n    },\n    ispixel: function (n) {\n        return isunit(n, 'px');\n    },\n    ispercentage: function (n) {\n        return isunit(n, '%');\n    },\n    isem: function (n) {\n        return isunit(n, 'em');\n    },\n    isunit,\n    unit: function (val, unit) {\n        if (!(val instanceof Dimension)) {\n            throw { type: 'Argument',\n                message: `the first argument to unit must be a number${val instanceof Operation ? '. Have you forgotten parenthesis?' : ''}` };\n        }\n        if (unit) {\n            if (unit instanceof Keyword) {\n                unit = unit.value;\n            } else {\n                unit = unit.toCSS();\n            }\n        } else {\n            unit = '';\n        }\n        return new Dimension(val.value, unit);\n    },\n    'get-unit': function (n) {\n        return new Anonymous(n.unit);\n    }\n};\n","import functionRegistry from './function-registry';\nimport functionCaller from './function-caller';\n\nimport boolean from './boolean';\nimport defaultFunc from './default';\nimport color from './color';\nimport colorBlending from './color-blending';\nimport dataUri from './data-uri';\nimport list from './list';\nimport math from './math';\nimport number from './number';\nimport string from './string';\nimport svg from './svg';\nimport types from './types';\n\nexport default environment => {\n    const functions = { functionRegistry, functionCaller };\n\n    // register functions\n    functionRegistry.addMultiple(boolean);\n    functionRegistry.addMultiple(defaultFunc);\n    functionRegistry.addMultiple(color);\n    functionRegistry.addMultiple(colorBlending);\n    functionRegistry.addMultiple(dataUri(environment));\n    functionRegistry.addMultiple(list);\n    functionRegistry.addMultiple(math);\n    functionRegistry.addMultiple(number);\n    functionRegistry.addMultiple(string);\n    functionRegistry.addMultiple(svg(environment));\n    functionRegistry.addMultiple(types);\n\n    return functions;\n};\n","export default environment => {\n    class SourceMapOutput {\n        constructor(options) {\n            this._css = [];\n            this._rootNode = options.rootNode;\n            this._contentsMap = options.contentsMap;\n            this._contentsIgnoredCharsMap = options.contentsIgnoredCharsMap;\n            if (options.sourceMapFilename) {\n                this._sourceMapFilename = options.sourceMapFilename.replace(/\\\\/g, '/');\n            }\n            this._outputFilename = options.outputFilename;\n            this.sourceMapURL = options.sourceMapURL;\n            if (options.sourceMapBasepath) {\n                this._sourceMapBasepath = options.sourceMapBasepath.replace(/\\\\/g, '/');\n            }\n            if (options.sourceMapRootpath) {\n                this._sourceMapRootpath = options.sourceMapRootpath.replace(/\\\\/g, '/');\n                if (this._sourceMapRootpath.charAt(this._sourceMapRootpath.length - 1) !== '/') {\n                    this._sourceMapRootpath += '/';\n                }\n            } else {\n                this._sourceMapRootpath = '';\n            }\n            this._outputSourceFiles = options.outputSourceFiles;\n            this._sourceMapGeneratorConstructor = environment.getSourceMapGenerator();\n\n            this._lineNumber = 0;\n            this._column = 0;\n        }\n\n        removeBasepath(path) {\n            if (this._sourceMapBasepath && path.indexOf(this._sourceMapBasepath) === 0) {\n                path = path.substring(this._sourceMapBasepath.length);\n                if (path.charAt(0) === '\\\\' || path.charAt(0) === '/') {\n                    path = path.substring(1);\n                }\n            }\n\n            return path;\n        }\n\n        normalizeFilename(filename) {\n            filename = filename.replace(/\\\\/g, '/');\n            filename = this.removeBasepath(filename);\n            return (this._sourceMapRootpath || '') + filename;\n        }\n\n        add(chunk, fileInfo, index, mapLines) {\n            // ignore adding empty strings\n            if (!chunk) {\n                return;\n            }\n\n            let lines;\n            let sourceLines;\n            let columns;\n            let sourceColumns;\n            let i;\n\n            if (fileInfo && fileInfo.filename) {\n                let inputSource = this._contentsMap[fileInfo.filename];\n\n                // remove vars/banner added to the top of the file\n                if (this._contentsIgnoredCharsMap[fileInfo.filename]) {\n                    // adjust the index\n                    index -= this._contentsIgnoredCharsMap[fileInfo.filename];\n                    if (index < 0) { index = 0; }\n                    // adjust the source\n                    inputSource = inputSource.slice(this._contentsIgnoredCharsMap[fileInfo.filename]);\n                }\n\n                // ignore empty content\n                if (inputSource === undefined) {\n                    return;\n                }\n\n                inputSource = inputSource.substring(0, index);\n                sourceLines = inputSource.split('\\n');\n                sourceColumns = sourceLines[sourceLines.length - 1];\n            }\n\n            lines = chunk.split('\\n');\n            columns = lines[lines.length - 1];\n\n            if (fileInfo && fileInfo.filename) {\n                if (!mapLines) {\n                    this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + 1, column: this._column},\n                        original: { line: sourceLines.length, column: sourceColumns.length},\n                        source: this.normalizeFilename(fileInfo.filename)});\n                } else {\n                    for (i = 0; i < lines.length; i++) {\n                        this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + i + 1, column: i === 0 ? this._column : 0},\n                            original: { line: sourceLines.length + i, column: i === 0 ? sourceColumns.length : 0},\n                            source: this.normalizeFilename(fileInfo.filename)});\n                    }\n                }\n            }\n\n            if (lines.length === 1) {\n                this._column += columns.length;\n            } else {\n                this._lineNumber += lines.length - 1;\n                this._column = columns.length;\n            }\n\n            this._css.push(chunk);\n        }\n\n        isEmpty() {\n            return this._css.length === 0;\n        }\n\n        toCSS(context) {\n            this._sourceMapGenerator = new this._sourceMapGeneratorConstructor({ file: this._outputFilename, sourceRoot: null });\n\n            if (this._outputSourceFiles) {\n                for (const filename in this._contentsMap) {\n                    if (this._contentsMap.hasOwnProperty(filename)) {\n                        let source = this._contentsMap[filename];\n                        if (this._contentsIgnoredCharsMap[filename]) {\n                            source = source.slice(this._contentsIgnoredCharsMap[filename]);\n                        }\n                        this._sourceMapGenerator.setSourceContent(this.normalizeFilename(filename), source);\n                    }\n                }\n            }\n\n            this._rootNode.genCSS(context, this);\n\n            if (this._css.length > 0) {\n                let sourceMapURL;\n                const sourceMapContent = JSON.stringify(this._sourceMapGenerator.toJSON());\n\n                if (this.sourceMapURL) {\n                    sourceMapURL = this.sourceMapURL;\n                } else if (this._sourceMapFilename) {\n                    sourceMapURL = this._sourceMapFilename;\n                }\n                this.sourceMapURL = sourceMapURL;\n\n                this.sourceMap = sourceMapContent;\n            }\n\n            return this._css.join('');\n        }\n    }\n\n    return SourceMapOutput;\n};\n","export default (SourceMapOutput, environment) => {\n    class SourceMapBuilder {\n        constructor(options) {\n            this.options = options;\n        }\n\n        toCSS(rootNode, options, imports) {\n            const sourceMapOutput = new SourceMapOutput(\n                {\n                    contentsIgnoredCharsMap: imports.contentsIgnoredChars,\n                    rootNode,\n                    contentsMap: imports.contents,\n                    sourceMapFilename: this.options.sourceMapFilename,\n                    sourceMapURL: this.options.sourceMapURL,\n                    outputFilename: this.options.sourceMapOutputFilename,\n                    sourceMapBasepath: this.options.sourceMapBasepath,\n                    sourceMapRootpath: this.options.sourceMapRootpath,\n                    outputSourceFiles: this.options.outputSourceFiles,\n                    sourceMapGenerator: this.options.sourceMapGenerator,\n                    sourceMapFileInline: this.options.sourceMapFileInline\n                });\n\n            const css = sourceMapOutput.toCSS(options);\n            this.sourceMap = sourceMapOutput.sourceMap;\n            this.sourceMapURL = sourceMapOutput.sourceMapURL;\n            if (this.options.sourceMapInputFilename) {\n                this.sourceMapInputFilename = sourceMapOutput.normalizeFilename(this.options.sourceMapInputFilename);\n            }\n            if (this.options.sourceMapBasepath !== undefined && this.sourceMapURL !== undefined) {\n                this.sourceMapURL = sourceMapOutput.removeBasepath(this.sourceMapURL);\n            }\n            return css + this.getCSSAppendage();\n        }\n\n        getCSSAppendage() {\n\n            let sourceMapURL = this.sourceMapURL;\n            if (this.options.sourceMapFileInline) {\n                if (this.sourceMap === undefined) {\n                    return '';\n                }\n                sourceMapURL = `data:application/json;base64,${environment.encodeBase64(this.sourceMap)}`;\n            }\n\n            if (sourceMapURL) {\n                return `/*# sourceMappingURL=${sourceMapURL} */`;\n            }\n            return '';\n        }\n\n        getExternalSourceMap() {\n            return this.sourceMap;\n        }\n\n        setExternalSourceMap(sourceMap) {\n            this.sourceMap = sourceMap;\n        }\n\n        isInline() {\n            return this.options.sourceMapFileInline;\n        }\n\n        getSourceMapURL() {\n            return this.sourceMapURL;\n        }\n\n        getOutputFilename() {\n            return this.options.sourceMapOutputFilename;\n        }\n\n        getInputFilename() {\n            return this.sourceMapInputFilename;\n        }\n    }\n\n    return SourceMapBuilder;\n};\n","import contexts from './contexts';\nimport visitor from './visitors';\nimport tree from './tree';\n\nexport default (root, options = {}) => {\n    let evaldRoot;\n    let variables = options.variables;\n    const evalEnv = new contexts.Eval(options);\n\n    //\n    // Allows setting variables with a hash, so:\n    //\n    //   `{ color: new tree.Color('#f01') }` will become:\n    //\n    //   new tree.Declaration('@color',\n    //     new tree.Value([\n    //       new tree.Expression([\n    //         new tree.Color('#f01')\n    //       ])\n    //     ])\n    //   )\n    //\n    if (typeof variables === 'object' && !Array.isArray(variables)) {\n        variables = Object.keys(variables).map(k => {\n            let value = variables[k];\n\n            if (!(value instanceof tree.Value)) {\n                if (!(value instanceof tree.Expression)) {\n                    value = new tree.Expression([value]);\n                }\n                value = new tree.Value([value]);\n            }\n            return new tree.Declaration(`@${k}`, value, false, null, 0);\n        });\n        evalEnv.frames = [new tree.Ruleset(null, variables)];\n    }\n\n    const visitors = [\n            new visitor.JoinSelectorVisitor(),\n            new visitor.MarkVisibleSelectorsVisitor(true),\n            new visitor.ExtendVisitor(),\n            new visitor.ToCSSVisitor({compress: Boolean(options.compress)})\n        ];\n\n    const preEvalVisitors = [];\n    let v;\n    let visitorIterator;\n\n    /**\n     * first() / get() allows visitors to be added while visiting\n     * \n     * @todo Add scoping for visitors just like functions for @plugin; right now they're global\n     */\n    if (options.pluginManager) {\n        visitorIterator = options.pluginManager.visitor();\n        for (var i = 0; i < 2; i++) {\n            visitorIterator.first();\n            while ((v = visitorIterator.get())) {\n                if (v.isPreEvalVisitor) {\n                    if (i === 0 || preEvalVisitors.indexOf(v) === -1) {\n                        preEvalVisitors.push(v);\n                        v.run(root);\n                    }\n                }\n                else {\n                    if (i === 0 || visitors.indexOf(v) === -1) {\n                        if (v.isPreVisitor) {\n                            visitors.unshift(v);\n                        }\n                        else {\n                            visitors.push(v);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    evaldRoot = root.eval(evalEnv);\n\n    for (var i = 0; i < visitors.length; i++) {\n        visitors[i].run(evaldRoot);\n    }\n\n    // Run any remaining visitors added after eval pass\n    if (options.pluginManager) {\n        visitorIterator.first();\n        while ((v = visitorIterator.get())) {\n            if (visitors.indexOf(v) === -1 && preEvalVisitors.indexOf(v) === -1) {\n                v.run(evaldRoot);\n            }\n        }\n    }\n\n    return evaldRoot;\n};\n","import LessError from './less-error';\nimport transformTree from './transform-tree';\nimport logger from './logger';\n\nexport default SourceMapBuilder => {\n    class ParseTree {\n        constructor(root, imports) {\n            this.root = root;\n            this.imports = imports;\n        }\n\n        toCSS(options) {\n            let evaldRoot;\n            const result = {};\n            let sourceMapBuilder;\n            try {\n                evaldRoot = transformTree(this.root, options);\n            } catch (e) {\n                throw new LessError(e, this.imports);\n            }\n\n            try {\n                const compress = Boolean(options.compress);\n                if (compress) {\n                    logger.warn('The compress option has been deprecated. We recommend you use a dedicated css minifier, for instance see less-plugin-clean-css.');\n                }\n\n                const toCSSOptions = {\n                    compress,\n                    dumpLineNumbers: options.dumpLineNumbers,\n                    strictUnits: Boolean(options.strictUnits),\n                    numPrecision: 8};\n\n                if (options.sourceMap) {\n                    sourceMapBuilder = new SourceMapBuilder(options.sourceMap);\n                    result.css = sourceMapBuilder.toCSS(evaldRoot, toCSSOptions, this.imports);\n                } else {\n                    result.css = evaldRoot.toCSS(toCSSOptions);\n                }\n            } catch (e) {\n                throw new LessError(e, this.imports);\n            }\n\n            if (options.pluginManager) {\n                const postProcessors = options.pluginManager.getPostProcessors();\n                for (let i = 0; i < postProcessors.length; i++) {\n                    result.css = postProcessors[i].process(result.css, { sourceMap: sourceMapBuilder, options, imports: this.imports });\n                }\n            }\n            if (options.sourceMap) {\n                result.map = sourceMapBuilder.getExternalSourceMap();\n            }\n\n            result.imports = [];\n            for (const file in this.imports.files) {\n                if (this.imports.files.hasOwnProperty(file) && file !== this.imports.rootFilename) {\n                    result.imports.push(file);\n                }\n            }\n            return result;\n        }\n    }\n\n    return ParseTree;\n};\n","import contexts from './contexts';\nimport Parser from './parser/parser';\nimport LessError from './less-error';\nimport * as utils from './utils';\nimport logger from './logger';\n\nexport default environment => {\n    // FileInfo = {\n    //  'rewriteUrls' - option - whether to adjust URL's to be relative\n    //  'filename' - full resolved filename of current file\n    //  'rootpath' - path to append to normal URLs for this node\n    //  'currentDirectory' - path to the current file, absolute\n    //  'rootFilename' - filename of the base file\n    //  'entryPath' - absolute path to the entry file\n    //  'reference' - whether the file should not be output and only output parts that are referenced\n\n    class ImportManager {\n        constructor(less, context, rootFileInfo) {\n            this.less = less;\n            this.rootFilename = rootFileInfo.filename;\n            this.paths = context.paths || [];  // Search paths, when importing\n            this.contents = {};             // map - filename to contents of all the files\n            this.contentsIgnoredChars = {}; // map - filename to lines at the beginning of each file to ignore\n            this.mime = context.mime;\n            this.error = null;\n            this.context = context;\n            // Deprecated? Unused outside of here, could be useful.\n            this.queue = [];        // Files which haven't been imported yet\n            this.files = {};        // Holds the imported parse trees.\n        }\n\n        /**\n         * Add an import to be imported\n         * @param path - the raw path\n         * @param tryAppendExtension - whether to try appending a file extension (.less or .js if the path has no extension)\n         * @param currentFileInfo - the current file info (used for instance to work out relative paths)\n         * @param importOptions - import options\n         * @param callback - callback for when it is imported\n         */\n        push(path, tryAppendExtension, currentFileInfo, importOptions, callback) {\n            const importManager = this;\n            const pluginLoader = this.context.pluginManager.Loader;\n\n            this.queue.push(path);\n\n            const fileParsedFunc = (e, root, fullPath) => {\n                importManager.queue.splice(importManager.queue.indexOf(path), 1); // Remove the path from the queue\n\n                const importedEqualsRoot = fullPath === importManager.rootFilename;\n                if (importOptions.optional && e) {\n                    callback(null, {rules:[]}, false, null);\n                    logger.info(`The file ${fullPath} was skipped because it was not found and the import was marked optional.`);\n                }\n                else {\n                    // Inline imports aren't cached here.\n                    // If we start to cache them, please make sure they won't conflict with non-inline imports of the\n                    // same name as they used to do before this comment and the condition below have been added.\n                    if (!importManager.files[fullPath] && !importOptions.inline) {\n                        importManager.files[fullPath] = { root, options: importOptions };\n                    }\n                    if (e && !importManager.error) { importManager.error = e; }\n                    callback(e, root, importedEqualsRoot, fullPath);\n                }\n            };\n\n            const newFileInfo = {\n                rewriteUrls: this.context.rewriteUrls,\n                entryPath: currentFileInfo.entryPath,\n                rootpath: currentFileInfo.rootpath,\n                rootFilename: currentFileInfo.rootFilename\n            };\n\n            const fileManager = environment.getFileManager(path, currentFileInfo.currentDirectory, this.context, environment);\n\n            if (!fileManager) {\n                fileParsedFunc({ message: `Could not find a file-manager for ${path}` });\n                return;\n            }\n\n            const loadFileCallback = loadedFile => {\n                let plugin;\n                const resolvedFilename = loadedFile.filename;\n                const contents = loadedFile.contents.replace(/^\\uFEFF/, '');\n\n                // Pass on an updated rootpath if path of imported file is relative and file\n                // is in a (sub|sup) directory\n                //\n                // Examples:\n                // - If path of imported file is 'module/nav/nav.less' and rootpath is 'less/',\n                //   then rootpath should become 'less/module/nav/'\n                // - If path of imported file is '../mixins.less' and rootpath is 'less/',\n                //   then rootpath should become 'less/../'\n                newFileInfo.currentDirectory = fileManager.getPath(resolvedFilename);\n                if (newFileInfo.rewriteUrls) {\n                    newFileInfo.rootpath = fileManager.join(\n                        (importManager.context.rootpath || ''),\n                        fileManager.pathDiff(newFileInfo.currentDirectory, newFileInfo.entryPath));\n\n                    if (!fileManager.isPathAbsolute(newFileInfo.rootpath) && fileManager.alwaysMakePathsAbsolute()) {\n                        newFileInfo.rootpath = fileManager.join(newFileInfo.entryPath, newFileInfo.rootpath);\n                    }\n                }\n                newFileInfo.filename = resolvedFilename;\n\n                const newEnv = new contexts.Parse(importManager.context);\n\n                newEnv.processImports = false;\n                importManager.contents[resolvedFilename] = contents;\n\n                if (currentFileInfo.reference || importOptions.reference) {\n                    newFileInfo.reference = true;\n                }\n\n                if (importOptions.isPlugin) {\n                    plugin = pluginLoader.evalPlugin(contents, newEnv, importManager, importOptions.pluginArgs, newFileInfo);\n                    if (plugin instanceof LessError) {\n                        fileParsedFunc(plugin, null, resolvedFilename);\n                    }\n                    else {\n                        fileParsedFunc(null, plugin, resolvedFilename);\n                    }\n                } else if (importOptions.inline) {\n                    fileParsedFunc(null, contents, resolvedFilename);\n                } else {\n\n                    // import (multiple) parse trees apparently get altered and can't be cached.\n                    // TODO: investigate why this is\n                    if (importManager.files[resolvedFilename]\n                        && !importManager.files[resolvedFilename].options.multiple\n                        && !importOptions.multiple) {\n\n                        fileParsedFunc(null, importManager.files[resolvedFilename].root, resolvedFilename);\n                    }\n                    else {\n                        new Parser(newEnv, importManager, newFileInfo).parse(contents, (e, root) => {\n                            fileParsedFunc(e, root, resolvedFilename);\n                        });\n                    }\n                }\n            };\n            let promise;\n            const context = utils.clone(this.context);\n\n            if (tryAppendExtension) {\n                context.ext = importOptions.isPlugin ? '.js' : '.less';\n            }\n\n            if (importOptions.isPlugin) {\n                context.mime = 'application/javascript';\n                promise = pluginLoader.loadPlugin(path, currentFileInfo.currentDirectory, context, environment, fileManager);\n            }\n            else {\n                promise = fileManager.loadFile(path, currentFileInfo.currentDirectory, context, environment,\n                    (err, loadedFile) => {\n                        if (err) {\n                            fileParsedFunc(err);\n                        } else {\n                            loadFileCallback(loadedFile);\n                        }\n                    });\n            }\n            if (promise) {\n                promise.then(loadFileCallback, fileParsedFunc);\n            }\n        }\n    }\n\n    return ImportManager;\n};\n","let PromiseConstructor;\nimport * as utils from './utils';\n\nexport default (environment, ParseTree, ImportManager) => {\n    const render = function (input, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = utils.copyOptions(this.options, {});\n        }\n        else {\n            options = utils.copyOptions(this.options, options || {});\n        }\n\n        if (!callback) {\n            const self = this;\n            return new Promise((resolve, reject) => {\n                render.call(self, input, options, (err, output) => {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        resolve(output);\n                    }\n                });\n            });\n        } else {\n            this.parse(input, options, (err, root, imports, options) => {\n                if (err) { return callback(err); }\n\n                let result;\n                try {\n                    const parseTree = new ParseTree(root, imports);\n                    result = parseTree.toCSS(options);\n                }\n                catch (err) { return callback(err); }\n\n                callback(null, result);\n            });\n        }\n    };\n\n    return render;\n};\n","/**\n * Plugin Manager\n */\nclass PluginManager {\n    constructor(less) {\n        this.less = less;\n        this.visitors = [];\n        this.preProcessors = [];\n        this.postProcessors = [];\n        this.installedPlugins = [];\n        this.fileManagers = [];\n        this.iterator = -1;\n        this.pluginCache = {};\n        this.Loader = new less.PluginLoader(less);\n    }\n\n    /**\n     * Adds all the plugins in the array\n     * @param {Array} plugins\n     */\n    addPlugins(plugins) {\n        if (plugins) {\n            for (let i = 0; i < plugins.length; i++) {\n                this.addPlugin(plugins[i]);\n            }\n        }\n    }\n\n    /**\n     *\n     * @param plugin\n     * @param {String} filename\n     */\n    addPlugin(plugin, filename, functionRegistry) {\n        this.installedPlugins.push(plugin);\n        if (filename) {\n            this.pluginCache[filename] = plugin;\n        }\n        if (plugin.install) {\n            plugin.install(this.less, this, functionRegistry || this.less.functions.functionRegistry);\n        }\n    }\n\n    /**\n     *\n     * @param filename\n     */\n    get(filename) {\n        return this.pluginCache[filename];\n    }\n\n    /**\n     * Adds a visitor. The visitor object has options on itself to determine\n     * when it should run.\n     * @param visitor\n     */\n    addVisitor(visitor) {\n        this.visitors.push(visitor);\n    }\n\n    /**\n     * Adds a pre processor object\n     * @param {object} preProcessor\n     * @param {number} priority - guidelines 1 = before import, 1000 = import, 2000 = after import\n     */\n    addPreProcessor(preProcessor, priority) {\n        let indexToInsertAt;\n        for (indexToInsertAt = 0; indexToInsertAt < this.preProcessors.length; indexToInsertAt++) {\n            if (this.preProcessors[indexToInsertAt].priority >= priority) {\n                break;\n            }\n        }\n        this.preProcessors.splice(indexToInsertAt, 0, {preProcessor, priority});\n    }\n\n    /**\n     * Adds a post processor object\n     * @param {object} postProcessor\n     * @param {number} priority - guidelines 1 = before compression, 1000 = compression, 2000 = after compression\n     */\n    addPostProcessor(postProcessor, priority) {\n        let indexToInsertAt;\n        for (indexToInsertAt = 0; indexToInsertAt < this.postProcessors.length; indexToInsertAt++) {\n            if (this.postProcessors[indexToInsertAt].priority >= priority) {\n                break;\n            }\n        }\n        this.postProcessors.splice(indexToInsertAt, 0, {postProcessor, priority});\n    }\n\n    /**\n     *\n     * @param manager\n     */\n    addFileManager(manager) {\n        this.fileManagers.push(manager);\n    }\n\n    /**\n     *\n     * @returns {Array}\n     * @private\n     */\n    getPreProcessors() {\n        const preProcessors = [];\n        for (let i = 0; i < this.preProcessors.length; i++) {\n            preProcessors.push(this.preProcessors[i].preProcessor);\n        }\n        return preProcessors;\n    }\n\n    /**\n     *\n     * @returns {Array}\n     * @private\n     */\n    getPostProcessors() {\n        const postProcessors = [];\n        for (let i = 0; i < this.postProcessors.length; i++) {\n            postProcessors.push(this.postProcessors[i].postProcessor);\n        }\n        return postProcessors;\n    }\n\n    /**\n     *\n     * @returns {Array}\n     * @private\n     */\n    getVisitors() {\n        return this.visitors;\n    }\n\n    visitor() {\n        const self = this;\n        return {\n            first: function() {\n                self.iterator = -1;\n                return self.visitors[self.iterator];\n            },\n            get: function() {\n                self.iterator += 1;\n                return self.visitors[self.iterator];\n            }\n        };\n    }\n\n    /**\n     *\n     * @returns {Array}\n     * @private\n     */\n    getFileManagers() {\n        return this.fileManagers;\n    }\n}\n\nlet pm;\n\nconst PluginManagerFactory = (less, newFactory) => {\n        if (newFactory || !pm) {\n            pm = new PluginManager(less);\n        }\n        return pm;\n    };\n\n//\nexport default PluginManagerFactory;\n","let PromiseConstructor;\nimport contexts from './contexts';\nimport Parser from './parser/parser';\nimport PluginManager from './plugin-manager';\nimport LessError from './less-error';\nimport * as utils from './utils';\n\nexport default (environment, ParseTree, ImportManager) => {\n    const parse = function (input, options, callback) {\n\n        if (typeof options === 'function') {\n            callback = options;\n            options = utils.copyOptions(this.options, {});\n        }\n        else {\n            options = utils.copyOptions(this.options, options || {});\n        }\n\n        if (!callback) {\n            const self = this;\n            return new Promise((resolve, reject) => {\n                parse.call(self, input, options, (err, output) => {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        resolve(output);\n                    }\n                });\n            });\n        } else {\n            let context;\n            let rootFileInfo;\n            const pluginManager = new PluginManager(this, !options.reUsePluginManager);\n\n            options.pluginManager = pluginManager;\n\n            context = new contexts.Parse(options);\n\n            if (options.rootFileInfo) {\n                rootFileInfo = options.rootFileInfo;\n            } else {\n                const filename = options.filename || 'input';\n                const entryPath = filename.replace(/[^\\/\\\\]*$/, '');\n                rootFileInfo = {\n                    filename,\n                    rewriteUrls: context.rewriteUrls,\n                    rootpath: context.rootpath || '',\n                    currentDirectory: entryPath,\n                    entryPath,\n                    rootFilename: filename\n                };\n                // add in a missing trailing slash\n                if (rootFileInfo.rootpath && rootFileInfo.rootpath.slice(-1) !== '/') {\n                    rootFileInfo.rootpath += '/';\n                }\n            }\n\n            const imports = new ImportManager(this, context, rootFileInfo);\n            this.importManager = imports;\n\n            // TODO: allow the plugins to be just a list of paths or names\n            // Do an async plugin queue like lessc\n\n            if (options.plugins) {\n                options.plugins.forEach(plugin => {\n                    let evalResult;\n                    let contents;\n                    if (plugin.fileContent) {\n                        contents = plugin.fileContent.replace(/^\\uFEFF/, '');\n                        evalResult = pluginManager.Loader.evalPlugin(contents, context, imports, plugin.options, plugin.filename);\n                        if (evalResult instanceof LessError) {\n                            return callback(evalResult);\n                        }\n                    }\n                    else {\n                        pluginManager.addPlugin(plugin);\n                    }\n                });\n            }\n\n            new Parser(context, imports, rootFileInfo)\n                .parse(input, (e, root) => {\n                    if (e) { return callback(e); }\n                    callback(null, root, imports, options);\n                }, options);\n        }\n    };\n    return parse;\n};\n","import data from './data';\nimport tree from './tree';\nimport Environment from './environment/environment';\nimport AbstractFileManager from './environment/abstract-file-manager';\nimport AbstractPluginLoader from './environment/abstract-plugin-loader';\nimport visitors from './visitors';\nimport Parser from './parser/parser';\nimport Functions from './functions';\nimport contexts from './contexts';\nimport sourceMapOutput from './source-map-output';\nimport sourceMapBuilder from './source-map-builder';\nimport parseTree from './parse-tree';\nimport importManager from './import-manager';\nimport Render from './render';\nimport Parse from './parse';\nimport LessError from './less-error';\nimport transformTree from './transform-tree';\nimport * as utils from './utils';\nimport PluginManager from './plugin-manager';\nimport logger from './logger';\n\nexport default (environment, fileManagers) => {\n    const SourceMapOutput = sourceMapOutput(environment);\n    const SourceMapBuilder = sourceMapBuilder(SourceMapOutput, environment);\n    const ParseTree = parseTree(SourceMapBuilder);\n    const ImportManager = importManager(environment);\n    const render = Render(environment, ParseTree, ImportManager);\n    const parse = Parse(environment, ParseTree, ImportManager);\n    const environ = new Environment(environment, fileManagers);\n    const functions = Functions(environment);\n\n    const initial = {\n        version: [3, 9, 0],\n        data,\n        tree,\n        Environment,\n        AbstractFileManager,\n        AbstractPluginLoader,\n        environment: environ,\n        visitors,\n        Parser,\n        functions,\n        contexts,\n        SourceMapOutput,\n        SourceMapBuilder,\n        ParseTree,\n        ImportManager,\n        render,\n        parse,\n        LessError,\n        transformTree,\n        utils,\n        PluginManager,\n        logger\n    };\n\n    // Create a public API\n\n    const ctor = t => (function(...args) {\n        const obj = Object.create(t.prototype);\n        t.apply(obj, Array.prototype.slice.call(args, 0));\n        return obj;\n    });\n    let t;\n    const api = Object.create(initial);\n    for (const n in initial.tree) {\n        /* eslint guard-for-in: 0 */\n        t = initial.tree[n];\n        if (typeof t === 'function') {\n            api[n.toLowerCase()] = ctor(t);\n        }\n        else {\n            api[n] = Object.create(null);\n            for (const o in t) {\n                /* eslint guard-for-in: 0 */\n                api[n][o.toLowerCase()] = ctor(t[o]);\n            }\n        }\n    }\n\n    return api;\n};\n","/* global window, XMLHttpRequest */\n\nexport default (options, logger) => {\n\n    const AbstractFileManager = require('../less/environment/abstract-file-manager.js');\n\n    let fileCache = {};\n\n    // TODOS - move log somewhere. pathDiff and doing something similar in node. use pathDiff in the other browser file for the initial load\n    const FileManager = () => {\n    };\n\n    FileManager.prototype = new AbstractFileManager();\n\n    FileManager.prototype.alwaysMakePathsAbsolute = function alwaysMakePathsAbsolute() {\n        return true;\n    };\n    FileManager.prototype.join = function join(basePath, laterPath) {\n        if (!basePath) {\n            return laterPath;\n        }\n        return this.extractUrlParts(laterPath, basePath).path;\n    };\n    FileManager.prototype.doXHR = function doXHR(url, type, callback, errback) {\n\n        const xhr = new XMLHttpRequest();\n        const async = options.isFileProtocol ? options.fileAsync : true;\n\n        if (typeof xhr.overrideMimeType === 'function') {\n            xhr.overrideMimeType('text/css');\n        }\n        logger.debug(`XHR: Getting '${url}'`);\n        xhr.open('GET', url, async);\n        xhr.setRequestHeader('Accept', type || 'text/x-less, text/css; q=0.9, */*; q=0.5');\n        xhr.send(null);\n\n        function handleResponse(xhr, callback, errback) {\n            if (xhr.status >= 200 && xhr.status < 300) {\n                callback(xhr.responseText,\n                    xhr.getResponseHeader('Last-Modified'));\n            } else if (typeof errback === 'function') {\n                errback(xhr.status, url);\n            }\n        }\n\n        if (options.isFileProtocol && !options.fileAsync) {\n            if (xhr.status === 0 || (xhr.status >= 200 && xhr.status < 300)) {\n                callback(xhr.responseText);\n            } else {\n                errback(xhr.status, url);\n            }\n        } else if (async) {\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState == 4) {\n                    handleResponse(xhr, callback, errback);\n                }\n            };\n        } else {\n            handleResponse(xhr, callback, errback);\n        }\n    };\n    FileManager.prototype.supports = (filename, currentDirectory, options, environment) => true;\n\n    FileManager.prototype.clearFileCache = () => {\n        fileCache = {};\n    };\n\n    FileManager.prototype.loadFile = function loadFile(filename, currentDirectory, options, environment) {\n        // TODO: Add prefix support like less-node?\n        // What about multiple paths?\n\n        if (currentDirectory && !this.isPathAbsolute(filename)) {\n            filename = currentDirectory + filename;\n        }\n\n        filename = options.ext ? this.tryAppendExtension(filename, options.ext) : filename;\n\n        options = options || {};\n\n        // sheet may be set to the stylesheet for the initial load or a collection of properties including\n        // some context variables for imports\n        const hrefParts = this.extractUrlParts(filename, window.location.href);\n        const href      = hrefParts.url;\n        const self      = this;\n        \n        return new Promise((resolve, reject) => {\n            if (options.useFileCache && fileCache[href]) {\n                try {\n                    const lessText = fileCache[href];\n                    return resolve({ contents: lessText, filename: href, webInfo: { lastModified: new Date() }});\n                } catch (e) {\n                    return reject({ filename: href, message: `Error loading file ${href} error was ${e.message}` });\n                }\n            }\n\n            self.doXHR(href, options.mime, function doXHRCallback(data, lastModified) {\n                // per file cache\n                fileCache[href] = data;\n\n                // Use remote copy (re-parse)\n                resolve({ contents: data, filename: href, webInfo: { lastModified }});\n            }, function doXHRError(status, url) {\n                reject({ type: 'File', message: `'${url}' wasn't found (${status})`, href });\n            });\n        });\n    };\n\n    return FileManager;\n};\n","// TODO: Add tests for browser @plugin\n/* global window */\n\nimport AbstractPluginLoader from '../less/environment/abstract-plugin-loader.js';\n\n/**\n * Browser Plugin Loader\n */\nclass PluginLoader extends AbstractPluginLoader {\n    constructor(less) {\n        this.less = less;\n        // Should we shim this.require for browser? Probably not?\n    }\n\n    loadPlugin(filename, basePath, context, environment, fileManager) {\n        return new Promise((fulfill, reject) => {\n            fileManager.loadFile(filename, basePath, context, environment)\n                .then(fulfill).catch(reject);\n        });\n    }\n}\n\nexport default PluginLoader;\n\n","export default (less, options) => {\n    const logLevel_debug = 4;\n    const logLevel_info = 3;\n    const logLevel_warn = 2;\n    const logLevel_error = 1;\n\n    // The amount of logging in the javascript console.\n    // 3 - Debug, information and errors\n    // 2 - Information and errors\n    // 1 - Errors\n    // 0 - None\n    // Defaults to 2\n    options.logLevel = typeof options.logLevel !== 'undefined' ? options.logLevel : (options.env === 'development' ?  logLevel_info : logLevel_error);\n\n    if (!options.loggers) {\n        options.loggers = [{\n            debug: function(msg) {\n                if (options.logLevel >= logLevel_debug) {\n                    console.log(msg);\n                }\n            },\n            info: function(msg) {\n                if (options.logLevel >= logLevel_info) {\n                    console.log(msg);\n                }\n            },\n            warn: function(msg) {\n                if (options.logLevel >= logLevel_warn) {\n                    console.warn(msg);\n                }\n            },\n            error: function(msg) {\n                if (options.logLevel >= logLevel_error) {\n                    console.error(msg);\n                }\n            }\n        }];\n    }\n    for (let i = 0; i < options.loggers.length; i++) {\n        less.logger.addListener(options.loggers[i]);\n    }\n};\n","import * as utils from './utils';\nimport browser from './browser';\n\nexport default (window, less, options) => {\n\n    function errorHTML(e, rootHref) {\n        const id = `less-error-message:${utils.extractId(rootHref || '')}`;\n        const template = '<li><label>{line}</label><pre class=\"{class}\">{content}</pre></li>';\n        const elem = window.document.createElement('div');\n        let timer;\n        let content;\n        const errors = [];\n        const filename = e.filename || rootHref;\n        const filenameNoPath = filename.match(/([^\\/]+(\\?.*)?)$/)[1];\n\n        elem.id        = id;\n        elem.className = 'less-error-message';\n\n        content = `<h3>${e.type || 'Syntax'}Error: ${e.message || 'There is an error in your .less file'}</h3><p>in <a href=\"${filename}\">${filenameNoPath}</a> `;\n\n        const errorline = (e, i, classname) => {\n            if (e.extract[i] !== undefined) {\n                errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\n                    .replace(/\\{class\\}/, classname)\n                    .replace(/\\{content\\}/, e.extract[i]));\n            }\n        };\n\n        if (e.line) {\n            errorline(e, 0, '');\n            errorline(e, 1, 'line');\n            errorline(e, 2, '');\n            content += `on line ${e.line}, column ${e.column + 1}:</p><ul>${errors.join('')}</ul>`;\n        }\n        if (e.stack && (e.extract || options.logLevel >= 4)) {\n            content += `<br/>Stack Trace</br />${e.stack.split('\\n').slice(1).join('<br/>')}`;\n        }\n        elem.innerHTML = content;\n\n        // CSS for error messages\n        browser.createCSS(window.document, [\n            '.less-error-message ul, .less-error-message li {',\n            'list-style-type: none;',\n            'margin-right: 15px;',\n            'padding: 4px 0;',\n            'margin: 0;',\n            '}',\n            '.less-error-message label {',\n            'font-size: 12px;',\n            'margin-right: 15px;',\n            'padding: 4px 0;',\n            'color: #cc7777;',\n            '}',\n            '.less-error-message pre {',\n            'color: #dd6666;',\n            'padding: 4px 0;',\n            'margin: 0;',\n            'display: inline-block;',\n            '}',\n            '.less-error-message pre.line {',\n            'color: #ff0000;',\n            '}',\n            '.less-error-message h3 {',\n            'font-size: 20px;',\n            'font-weight: bold;',\n            'padding: 15px 0 5px 0;',\n            'margin: 0;',\n            '}',\n            '.less-error-message a {',\n            'color: #10a',\n            '}',\n            '.less-error-message .error {',\n            'color: red;',\n            'font-weight: bold;',\n            'padding-bottom: 2px;',\n            'border-bottom: 1px dashed red;',\n            '}'\n        ].join('\\n'), { title: 'error-message' });\n\n        elem.style.cssText = [\n            'font-family: Arial, sans-serif',\n            'border: 1px solid #e00',\n            'background-color: #eee',\n            'border-radius: 5px',\n            '-webkit-border-radius: 5px',\n            '-moz-border-radius: 5px',\n            'color: #e00',\n            'padding: 15px',\n            'margin-bottom: 15px'\n        ].join(';');\n\n        if (options.env === 'development') {\n            timer = setInterval(() => {\n                const document = window.document;\n                const body = document.body;\n                if (body) {\n                    if (document.getElementById(id)) {\n                        body.replaceChild(elem, document.getElementById(id));\n                    } else {\n                        body.insertBefore(elem, body.firstChild);\n                    }\n                    clearInterval(timer);\n                }\n            }, 10);\n        }\n    }\n\n    function removeErrorHTML(path) {\n        const node = window.document.getElementById(`less-error-message:${utils.extractId(path)}`);\n        if (node) {\n            node.parentNode.removeChild(node);\n        }\n    }\n\n    function removeErrorConsole(path) {\n        // no action\n    }\n\n    function removeError(path) {\n        if (!options.errorReporting || options.errorReporting === 'html') {\n            removeErrorHTML(path);\n        } else if (options.errorReporting === 'console') {\n            removeErrorConsole(path);\n        } else if (typeof options.errorReporting === 'function') {\n            options.errorReporting('remove', path);\n        }\n    }\n\n    function errorConsole(e, rootHref) {\n        const template = '{line} {content}';\n        const filename = e.filename || rootHref;\n        const errors = [];\n        let content = `${e.type || 'Syntax'}Error: ${e.message || 'There is an error in your .less file'} in ${filename}`;\n\n        const errorline = (e, i, classname) => {\n            if (e.extract[i] !== undefined) {\n                errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\n                    .replace(/\\{class\\}/, classname)\n                    .replace(/\\{content\\}/, e.extract[i]));\n            }\n        };\n\n        if (e.line) {\n            errorline(e, 0, '');\n            errorline(e, 1, 'line');\n            errorline(e, 2, '');\n            content += ` on line ${e.line}, column ${e.column + 1}:\\n${errors.join('\\n')}`;\n        }\n        if (e.stack && (e.extract || options.logLevel >= 4)) {\n            content += `\\nStack Trace\\n${e.stack}`;\n        }\n        less.logger.error(content);\n    }\n\n    function error(e, rootHref) {\n        if (!options.errorReporting || options.errorReporting === 'html') {\n            errorHTML(e, rootHref);\n        } else if (options.errorReporting === 'console') {\n            errorConsole(e, rootHref);\n        } else if (typeof options.errorReporting === 'function') {\n            options.errorReporting('add', e, rootHref);\n        }\n    }\n\n    return {\n        add: error,\n        remove: removeError\n    };\n};\n","// Cache system is a bit outdated and could do with work\n\nexport default (window, options, logger) => {\n    let cache = null;\n    if (options.env !== 'development') {\n        try {\n            cache = (typeof window.localStorage === 'undefined') ? null : window.localStorage;\n        } catch (_) {}\n    }\n    return {\n        setCSS: function(path, lastModified, modifyVars, styles) {\n            if (cache) {\n                logger.info(`saving ${path} to cache.`);\n                try {\n                    cache.setItem(path, styles);\n                    cache.setItem(`${path}:timestamp`, lastModified);\n                    if (modifyVars) {\n                        cache.setItem(`${path}:vars`, JSON.stringify(modifyVars));\n                    }\n                } catch (e) {\n                    // TODO - could do with adding more robust error handling\n                    logger.error(`failed to save \"${path}\" to local storage for caching.`);\n                }\n            }\n        },\n        getCSS: function(path, webInfo, modifyVars) {\n            const css       = cache && cache.getItem(path);\n            const timestamp = cache && cache.getItem(`${path}:timestamp`);\n            let vars      = cache && cache.getItem(`${path}:vars`);\n\n            modifyVars = modifyVars || {};\n            vars = vars || \"{}\"; // if not set, treat as the JSON representation of an empty object\n\n            if (timestamp && webInfo.lastModified &&\n                (new Date(webInfo.lastModified).valueOf() ===\n                    new Date(timestamp).valueOf()) &&\n                JSON.stringify(modifyVars) === vars) {\n                // Use local copy\n                return css;\n            }\n        }\n    };\n};\n","\nimport functionRegistry from './../less/functions/function-registry';\n\nexport default () => {\n    function imageSize() {\n        throw {\n            type: 'Runtime',\n            message: 'Image size functions are not supported in browser version of less'\n        };\n    }\n\n    const imageFunctions = {\n        'image-size': function(filePathNode) {\n            imageSize(this, filePathNode);\n            return -1;\n        },\n        'image-width': function(filePathNode) {\n            imageSize(this, filePathNode);\n            return -1;\n        },\n        'image-height': function(filePathNode) {\n            imageSize(this, filePathNode);\n            return -1;\n        }\n    };\n\n    functionRegistry.addMultiple(imageFunctions);\n};\n","//\n// index.js\n// Should expose the additional browser functions on to the less object\n//\nimport {addDataAttr} from './utils';\nimport lessRoot from '../less';\nimport browser from './browser';\nimport FM from './file-manager';\nimport PluginLoader from './plugin-loader';\nimport LogListener from './log-listener';\nimport ErrorReporting from './error-reporting';\nimport Cache from './cache';\nimport ImageSize from './image-size';\n\nexport default (window, options) => {\n    const document = window.document;\n    const less = lessRoot();\n\n    less.options = options;\n    const environment = less.environment;\n    const FileManager = FM(options, less.logger);\n    const fileManager = new FileManager();\n    environment.addFileManager(fileManager);\n    less.FileManager = FileManager;\n    less.PluginLoader = PluginLoader;\n\n    LogListener(less, options);\n    const errors = ErrorReporting(window, less, options);\n    const cache = less.cache = options.cache || Cache(window, options, less.logger);\n    ImageSize(less.environment);\n\n    // Setup user functions - Deprecate?\n    if (options.functions) {\n        less.functions.functionRegistry.addMultiple(options.functions);\n    }\n\n    const typePattern = /^text\\/(x-)?less$/;\n\n    function clone(obj) {\n        const cloned = {};\n        for (const prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                cloned[prop] = obj[prop];\n            }\n        }\n        return cloned;\n    }\n\n    // only really needed for phantom\n    function bind(func, thisArg) {\n        const curryArgs = Array.prototype.slice.call(arguments, 2);\n        return function() {\n            const args = curryArgs.concat(Array.prototype.slice.call(arguments, 0));\n            return func.apply(thisArg, args);\n        };\n    }\n\n    function loadStyles(modifyVars) {\n        const styles = document.getElementsByTagName('style');\n        let style;\n\n        for (let i = 0; i < styles.length; i++) {\n            style = styles[i];\n            if (style.type.match(typePattern)) {\n                const instanceOptions = clone(options);\n                instanceOptions.modifyVars = modifyVars;\n                const lessText = style.innerHTML || '';\n                instanceOptions.filename = document.location.href.replace(/#.*$/, '');\n\n                /* jshint loopfunc:true */\n                // use closure to store current style\n                less.render(lessText, instanceOptions,\n                        bind((style, e, result) => {\n                            if (e) {\n                                errors.add(e, 'inline');\n                            } else {\n                                style.type = 'text/css';\n                                if (style.styleSheet) {\n                                    style.styleSheet.cssText = result.css;\n                                } else {\n                                    style.innerHTML = result.css;\n                                }\n                            }\n                        }, null, style));\n            }\n        }\n    }\n\n    function loadStyleSheet(sheet, callback, reload, remaining, modifyVars) {\n\n        const instanceOptions = clone(options);\n        addDataAttr(instanceOptions, sheet);\n        instanceOptions.mime = sheet.type;\n\n        if (modifyVars) {\n            instanceOptions.modifyVars = modifyVars;\n        }\n\n        function loadInitialFileCallback(loadedFile) {\n            const data = loadedFile.contents;\n            const path = loadedFile.filename;\n            const webInfo = loadedFile.webInfo;\n\n            const newFileInfo = {\n                currentDirectory: fileManager.getPath(path),\n                filename: path,\n                rootFilename: path,\n                rewriteUrls: instanceOptions.rewriteUrls\n            };\n\n            newFileInfo.entryPath = newFileInfo.currentDirectory;\n            newFileInfo.rootpath = instanceOptions.rootpath || newFileInfo.currentDirectory;\n\n            if (webInfo) {\n                webInfo.remaining = remaining;\n\n                const css = cache.getCSS(path, webInfo, instanceOptions.modifyVars);\n                if (!reload && css) {\n                    webInfo.local = true;\n                    callback(null, css, data, sheet, webInfo, path);\n                    return;\n                }\n\n            }\n\n            // TODO add tests around how this behaves when reloading\n            errors.remove(path);\n\n            instanceOptions.rootFileInfo = newFileInfo;\n            less.render(data, instanceOptions, (e, result) => {\n                if (e) {\n                    e.href = path;\n                    callback(e);\n                } else {\n                    cache.setCSS(sheet.href, webInfo.lastModified, instanceOptions.modifyVars, result.css);\n                    callback(null, result.css, data, sheet, webInfo, path);\n                }\n            });\n        }\n\n        fileManager.loadFile(sheet.href, null, instanceOptions, environment)\n            .then(loadedFile => {\n                loadInitialFileCallback(loadedFile);\n            }).catch(err => {\n                console.log(err);\n                callback(err);\n            });\n\n    }\n\n    function loadStyleSheets(callback, reload, modifyVars) {\n        for (let i = 0; i < less.sheets.length; i++) {\n            loadStyleSheet(less.sheets[i], callback, reload, less.sheets.length - (i + 1), modifyVars);\n        }\n    }\n\n    function initRunningMode() {\n        if (less.env === 'development') {\n            less.watchTimer = setInterval(() => {\n                if (less.watchMode) {\n                    fileManager.clearFileCache();\n                    loadStyleSheets((e, css, _, sheet, webInfo) => {\n                        if (e) {\n                            errors.add(e, e.href || sheet.href);\n                        } else if (css) {\n                            browser.createCSS(window.document, css, sheet);\n                        }\n                    });\n                }\n            }, options.poll);\n        }\n    }\n\n    //\n    // Watch mode\n    //\n    less.watch   = function () {\n        if (!less.watchMode ) {\n            less.env = 'development';\n            initRunningMode();\n        }\n        this.watchMode = true;\n        return true;\n    };\n\n    less.unwatch = function () {clearInterval(less.watchTimer); this.watchMode = false; return false; };\n\n    //\n    // Synchronously get all <link> tags with the 'rel' attribute set to\n    // \"stylesheet/less\".\n    //\n    less.registerStylesheetsImmediately = () => {\n        const links = document.getElementsByTagName('link');\n        less.sheets = [];\n\n        for (let i = 0; i < links.length; i++) {\n            if (links[i].rel === 'stylesheet/less' || (links[i].rel.match(/stylesheet/) &&\n                (links[i].type.match(typePattern)))) {\n                less.sheets.push(links[i]);\n            }\n        }\n    };\n\n    //\n    // Asynchronously get all <link> tags with the 'rel' attribute set to\n    // \"stylesheet/less\", returning a Promise.\n    //\n    less.registerStylesheets = () => new Promise((resolve, reject) => {\n        less.registerStylesheetsImmediately();\n        resolve();\n    });\n\n    //\n    // With this function, it's possible to alter variables and re-render\n    // CSS without reloading less-files\n    //\n    less.modifyVars = record => less.refresh(true, record, false);\n\n    less.refresh = (reload, modifyVars, clearFileCache) => {\n        if ((reload || clearFileCache) && clearFileCache !== false) {\n            fileManager.clearFileCache();\n        }\n        return new Promise((resolve, reject) => {\n            let startTime;\n            let endTime;\n            let totalMilliseconds;\n            let remainingSheets;\n            startTime = endTime = new Date();\n\n            // Set counter for remaining unprocessed sheets\n            remainingSheets = less.sheets.length;\n\n            if (remainingSheets === 0) {\n\n                endTime = new Date();\n                totalMilliseconds = endTime - startTime;\n                less.logger.info('Less has finished and no sheets were loaded.');\n                resolve({\n                    startTime,\n                    endTime,\n                    totalMilliseconds,\n                    sheets: less.sheets.length\n                });\n\n            } else {\n                // Relies on less.sheets array, callback seems to be guaranteed to be called for every element of the array\n                loadStyleSheets((e, css, _, sheet, webInfo) => {\n                    if (e) {\n                        errors.add(e, e.href || sheet.href);\n                        reject(e);\n                        return;\n                    }\n                    if (webInfo.local) {\n                        less.logger.info(`Loading ${sheet.href} from cache.`);\n                    } else {\n                        less.logger.info(`Rendered ${sheet.href} successfully.`);\n                    }\n                    browser.createCSS(window.document, css, sheet);\n                    less.logger.info(`CSS for ${sheet.href} generated in ${new Date() - endTime}ms`);\n\n                    // Count completed sheet\n                    remainingSheets--;\n\n                    // Check if the last remaining sheet was processed and then call the promise\n                    if (remainingSheets === 0) {\n                        totalMilliseconds = new Date() - startTime;\n                        less.logger.info(`Less has finished. CSS generated in ${totalMilliseconds}ms`);\n                        resolve({\n                            startTime,\n                            endTime,\n                            totalMilliseconds,\n                            sheets: less.sheets.length\n                        });\n                    }\n                    endTime = new Date();\n                }, reload, modifyVars);\n            }\n\n            loadStyles(modifyVars);\n        });\n    };\n\n    less.refreshStyles = loadStyles;\n    return less;\n};\n","/**\n * Kicks off less and compiles any stylesheets\n * used in the browser distributed version of less\n * to kick-start less using the browser api\n */\n/* global window, document */\n\nimport defaultOptions from '../less/default-options';\nimport addDefaultOptions from './add-default-options';\nimport root from './index';\n\nconst options = defaultOptions();\n\nif (window.less) {\n    for (const key in window.less) {\n        if (window.less.hasOwnProperty(key)) {\n            options[key] = window.less[key];\n        }\n    }\n}\naddDefaultOptions(window, options);\n\noptions.plugins = options.plugins || [];\n\nif (window.LESS_PLUGINS) {\n    options.plugins = options.plugins.concat(window.LESS_PLUGINS);\n}\n\nconst less = root(window, options);\nexport default less;\n\nwindow.less = less;\n\nlet css;\nlet head;\nlet style;\n\n// Always restore page visibility\nfunction resolveOrReject(data) {\n    if (data.filename) {\n        console.warn(data);\n    }\n    if (!options.async) {\n        head.removeChild(style);\n    }\n}\n\nif (options.onReady) {\n    if (/!watch/.test(window.location.hash)) {\n        less.watch();\n    }\n    // Simulate synchronous stylesheet loading by hiding page rendering\n    if (!options.async) {\n        css = 'body { display: none !important }';\n        head = document.head || document.getElementsByTagName('head')[0];\n        style = document.createElement('style');\n\n        style.type = 'text/css';\n        if (style.styleSheet) {\n            style.styleSheet.cssText = css;\n        } else {\n            style.appendChild(document.createTextNode(css));\n        }\n\n        head.appendChild(style);\n    }\n    less.registerStylesheetsImmediately();\n    less.pageLoadFinished = less.refresh(less.env === 'development').then(resolveOrReject, resolveOrReject);\n}\n"],"names":["javascriptEnabled","depends","compress","lint","paths","color","strictImports","insecure","rootpath","rewriteUrls","ieCompat","math","strictUnits","globalVars","modifyVars","urlArgs","extractId","href","replace","addDataAttr","options","tag","opt","dataset","hasOwnProperty","JSON","parse","_","createCSS","document","styles","sheet","id","title","utils","oldStyleNode","getElementById","keepOldStyleNode","styleNode","createElement","setAttribute","media","styleSheet","appendChild","createTextNode","childNodes","length","firstChild","nodeValue","head","getElementsByTagName","nextEl","nextSibling","parentNode","insertBefore","removeChild","cssText","e","Error","currentScript","window","scripts","browser","isFileProtocol","undefined","test","location","protocol","async","fileAsync","poll","env","hostname","port","dumpLineNumbers","exec","hash","useFileCache","onReady","relativeUrls","duration","angle","Math","PI","colors","unitConversions","Node","parent","visibilityBlocks","nodeVisible","rootNode","parsed","self","Object","defineProperty","get","fileInfo","getIndex","nodes","set","node","Array","isArray","forEach","_index","_fileInfo","context","strs","genCSS","add","chunk","index","push","isEmpty","join","output","value","visitor","visit","op","a","b","precision","numPrecision","Number","toFixed","info","compare","type","i","numericCompare","Color","rgb","originalForm","match","map","c","parseInt","alpha","split","r","g","pow","toCSS","doNotCompress","colorFunction","args","fround","indexOf","clamp","round","concat","toHSL","h","s","l","toRGB","splitcolor","other","_operate","toHex","max","min","d","v","x","prototype","toString","fromKeyword","keyword","key","toLowerCase","slice","Paren","eval","Combinator","emptyOrWhitespace","trim","spaceOrEmpty","_noSpaceCombinators","Element","combinator","isVariable","currentFileInfo","visibilityInfo","copyVisibilityInfo","setParent","firstSelector","charAt","ALWAYS","PARENS_DIVISION","PARENS","STRICT_LEGACY","RewriteUrls","OFF","LOCAL","ALL","getLocation","inputStream","n","line","column","copyArray","arr","copy","clone","obj","cloned","prop","copyOptions","obj1","obj2","_defaults","opts","defaults","strictMath","Constants","newObj","CloneHelper","assign","merge","flattenArray","result","LessError","fileContentMap","currentFilename","call","filename","message","stack","input","contents","loc","col","callLine","lines","found","callExtract","extract","create","F","constructor","error","stylize","str","errorTxt","substr","Selector","elements","extendList","condition","evaldCondition","getElements","mixinElements_","visitArray","newSelector","mediaEmpty","els","parseNode","err","imports","el","sels","len","olen","mixinElements","shift","extend","createDerived","element","Value","Keyword","True","False","Anonymous","mapLines","rulesetLike","allowRoot","Boolean","MATH","Declaration","name","important","inline","variable","lastRule","mathBypass","prevMath","evaldValue","evalName","importantScope","importantResult","pop","debugInfo","ctx","lineSeparator","asComment","asMediaQuery","lineNumber","fileName","filenameWithProtocol","Comment","isLineComment","getDebugInfo","isCompressed","contexts","copyFromOriginal","original","destination","propertiesToCopy","parseCopyProperties","Parse","evalCopyProperties","Eval","frames","enterCalc","calcStack","inCalc","exitCalc","inParenthesis","parensStack","outOfParenthesis","mathOn","isMathOn","pathRequiresRewrite","path","isRelative","isPathLocalRelative","isPathRelative","rewritePath","newPath","normalizePath","segments","reverse","segment","makeRegistry","base","_data","func","addMultiple","functions","keys","getLocalFunctions","inherit","defaultFunc","value_","error_","reset","bind","Ruleset","selectors","rules","_lookups","_variables","_properties","selCnt","selector","hasVariable","hasOnePassingSelector","j","toParseSelectors","ruleset","rule","subRule","originalRuleset","root","firstRoot","allowImports","functionRegistry","globalFunctionRegistry","ctxFrames","unshift","ctxSelectors","evalImports","rsRules","evalFirst","mediaBlockCount","mediaBlocks","filter","splice","resetCache","isJustParentSelector","bubbleSelectors","importRules","makeImportant","lastSelector","_rulesets","reduce","variables","vars","decl","parseValue","properties","toParse","transformDeclaration","filtRules","isRuleset","foundMixins","rulesets","find","apply","charsetRuleNodes","ruleNodes","tabLevel","tabRuleStr","tabSetStr","sep","charsetNodeIndex","importNodeIndex","isCharset","pathCnt","pathSubCnt","currentLastRule","isRulesetLike","isVisible","joinSelector","createParenthesis","elementsToPak","originalElement","replacementParen","insideParent","createSelector","containedElement","addReplacementIntoPath","beginningPath","addPath","replacedElement","originalSelector","newSelectorPath","newJoinedSelector","parentEl","restOfPath","addAllReplacementsIntoPath","addPaths","mergeElementsOnToSelectors","sel","replaceParentSelector","inSelector","k","currentElements","newSelectors","selectorsMultiplied","hadParentSelector","findNestedSelector","maybeSelector","nestedSelector","nestedPaths","replaced","replacedNewSelectors","replacementSelector","deriveSelector","deriveFrom","newPaths","concatenated","AtRule","isRooted","createEmptySelectors","outputRuleset","mediaPathBackup","mediaBlocksBackup","mediaPath","ruleCnt","DetachedRuleset","Unit","numerator","denominator","backupUnit","sort","returnStr","is","unitString","toUpperCase","RegExp","callback","group","mapUnit","groupName","atomicUnit","counter","count","Dimension","unit","parseFloat","isNaN","isSingular","strValue","String","isLength","convertTo","usedUnits","cancel","unify","conversions","targetUnit","derivedConversions","applyUnit","Operation","operands","isSpaced","toColor","operate","Expression","noSpacing","returnValue","parens","parensInOp","doubleParen","functionCaller","item","subNodes","Call","calc","currentMathContext","funcCaller","FunctionCaller","isValid","columnNumber","Variable","evaluating","frame","fun","Property","property","mergeRules","pluginManager","less","visitors","ToCSSVisitor","_mergeRules","vArr","Attribute","Quoted","content","escaped","quote","variableRegex","propRegex","that","variableReplacement","propertyReplacement","iterativeReplace","regexp","replacementFnc","evaluatedValue","URL","val","isEvald","escapePath","delimiter","Media","features","evalTop","evalNested","multiMedia","permute","fragment","rest","Import","pathValue","getPath","css","isPlugin","reference","containsVariables","doEval","blocksVisibility","addVisibilityBlock","registry","skip","importedFilename","newImport","evalPath","JsEvalNode","evaluateJavaScript","expression","evalContext","jsify","Function","toJS","JavaScript","string","Assignment","Condition","negate","lvalue","rvalue","UnicodeDescriptor","Negative","Extend","option","object_id","next_id","parent_ids","allowBefore","allowAfter","selfElements","selectorElements","selfSelectors","VariableCall","detachedRuleset","callEval","NamespaceValue","ruleCall","lookups","lastDeclaration","substring","Definition","params","variadic","arity","optionalParameters","required","p","mixinEnv","evaldArguments","varargs","arg","isNamedFound","argIndex","argsLength","prependRule","_arguments","mixinFrames","evalParams","allArgsCnt","requiredArgsCnt","MixinCall","arguments","mixins","mixin","mixinPath","argValue","m","f","isRecursive","isOneFound","candidates","candidate","conditionResult","defaultResult","defFalseEitherCase","defNone","defTrue","defFalse","noArgumentsFilter","calcDefGroup","namespace","matchCondition","expand","matchArgs","MixinDefinition","format","newRules","evalCall","_setVisibilityToReplacement","replacement","msg","_fireEvent","warn","debug","addListener","listener","_listeners","removeListener","logFunction","environment","externalEnvironment","fileManagers","optionalFunctions","requiredFunctions","propName","environmentFunc","currentDirectory","isSync","logger","getFileManagers","fileManager","abstractFileManager","lastIndexOf","tryAppendExtension","ext","tryAppendLessExtension","supportsSync","alwaysMakePathsAbsolute","isPathAbsolute","basePath","laterPath","pathDiff","url","baseUrl","urlParts","extractUrlParts","baseUrlParts","urlDirectories","baseUrlDirectories","diff","hostPart","directories","urlPartsRegex","returner","rawDirectories","rawPath","fileUrl","AbstractPluginLoader","require","pluginOptions","loader","pluginObj","localModule","shortname","FileManager","trySetOptions","use","exports","registerPlugin","tree","validatePlugin","minVersion","compareVersion","addPlugin","plugin","setOptions","version","versionToString","aVersion","bVersion","versionString","plugins","printUsage","_visitArgs","visitDeeper","_hasIndexed","_noop","indexNodeTypes","ticker","child","typeIndex","Visitor","implementation","_implementation","_visitInCache","_visitOutCache","nodeTypeIndex","impl","funcOut","visitArgs","fnName","newNode","isReplacing","accept","nonReplacing","cnt","out","evald","flatten","nestedCnt","nestedItem","ImportSequencer","onSequencerEmpty","variableImports","_onSequencerEmpty","_currentDepth","importSequencer","importItem","isReady","tryRun","variableImport","ImportVisitor","importer","finish","_visitor","_importer","_finish","importCount","onceFileDetectionMap","recursionDetector","_sequencer","run","isFinished","visitImport","importNode","inlineCSS","importParent","isVariableImport","addVariableImport","processImportNode","evaldImportNode","evalForImport","multiple","importMultiple","onImported","sequencedOnImported","addImport","importedAtRoot","fullPath","importVisitor","isOptional","optional","duplicateImport","oldContext","visitDeclaration","declNode","visitDeclarationOut","visitAtRule","atRuleNode","visitAtRuleOut","visitMixinDefinition","mixinDefinitionNode","visitMixinDefinitionOut","visitRuleset","rulesetNode","visitRulesetOut","visitMedia","mediaNode","visitMediaOut","SetTreeVisibilityVisitor","visible","ensureVisibility","ensureInvisibility","ExtendFinderVisitor","allExtendsStack","allExtends","allSelectorsExtendList","extendOnEveryPath","selectorPath","selExtendList","allSelectorsExtend","foundExtends","findSelfSelectors","firstExtendOnThisSelectorPath","ProcessExtendsVisitor","extendFinder","extendIndices","doExtendChaining","newRoot","checkExtendsForNonMatched","indices","hasFoundMatches","extendsList","extendsListTarget","iterationCount","extendIndex","targetExtendIndex","matches","extendsToAdd","extendVisitor","targetExtend","newExtend","findMatch","selfSelector","extendSelector","extendChainCount","selectorOne","selectorTwo","ruleNode","selectorNode","pathIndex","selectorsToAdd","extendedSelectors","haystackSelectorPath","haystackSelectorIndex","hackstackSelector","hackstackElementIndex","haystackElement","targetCombinator","needleElements","potentialMatches","potentialMatch","matched","initialCombinator","isElementValuesEqual","finished","endPathIndex","endPathElementIndex","elementValue1","elementValue2","currentSelectorPathIndex","currentSelectorPathElementIndex","matchIndex","firstElement","newElements","currentValue","derived","newAllExtends","lastIndex","JoinSelectorVisitor","getIsOutput","joinSelectors","CSSVisitorUtils","_context","bodyRules","isSilent","owner","thing","originalRules","containsSilentNonBlockedChild","compiledRulesBody","keepOnlyVisibleChilds","removeVisibilityBlock","hasVisibleSelector","mixinNode","visitExtend","extendNode","visitComment","commentNode","resolveVisibility","visitAtRuleWithBody","visitAtRuleWithoutBody","visitAnonymous","anonymousNode","hasFakeRuleset","getBodyRules","nodeRules","charset","comment","checkValidNodes","isRoot","_compileRulesetPaths","nodeRuleCnt","_removeDuplicateRules","isVisibleRuleset","ruleCache","ruleList","ruleCSS","groups","groupsArr","space","comma","MarkVisibleSelectorsVisitor","ExtendVisitor","fail","level","parenLevel","lastOpening","lastOpeningParen","lastMultiComment","lastMultiCommentEndBrace","chunks","emitFrom","chunkerCurrentIndex","currentChunkStartIndex","cc","cc2","emitChunk","force","charCodeAt","fromCharCode","saveStack","furthest","furthestPossibleErrorMessage","current","currentPos","parserInput","CHARCODE_SPACE","CHARCODE_TAB","CHARCODE_LF","CHARCODE_CR","CHARCODE_PLUS","CHARCODE_COMMA","CHARCODE_FORWARD_SLASH","CHARCODE_9","skipWhitespace","oldi","oldj","curr","endIndex","mem","inp","nextChar","autoCommentAbsorb","nextNewLine","text","commentStore","nextStarSlash","save","restore","possibleErrorMessage","state","forget","isWhitespace","offset","pos","code","$re","tok","$char","$str","tokLength","$quoted","startChar","currentPosition","$parseUntil","returnVal","inComment","blockDepth","blockStack","parseGroups","startPos","lastPos","loop","testChar","char","expected","peek","peekChar","currentChar","prevChar","getInput","peekNotNumeric","start","chunkInput","failFunction","chunker","end","furthestReachedEnd","furthestChar","Parser","parsers","getParserInput","expect","expectChar","parseList","currentIndex","returnNodes","parser","endInfo","additionalData","ignored","preText","serializeVars","preProcessors","getPreProcessors","process","banner","contentsIgnoredChars","primary","processImports","extendRule","definition","declaration","variableCall","entities","atrule","foundSemiColon","mixinLookup","quoted","forceEscaped","isEscaped","customFuncCall","stop","ieAlpha","prevArgs","argsComma","argsSemiColon","isSemiColonSeparated","assignment","literal","dimension","unicodeDescriptor","entity","ch","variableCurly","curly","propertyCurly","colorKeyword","ud","javascript","js","escape","jsQuote","parsedName","inValue","ruleLookups","isRule","getLookup","hasParens","elem","elemIndex","re","isCall","expressions","expressionContainsNamed","nameLoop","hasSep","throwAwayComments","cond","argInfo","conditions","block","lookupValue","attribute","slashedCombinator","isLess","when","blockRuleset","hasDR","ruleProperty","permissiveValue","anonymousValue","untilTokens","done","testCurrentChar","dir","importOptions","mediaFeatures","o","optionName","importOption","mediaFeature","pluginArgs","nonVendorSpecificName","hasIdentifier","hasExpression","hasUnknown","hasBlock","sub","addition","multiplication","operation","operand","needsParens","logical","next","or","conditionAnd","insideCondition","negatedCondition","parenthesisCondition","atomicCondition","and","tryConditionFollowedByParenthesis","me","body","delim","simpleProperty","boolean","If","trueValue","falseValue","colorFunctions","hsla","origColor","hsl","toHSV","number","scaled","size","rgba","hue","m1","m2","hsv","hsva","floor","vs","perm","saturation","lightness","hsvhue","hsvsaturation","hsvvalue","red","green","blue","luma","luminance","saturate","amount","method","desaturate","lighten","darken","fadein","fadeout","fade","spin","mix","color1","color2","weight","w","w1","w2","greyscale","contrast","dark","light","threshold","t","argb","toARGB","tint","shade","colorBlend","mode","ab","cb","as","cs","ar","cr","colorBlendModeFunctions","multiply","screen","overlay","softlight","sqrt","hardlight","difference","abs","exclusion","average","negation","fallback","functionThis","mimetypeNode","filePathNode","mimetype","filePath","entryPath","fragmentStart","rawBuffer","getFileManager","useBase64","mimeLookup","charsetLookup","fileSync","loadFileSync","buf","encodeBase64","encodeURIComponent","uri","getItemsFromNode","items","_SELF","values","range","step","from","to","stepValue","list","each","rs","iterator","Quote","valueName","keyName","indexName","MathHelper","fn","mathFunctions","ceil","tan","sin","cos","atan","asin","acos","mathHelper","fraction","num","minMax","isMin","currentUnified","referenceUnified","unitStatic","unitClone","order","convert","pi","mod","y","percentage","evaluated","encodeURI","pattern","flags","token","direction","stops","gradientDirectionSvg","gradientType","rectangleDimension","renderEnv","directionValue","position","positionValue","throwArgumentDescriptor","isa","Type","isunit","isruleset","iscolor","isnumber","isstring","iskeyword","isurl","ispixel","ispercentage","isem","colorBlending","dataUri","svg","types","SourceMapOutput","_css","_rootNode","_contentsMap","contentsMap","_contentsIgnoredCharsMap","contentsIgnoredCharsMap","sourceMapFilename","_sourceMapFilename","_outputFilename","outputFilename","sourceMapURL","sourceMapBasepath","_sourceMapBasepath","sourceMapRootpath","_sourceMapRootpath","_outputSourceFiles","outputSourceFiles","_sourceMapGeneratorConstructor","getSourceMapGenerator","_lineNumber","_column","removeBasepath","sourceLines","columns","sourceColumns","inputSource","_sourceMapGenerator","addMapping","generated","source","normalizeFilename","file","sourceRoot","setSourceContent","sourceMapContent","stringify","toJSON","sourceMap","SourceMapBuilder","sourceMapOutput","sourceMapOutputFilename","sourceMapGenerator","sourceMapFileInline","sourceMapInputFilename","getCSSAppendage","evaldRoot","evalEnv","preEvalVisitors","visitorIterator","first","isPreEvalVisitor","isPreVisitor","ParseTree","sourceMapBuilder","transformTree","toCSSOptions","postProcessors","getPostProcessors","getExternalSourceMap","files","rootFilename","ImportManager","rootFileInfo","mime","queue","importManager","pluginLoader","Loader","fileParsedFunc","importedEqualsRoot","newFileInfo","loadFileCallback","loadedFile","resolvedFilename","newEnv","evalPlugin","promise","loadPlugin","loadFile","then","render","Promise","resolve","reject","parseTree","PluginManager","installedPlugins","pluginCache","PluginLoader","install","preProcessor","priority","indexToInsertAt","postProcessor","manager","pm","PluginManagerFactory","newFactory","reUsePluginManager","evalResult","fileContent","Render","environ","Environment","Functions","initial","data","AbstractFileManager","ctor","api","fileCache","doXHR","errback","xhr","XMLHttpRequest","overrideMimeType","open","setRequestHeader","send","handleResponse","status","responseText","getResponseHeader","onreadystatechange","readyState","supports","clearFileCache","hrefParts","lessText","webInfo","lastModified","Date","doXHRCallback","doXHRError","fulfill","logLevel_debug","logLevel_info","logLevel_warn","logLevel_error","logLevel","loggers","console","log","errorHTML","rootHref","template","timer","errors","filenameNoPath","className","errorline","classname","innerHTML","style","setInterval","replaceChild","clearInterval","removeErrorHTML","removeError","errorReporting","errorConsole","remove","cache","localStorage","setCSS","setItem","getCSS","getItem","timestamp","valueOf","imageSize","imageFunctions","lessRoot","FM","addFileManager","LogListener","ErrorReporting","Cache","ImageSize","typePattern","thisArg","curryArgs","loadStyles","instanceOptions","loadStyleSheet","reload","remaining","loadInitialFileCallback","local","loadStyleSheets","sheets","initRunningMode","watchTimer","watchMode","watch","unwatch","registerStylesheetsImmediately","links","rel","registerStylesheets","record","refresh","startTime","endTime","totalMilliseconds","remainingSheets","refreshStyles","defaultOptions","addDefaultOptions","LESS_PLUGINS","resolveOrReject","pageLoadFinished"],"mappings":"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"}